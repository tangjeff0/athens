{
"version":3,
"file":"module$node_modules$three_pathfinding$dist$three_pathfinding.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/three-pathfinding/dist/three-pathfinding.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three_pathfinding$dist$three_pathfinding\"] = function(global,require,module,exports) {\nvar e=function(){};e.computeCentroids=function(e){var t,n,r;for(t=0,n=e.faces.length;t<n;t++)(r=e.faces[t]).centroid=new THREE.Vector3(0,0,0),r.centroid.add(e.vertices[r.a]),r.centroid.add(e.vertices[r.b]),r.centroid.add(e.vertices[r.c]),r.centroid.divideScalar(3)},e.roundNumber=function(e,t){return Number(e.toFixed(t))},e.sample=function(e){return e[Math.floor(Math.random()*e.length)]},e.mergeVertexIds=function(e,t){var n=[];if(e.forEach(function(e){t.indexOf(e)>=0&&n.push(e)}),n.length<2)return[];n.includes(e[0])&&n.includes(e[e.length-1])&&e.push(e.shift()),n.includes(t[0])&&n.includes(t[t.length-1])&&t.push(t.shift()),n=[],e.forEach(function(e){t.includes(e)&&n.push(e)});for(var r=n[1],o=n[0],i=e.slice();i[0]!==r;)i.push(i.shift());for(var s=0,u=t.slice();u[0]!==o;)if(u.push(u.shift()),s++>10)throw new Error(\"Unexpected state\");return u.shift(),u.pop(),i=i.concat(u)},e.setPolygonCentroid=function(e,t){var n=new THREE.Vector3,r=t.vertices;e.vertexIds.forEach(function(e){n.add(r[e])}),n.divideScalar(e.vertexIds.length),e.centroid.copy(n)},e.cleanPolygon=function(e,t){for(var n=[],r=t.vertices,o=0;o<e.vertexIds.length;o++){var i,s,u,c=r[e.vertexIds[o]];0===o?(i=e.vertexIds[1],s=e.vertexIds[e.vertexIds.length-1]):o===e.vertexIds.length-1?(i=e.vertexIds[0],s=e.vertexIds[e.vertexIds.length-2]):(i=e.vertexIds[o+1],s=e.vertexIds[o-1]),u=r[s];var h=r[i].clone().sub(c),a=u.clone().sub(c),d=h.angleTo(a);if(d>Math.PI-.01&&d<Math.PI+.01){var f=[];e.neighbours.forEach(function(t){t.vertexIds.includes(e.vertexIds[o])||f.push(t)}),e.neighbours=f}else n.push(e.vertexIds[o])}e.vertexIds=n,this.setPolygonCentroid(e,t)},e.isConvex=function(e,t){var n=t.vertices;if(e.vertexIds.length<3)return!1;for(var r=!0,o=[],i=0;i<e.vertexIds.length;i++){var s,u,c=n[e.vertexIds[i]];0===i?(s=n[e.vertexIds[1]],u=n[e.vertexIds[e.vertexIds.length-1]]):i===e.vertexIds.length-1?(s=n[e.vertexIds[0]],u=n[e.vertexIds[e.vertexIds.length-2]]):(s=n[e.vertexIds[i+1]],u=n[e.vertexIds[i-1]]);var h=s.clone().sub(c),a=u.clone().sub(c),d=h.angleTo(a);if(d===Math.PI||0===d)return!1;var f=h.cross(a).y;o.push(f)}return o.forEach(function(e){0===e&&(r=!1)}),o.forEach(o[0]>0?function(e){e<0&&(r=!1)}:function(e){e>0&&(r=!1)}),r},e.distanceToSquared=function(e,t){var n=e.x-t.x,r=e.y-t.y,o=e.z-t.z;return n*n+r*r+o*o},e.isPointInPoly=function(e,t){for(var n=!1,r=-1,o=e.length,i=o-1;++r<o;i=r)(e[r].z<=t.z&&t.z<e[i].z||e[i].z<=t.z&&t.z<e[r].z)&&t.x<(e[i].x-e[r].x)*(t.z-e[r].z)/(e[i].z-e[r].z)+e[r].x&&(n=!n);return n},e.isVectorInPolygon=function(e,t,n){var r=1e5,o=-1e5,i=[];return t.vertexIds.forEach(function(e){r=Math.min(n[e].y,r),o=Math.max(n[e].y,o),i.push(n[e])}),!!(e.y<o+.5&&e.y>r-.5&&this.isPointInPoly(i,e))},e.triarea2=function(e,t,n){return(n.x-e.x)*(t.z-e.z)-(t.x-e.x)*(n.z-e.z)},e.vequal=function(e,t){return this.distanceToSquared(e,t)<1e-5};var t=function(e){this.content=[],this.scoreFunction=e};t.prototype.push=function(e){this.content.push(e),this.sinkDown(this.content.length-1)},t.prototype.pop=function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.bubbleUp(0)),e},t.prototype.remove=function(e){var t=this.content.indexOf(e),n=this.content.pop();t!==this.content.length-1&&(this.content[t]=n,this.scoreFunction(n)<this.scoreFunction(e)?this.sinkDown(t):this.bubbleUp(t))},t.prototype.size=function(){return this.content.length},t.prototype.rescoreElement=function(e){this.sinkDown(this.content.indexOf(e))},t.prototype.sinkDown=function(e){for(var t=this.content[e];e>0;){var n=(e+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(t)<this.scoreFunction(r)))break;this.content[n]=t,this.content[e]=r,e=n}},t.prototype.bubbleUp=function(e){for(var t=this.content.length,n=this.content[e],r=this.scoreFunction(n);;){var o=e+1<<1,i=o-1,s=null,u=void 0;if(i<t)(u=this.scoreFunction(this.content[i]))<r&&(s=i);if(o<t)this.scoreFunction(this.content[o])<(null===s?r:u)&&(s=o);if(null===s)break;this.content[e]=this.content[s],this.content[s]=n,e=s}};var n=function(){};n.init=function(e){for(var t=0;t<e.length;t++){var n=e[t];n.f=0,n.g=0,n.h=0,n.cost=1,n.visited=!1,n.closed=!1,n.parent=null}},n.cleanUp=function(e){for(var t=0;t<e.length;t++){var n=e[t];delete n.f,delete n.g,delete n.h,delete n.cost,delete n.visited,delete n.closed,delete n.parent}},n.heap=function(){return new t(function(e){return e.f})},n.search=function(e,t,n){this.init(e);var r=this.heap();for(r.push(t);r.size()>0;){var o=r.pop();if(o===n){for(var i=o,s=[];i.parent;)s.push(i),i=i.parent;return this.cleanUp(s),s.reverse()}o.closed=!0;for(var u=this.neighbours(e,o),c=0,h=u.length;c<h;c++){var a=u[c];if(!a.closed){var d=o.g+a.cost,f=a.visited;if(!f||d<a.g){if(a.visited=!0,a.parent=o,!a.centroid||!n.centroid)throw new Error(\"Unexpected state\");a.h=a.h||this.heuristic(a.centroid,n.centroid),a.g=d,a.f=a.g+a.h,f?r.rescoreElement(a):r.push(a)}}}}return[]},n.heuristic=function(t,n){return e.distanceToSquared(t,n)},n.neighbours=function(e,t){for(var n=[],r=0;r<t.neighbours.length;r++)n.push(e[t.neighbours[r]]);return n};var r=1,o=function(){};o.buildZone=function(t){var n=this,r=this._buildNavigationMesh(t),o={};r.vertices.forEach(function(t){t.x=e.roundNumber(t.x,2),t.y=e.roundNumber(t.y,2),t.z=e.roundNumber(t.z,2)}),o.vertices=r.vertices;var i=this._buildPolygonGroups(r);o.groups=[];var s=function(e,t){for(var n=0;n<e.length;n++)if(t===e[n])return n};return i.forEach(function(t){var r=[];t.forEach(function(o){var i=o.neighbours.map(function(e){return s(t,e)}),u=o.neighbours.map(function(e){return n._getSharedVerticesInOrder(o,e)});o.centroid.x=e.roundNumber(o.centroid.x,2),o.centroid.y=e.roundNumber(o.centroid.y,2),o.centroid.z=e.roundNumber(o.centroid.z,2),r.push({id:s(t,o),neighbours:i,vertexIds:o.vertexIds,centroid:o.centroid,portals:u})}),o.groups.push(r)}),o},o._buildNavigationMesh=function(t){return e.computeCentroids(t),t.mergeVertices(),this._buildPolygonsFromGeometry(t)},o._buildPolygonGroups=function(e){var t=[],n=0,r=function(e){e.neighbours.forEach(function(t){void 0===t.group&&(t.group=e.group,r(t))})};return e.polygons.forEach(function(e){void 0===e.group&&(e.group=n++,r(e)),t[e.group]||(t[e.group]=[]),t[e.group].push(e)}),t},o._buildPolygonNeighbours=function(e,t,n){var r=new Set,o=n.get(e.vertexIds[0]),i=n.get(e.vertexIds[1]),s=n.get(e.vertexIds[2]);o.forEach(function(e){(i.has(e)||s.has(e))&&r.add(t.polygons[e])}),i.forEach(function(e){s.has(e)&&r.add(t.polygons[e])}),e.neighbours=Array.from(r)},o._buildPolygonsFromGeometry=function(e){for(var t=this,n=[],o=e.vertices,i=e.faceVertexUvs,s=new Map,u=0;u<o.length;u++)s.set(u,new Set);e.faces.forEach(function(e){n.push({id:r++,vertexIds:[e.a,e.b,e.c],centroid:e.centroid,normal:e.normal,neighbours:[]}),s.get(e.a).add(n.length-1),s.get(e.b).add(n.length-1),s.get(e.c).add(n.length-1)});var c={polygons:n,vertices:o,faceVertexUvs:i};return n.forEach(function(e){t._buildPolygonNeighbours(e,c,s)}),c},o._getSharedVerticesInOrder=function(e,t){var n=e.vertexIds,r=t.vertexIds,o=new Set;if(n.forEach(function(e){r.includes(e)&&o.add(e)}),o.size<2)return[];o.has(n[0])&&o.has(n[n.length-1])&&n.push(n.shift()),o.has(r[0])&&o.has(r[r.length-1])&&r.push(r.shift());var i=[];return n.forEach(function(e){r.includes(e)&&i.push(e)}),i};var i=function(){this.portals=[]};i.prototype.push=function(e,t){void 0===t&&(t=e),this.portals.push({left:e,right:t})},i.prototype.stringPull=function(){var t,n,r,o=this.portals,i=[],s=0,u=0,c=0;n=o[0].left,r=o[0].right,i.push(t=o[0].left);for(var h=1;h<o.length;h++){var a=o[h].left,d=o[h].right;if(e.triarea2(t,r,d)<=0){if(!(e.vequal(t,r)||e.triarea2(t,n,d)>0)){i.push(n),n=t=n,r=t,u=s=u,c=s,h=s;continue}r=d,c=h}if(e.triarea2(t,n,a)>=0){if(!(e.vequal(t,n)||e.triarea2(t,r,a)<0)){i.push(r),n=t=r,r=t,u=s=c,c=s,h=s;continue}n=a,u=h}}return 0!==i.length&&e.vequal(i[i.length-1],o[o.length-1].left)||i.push(o[o.length-1].left),this.path=i,i};var s,u,c,h,a,d,f=function(){this.zones={}};f.createZone=function(e){return o.buildZone(e)},f.prototype.setZoneData=function(e,t){this.zones[e]=t},f.prototype.getGroup=function(t,n){if(!this.zones[t])return null;var r=null,o=Math.pow(50,2);return this.zones[t].groups.forEach(function(t,i){t.forEach(function(t){var s=e.distanceToSquared(t.centroid,n);s<o&&(r=i,o=s)})}),r},f.prototype.getRandomNode=function(t,n,r,o){if(!this.zones[t])return new THREE.Vector3;r=r||null,o=o||0;var i=[];return this.zones[t].groups[n].forEach(function(t){r&&o?e.distanceToSquared(r,t.centroid)<o*o&&i.push(t.centroid):i.push(t.centroid)}),e.sample(i)||new THREE.Vector3},f.prototype.getClosestNode=function(t,n,r,o){void 0===o&&(o=!1);var i=this.zones[n].vertices,s=null,u=Infinity;return this.zones[n].groups[r].forEach(function(n){var r=e.distanceToSquared(n.centroid,t);r<u&&(!o||e.isVectorInPolygon(t,n,i))&&(s=n,u=r)}),s},f.prototype.findPath=function(e,t,r,o){var s=this.zones[r].groups[o],u=this.zones[r].vertices,c=this.getClosestNode(e,r,o),h=this.getClosestNode(t,r,o,!0);if(!c||!h)return null;var a=n.search(s,c,h),d=function(e,t){for(var n=0;n<e.neighbours.length;n++)if(e.neighbours[n]===t.id)return e.portals[n]},f=new i;f.push(e);for(var l=0;l<a.length;l++){var v=a[l+1];if(v){var p=d(a[l],v);f.push(u[p[0]],u[p[1]])}}f.push(t),f.stringPull();var g=f.path.map(function(e){return new THREE.Vector3(e.x,e.y,e.z)});return g.shift(),g},f.prototype.clampStep=(c=new THREE.Vector3,h=new THREE.Plane,a=new THREE.Triangle,d=new THREE.Vector3,function(e,t,n,r,o,i){var f=this.zones[r].vertices,l=this.zones[r].groups[o],v=[n],p={};p[n.id]=0,s=void 0,d.set(0,0,0),u=Infinity,h.setFromCoplanarPoints(f[n.vertexIds[0]],f[n.vertexIds[1]],f[n.vertexIds[2]]),h.projectPoint(t,c),t.copy(c);for(var g=v.pop();g;g=v.pop()){a.set(f[g.vertexIds[0]],f[g.vertexIds[1]],f[g.vertexIds[2]]),a.closestPointToPoint(t,c),c.distanceToSquared(t)<u&&(s=g,d.copy(c),u=c.distanceToSquared(t));var x=p[g];if(!(x>2))for(var I=0;I<g.neighbours.length;I++){var b=l[g.neighbours[I]];b.id in p||(v.push(b),p[b.id]=x+1)}}return i.copy(d),s}),exports.Pathfinding=f;\n//# sourceMappingURL=three-pathfinding.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","e","computeCentroids","e.computeCentroids","n","r","t","faces","length","centroid","THREE","Vector3","add","vertices","a","b","c","divideScalar","roundNumber","e.roundNumber","Number","toFixed","sample","e.sample","Math","floor","random","mergeVertexIds","e.mergeVertexIds","forEach","indexOf","push","includes","shift","o","i","slice","s","u","Error","pop","concat","setPolygonCentroid","e.setPolygonCentroid","vertexIds","copy","cleanPolygon","e.cleanPolygon","h","clone","sub","d","angleTo","PI","f","neighbours","isConvex","e.isConvex","cross","y","distanceToSquared","e.distanceToSquared","x","z","isPointInPoly","e.isPointInPoly","isVectorInPolygon","e.isVectorInPolygon","min","max","triarea2","e.triarea2","vequal","e.vequal","content","scoreFunction","prototype","t.prototype.push","sinkDown","t.prototype.pop","bubbleUp","remove","t.prototype.remove","size","t.prototype.size","rescoreElement","t.prototype.rescoreElement","t.prototype.sinkDown","t.prototype.bubbleUp","init","n.init","g","cost","visited","closed","parent","cleanUp","n.cleanUp","heap","n.heap","search","n.search","reverse","heuristic","n.heuristic","n.neighbours","buildZone","o.buildZone","_buildNavigationMesh","_buildPolygonGroups","groups","map","_getSharedVerticesInOrder","id","portals","o._buildNavigationMesh","mergeVertices","_buildPolygonsFromGeometry","o._buildPolygonGroups","group","polygons","_buildPolygonNeighbours","o._buildPolygonNeighbours","Set","get","has","Array","from","o._buildPolygonsFromGeometry","faceVertexUvs","Map","set","normal","o._getSharedVerticesInOrder","i.prototype.push","left","right","stringPull","i.prototype.stringPull","path","zones","createZone","f.createZone","setZoneData","f.prototype.setZoneData","getGroup","f.prototype.getGroup","pow","getRandomNode","f.prototype.getRandomNode","getClosestNode","f.prototype.getClosestNode","Infinity","findPath","f.prototype.findPath","l","v","p","clampStep","Plane","Triangle","setFromCoplanarPoints","projectPoint","closestPointToPoint","I","Pathfinding"]
}
