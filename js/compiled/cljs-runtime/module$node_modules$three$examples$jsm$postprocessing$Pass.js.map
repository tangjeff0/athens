{
"version":3,
"file":"module$node_modules$three$examples$jsm$postprocessing$Pass.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUvHC,QAASA,KAAI,EAAG,CAId,IAAA,CAAKC,SAAL,CAFA,IAEA,CAFKC,OAEL,CAFe,CAAA,CAMf,KAAA,CAAKC,cAAL,CAFA,IAEA,CAFKC,KAEL,CAFa,CAAA,CANC,CAPhBC,MAAA,CAAOC,cAAP,CAAsBP,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CQ,MAAO,CAAA,CADoC,CAA7C,CAGAR,QAAA,CAAQC,IAAR,CAAeA,IAEf,KAAIQ,aAAeX,OAAA,CAAQ,8CAAR,CAanBQ,OAAA,CAAOI,MAAP,CAAcT,IAAd,CAAmBU,SAAnB,CAA8B,CAC5BC,QAASA,QAAgB,EAEzB,EAH4B,CAI5BC,OAAQA,QAAe,EAEvB,CACEC,OAAA,CAAQC,KAAR,CAAc,4DAAd,CADF,CAN4B,CAA9B,CAcAd,KAAA,CAAKe,cAAL;AAAsB,QAAS,EAAG,CAChC,IAAIC,OAAS,IAAIR,YAAJ,CAAiBS,kBAAjB,CAAoC,EAApC,CAAwC,CAAxC,CAA2C,CAA3C,CAA8C,EAA9C,CAAkD,CAAlD,CAAqD,CAArD,CAAb,CACIC,SAAW,IAAIV,YAAJ,CAAiBW,aAAjB,CAA+B,CAA/B,CAAkC,CAAlC,CADf,CAGIJ,eAAiBA,QAAuB,CAACK,QAAD,CAAW,CACrD,IAAA,CAAKC,KAAL,CAAa,IAAIb,YAAJ,CAAiBc,IAAjB,CAAsBJ,QAAtB,CAAgCE,QAAhC,CADwC,CAIvDf,OAAA,CAAOC,cAAP,CAAsBS,cAAtB,CAAqCL,SAArC,CAAgD,UAAhD,CAA4D,CAC1Da,IAAKA,QAAY,EAAG,CAClB,MAAO,KAAP,CAAYF,KAAZ,CAAkBD,QADA,CADsC,CAI1DI,IAAKA,QAAY,CAACjB,KAAD,CAAQ,CACvB,IAAA,CAAKc,KAAL,CAAWD,QAAX,CAAsBb,KADC,CAJiC,CAA5D,CAQAF,OAAA,CAAOI,MAAP,CAAcM,cAAd,CAA6BL,SAA7B,CAAwC,CACtCe,QAASA,QAAgB,EAAG,CAC1B,IAAA,CAAKJ,KAAL,CAAWH,QAAX,CAAoBO,OAApB,EAD0B,CADU,CAItCb,OAAQA,QAAe,CAACc,QAAD,CAAW,CAChCA,QAAA,CAASd,MAAT,CAAgB,IAAhB,CAAqBS,KAArB,CAA4BL,MAA5B,CADgC,CAJI,CAAxC,CAQA;MAAOD,eAxByB,CAAZ,EAnCiG;",
"sources":["node_modules/three/examples/jsm/postprocessing/Pass.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$postprocessing$Pass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pass = Pass;\n\nvar _threeModule = require(\"../../../build/three.module.js\");\n\nfunction Pass() {\n  // if set to true, the pass is processed by the composer\n  this.enabled = true; // if set to true, the pass indicates to swap read and write buffer after rendering\n\n  this.needsSwap = true; // if set to true, the pass clears its buffer before rendering\n\n  this.clear = false; // if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\n  this.renderToScreen = false;\n}\n\nObject.assign(Pass.prototype, {\n  setSize: function setSize()\n  /* width, height */\n  {},\n  render: function render()\n  /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */\n  {\n    console.error('THREE.Pass: .render() must be implemented in derived pass.');\n  }\n}); // Helper for passes that need to fill the viewport with a single quad.\n// Important: It's actually a hack to put FullScreenQuad into the Pass namespace. This is only\n// done to make examples/js code work. Normally, FullScreenQuad should be exported\n// from this module like Pass.\n\nPass.FullScreenQuad = function () {\n  var camera = new _threeModule.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  var geometry = new _threeModule.PlaneGeometry(2, 2);\n\n  var FullScreenQuad = function FullScreenQuad(material) {\n    this._mesh = new _threeModule.Mesh(geometry, material);\n  };\n\n  Object.defineProperty(FullScreenQuad.prototype, 'material', {\n    get: function get() {\n      return this._mesh.material;\n    },\n    set: function set(value) {\n      this._mesh.material = value;\n    }\n  });\n  Object.assign(FullScreenQuad.prototype, {\n    dispose: function dispose() {\n      this._mesh.geometry.dispose();\n    },\n    render: function render(renderer) {\n      renderer.render(this._mesh, camera);\n    }\n  });\n  return FullScreenQuad;\n}();\n};"],
"names":["shadow$provide","global","require","module","exports","Pass","needsSwap","enabled","renderToScreen","clear","Object","defineProperty","value","_threeModule","assign","prototype","setSize","render","console","error","FullScreenQuad","camera","OrthographicCamera","geometry","PlaneGeometry","material","_mesh","Mesh","get","set","dispose","renderer"]
}
