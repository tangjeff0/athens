{
"version":3,
"file":"module$node_modules$aframe_extras$src$loaders$object_model.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAavHD,MAAA,CAAOC,OAAP,CAAiBC,MAAA,CAAOC,iBAAP,CAAyB,cAAzB,CAAyC,CACxDC,OAAQ,CACNC,IAAa,CAAEC,KAAM,OAAR,CADP,CAENC,YAAa,CAAEC,QAAS,EAAX,CAFP,CADgD,CAMxDC,KAAMA,QAAS,EAAG,CAChB,IAAA,CAAKC,KAAL,CAAa,IADG,CANsC,CAUxDC,OAAQA,QAAS,EAAG,CAAA,IAAA,aAAA,IAAA,CAEZC,KAAO,IAAPA,CAAYA,IAClB,IAAKA,IAAL,CAAUP,GAAV,CAAA,CAEA,IAAA,CAAKQ,MAAL,EACA,KAAAC,OAAS,IAAIC,KAAJ,CAAUC,YACfJ,KAAJ,CAASL,WAAT,EAAsBO,MAAA,CAAOG,cAAP,CAAsBL,IAAtB,CAA2BL,WAA3B,CACtBO,OAAA,CAAOI,IAAP,CAAYN,IAAZ,CAAiBP,GAAjB,CAAsB,QAAA,CAACc,MAAD,CAAY,CAGhCA,MAAA,CAAOC,QAAP,CAAgB,QAAA,CAACC,CAAD,CAAO,CACjBA,CAAJ;AAAiBN,KAAjB,CAAuBO,WAAvB,EAAsCD,CAAtC,CAAwCE,QAAxC,GACEF,CADF,CACIE,QADJ,CACaC,QADb,CACwB,CAAC,EAAGH,CAAH,CAAKI,QAAL,EAAiBJ,CAAjB,CAAmBI,QAAnB,CAA4BC,KAA5B,EAAsC,EAAtC,EAA0CC,MADnE,CADqB,CAAvB,CAMA,aAAA,CAAKT,IAAL,CAAUC,MAAV,CATgC,CAAlC,CALA,CAHkB,CAVoC,CA+BxDD,KAAMA,QAAS,CAACR,KAAD,CAAQ,CACrB,IAAA,CAAKA,KAAL,CAAaA,KACb,KAAA,CAAKkB,EAAL,CAAQC,WAAR,CAAoB,MAApB,CAA4BnB,KAA5B,CACA,KAAA,CAAKkB,EAAL,CAAQE,IAAR,CAAa,cAAb,CAA6B,CAACC,OAAQ,MAAT,CAAiBrB,MAAOA,KAAxB,CAA7B,CAHqB,CA/BiC,CAqCxDG,OAAQA,QAAS,EAAG,CACd,IAAJ,CAASH,KAAT,EAAgB,IAAA,CAAKkB,EAAL,CAAQI,cAAR,CAAuB,MAAvB,CADE,CArCoC,CAAzC,CAbsG;",
"sources":["node_modules/aframe-extras/src/loaders/object-model.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$loaders$object_model\"] = function(global,require,module,exports) {\n/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, (object) => {\n\n      // Enable skinning, if applicable.\n      object.traverse((o) => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!((o.geometry && o.geometry.bones) || []).length;\n        }\n      });\n\n      this.load(object);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","AFRAME","registerComponent","schema","src","type","crossorigin","default","init","model","update","data","remove","loader","THREE","ObjectLoader","setCrossOrigin","load","object","traverse","o","SkinnedMesh","material","skinning","geometry","bones","length","el","setObject3D","emit","format","removeObject3D"]
}
