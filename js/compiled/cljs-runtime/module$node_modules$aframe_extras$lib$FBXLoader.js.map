{
"version":3,
"file":"module$node_modules$aframe_extras$lib$FBXLoader.js",
"lineCount":116,
"mappings":"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",
"sources":["node_modules/aframe-extras/lib/FBXLoader.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$lib$FBXLoader\"] = function(global,require,module,exports) {\n/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n * \thttp://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * \tBinary format specification:\n *\t\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nmodule.exports = THREE.FBXLoader = ( function () {\n\n\tvar fbxTree;\n\tvar connections;\n\tvar sceneGraph;\n\n\tfunction FBXLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t}\n\n\tFBXLoader.prototype = {\n\n\t\tconstructor: FBXLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\t\t\tvar self = this;\n\n\t\t\tvar resourceDirectory = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar scene = self.parse( buffer, resourceDirectory );\n\t\t\t\t\tonLoad( scene );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\t\tself.manager.itemError( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( FBXBuffer, resourceDirectory ) {\n\n\t\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t\t}\n\n\t\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t\t}\n\n\t\t\t//console.log( FBXTree );\n\n\t\t\tvar textureLoader = new THREE.TextureLoader( this.manager ).setPath( resourceDirectory ).setCrossOrigin( this.crossOrigin );\n\n\t\t\treturn new FBXTreeParser( textureLoader ).parse( fbxTree );\n\n\t\t}\n\n\t};\n\n\t// Parse the FBXTree object returned by the BinaryParser or TextParser and return a THREE.Group\n\tfunction FBXTreeParser( textureLoader ) {\n\n\t\tthis.textureLoader = textureLoader;\n\n\t}\n\n\tFBXTreeParser.prototype = {\n\n\t\tconstructor: FBXTreeParser,\n\n\t\tparse: function () {\n\n\t\t\tconnections = this.parseConnections();\n\n\t\t\tvar images = this.parseImages();\n\t\t\tvar textures = this.parseTextures( images );\n\t\t\tvar materials = this.parseMaterials( textures );\n\t\t\tvar deformers = this.parseDeformers();\n\t\t\tvar geometryMap = new GeometryParser().parse( deformers );\n\n\t\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\t\treturn sceneGraph;\n\n\t\t},\n\n\t\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t\t// and details the connection type\n\t\tparseConnections: function () {\n\n\t\t\tvar connectionMap = new Map();\n\n\t\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\t\tvar rawConnections = fbxTree.Connections.connections;\n\n\t\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\t\tvar fromID = rawConnection[ 0 ];\n\t\t\t\t\tvar toID = rawConnection[ 1 ];\n\t\t\t\t\tvar relationship = rawConnection[ 2 ];\n\n\t\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\t\tchildren: []\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn connectionMap;\n\n\t\t},\n\n\t\t// Parse FBXTree.Objects.Video for embedded image data\n\t\t// These images are connected to textures in FBXTree.Objects.Textures\n\t\t// via FBXTree.Connections.\n\t\tparseImages: function () {\n\n\t\t\tvar images = {};\n\t\t\tvar blobs = {};\n\n\t\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\t\tvar videoNodes = fbxTree.Objects.Video;\n\n\t\t\t\tfor ( var nodeID in videoNodes ) {\n\n\t\t\t\t\tvar videoNode = videoNodes[ nodeID ];\n\n\t\t\t\t\tvar id = parseInt( nodeID );\n\n\t\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\t\tvar arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\t\tvar base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\t\tvar image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var id in images ) {\n\n\t\t\t\tvar filename = images[ id ];\n\n\t\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\t// Parse embedded image data in FBXTree.Video.Content\n\t\tparseImage: function ( videoNode ) {\n\n\t\t\tvar content = videoNode.Content;\n\t\t\tvar fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\t\tvar extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\t\tvar type;\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'bmp':\n\n\t\t\t\t\ttype = 'image/bmp';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'jpg':\n\t\t\t\tcase 'jpeg':\n\n\t\t\t\t\ttype = 'image/jpeg';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'png':\n\n\t\t\t\t\ttype = 'image/png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tif':\n\n\t\t\t\t\ttype = 'image/tiff';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tga':\n\n\t\t\t\t\tif ( typeof THREE.TGALoader !== 'function' ) {\n\n\t\t\t\t\t\tconsole.warn( 'FBXLoader: THREE.TGALoader is required to load TGA textures' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( THREE.Loader.Handlers.get( '.tga' ) === null ) {\n\n\t\t\t\t\t\t\tTHREE.Loader.Handlers.add( /\\.tga$/i, new THREE.TGALoader() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttype = 'image/tga';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t\t} else { // Binary Format\n\n\t\t\t\tvar array = new Uint8Array( content );\n\t\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Texture\n\t\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t\t// to images in FBXTree.Objects.Video\n\t\tparseTextures: function ( images ) {\n\n\t\t\tvar textureMap = new Map();\n\n\t\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\t\tvar textureNodes = fbxTree.Objects.Texture;\n\t\t\t\tfor ( var nodeID in textureNodes ) {\n\n\t\t\t\t\tvar texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textureMap;\n\n\t\t},\n\n\t\t// Parse individual node in FBXTree.Objects.Texture\n\t\tparseTexture: function ( textureNode, images ) {\n\n\t\t\tvar texture = this.loadTexture( textureNode, images );\n\n\t\t\ttexture.ID = textureNode.id;\n\n\t\t\ttexture.name = textureNode.attrName;\n\n\t\t\tvar wrapModeU = textureNode.WrapModeU;\n\t\t\tvar wrapModeV = textureNode.WrapModeV;\n\n\t\t\tvar valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\t\tvar valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t\t// 0: repeat(default), 1: clamp\n\n\t\t\ttexture.wrapS = valueU === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = valueV === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n\t\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\t\tvar values = textureNode.Scaling.value;\n\n\t\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// load a texture specified as a blob or data URI, or via an external URL using THREE.TextureLoader\n\t\tloadTexture: function ( textureNode, images ) {\n\n\t\t\tvar fileName;\n\n\t\t\tvar currentPath = this.textureLoader.path;\n\n\t\t\tvar children = connections.get( textureNode.id ).children;\n\n\t\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar texture;\n\n\t\t\tvar extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\t\tif ( extension === 'tga' ) {\n\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( '.tga' );\n\n\t\t\t\tif ( loader === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGALoader not found, creating empty placeholder texture for', fileName );\n\t\t\t\t\ttexture = new THREE.Texture();\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t\t}\n\n\t\t\t} else if ( extension === 'psd' ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating empty placeholder texture for', fileName );\n\t\t\t\ttexture = new THREE.Texture();\n\n\t\t\t} else {\n\n\t\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t\t}\n\n\t\t\tthis.textureLoader.setPath( currentPath );\n\n\t\t\treturn texture;\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Material\n\t\tparseMaterials: function ( textureMap ) {\n\n\t\t\tvar materialMap = new Map();\n\n\t\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\t\tvar materialNodes = fbxTree.Objects.Material;\n\n\t\t\t\tfor ( var nodeID in materialNodes ) {\n\n\t\t\t\t\tvar material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materialMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Material\n\t\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t\t// FBX format currently only supports Lambert and Phong shading models\n\t\tparseMaterial: function ( materialNode, textureMap ) {\n\n\t\t\tvar ID = materialNode.id;\n\t\t\tvar name = materialNode.attrName;\n\t\t\tvar type = materialNode.ShadingModel;\n\n\t\t\t// Case where FBX wraps shading model in property object.\n\t\t\tif ( typeof type === 'object' ) {\n\n\t\t\t\ttype = type.value;\n\n\t\t\t}\n\n\t\t\t// Ignore unused materials which don't have any connections.\n\t\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\t\tvar parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\t\tvar material;\n\n\t\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new THREE.MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: 0x3300ff } );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.setValues( parameters );\n\t\t\tmaterial.name = name;\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\t// Parse FBX material and return parameters suitable for a three.js material\n\t\t// Also parse the texture map and return any textures associated with the material\n\t\tparseParameters: function ( materialNode, textureMap, ID ) {\n\n\t\t\tvar parameters = {};\n\n\t\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Diffuse ) {\n\n\t\t\t\tparameters.color = new THREE.Color().fromArray( materialNode.Diffuse.value );\n\n\t\t\t} else if ( materialNode.DiffuseColor && materialNode.DiffuseColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\t\tparameters.color = new THREE.Color().fromArray( materialNode.DiffuseColor.value );\n\n\t\t\t}\n\t\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Emissive ) {\n\n\t\t\t\tparameters.emissive = new THREE.Color().fromArray( materialNode.Emissive.value );\n\n\t\t\t} else if ( materialNode.EmissiveColor && materialNode.EmissiveColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\t\tparameters.emissive = new THREE.Color().fromArray( materialNode.EmissiveColor.value );\n\n\t\t\t}\n\t\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t\t}\n\t\t\tif ( materialNode.Opacity ) {\n\n\t\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t\t}\n\t\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\t\tparameters.transparent = true;\n\n\t\t\t}\n\t\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Shininess ) {\n\n\t\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t\t}\n\t\t\tif ( materialNode.Specular ) {\n\n\t\t\t\tparameters.specular = new THREE.Color().fromArray( materialNode.Specular.value );\n\n\t\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\t\tparameters.specular = new THREE.Color().fromArray( materialNode.SpecularColor.value );\n\n\t\t\t}\n\n\t\t\tvar self = this;\n\t\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\t\tvar type = child.relationship;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'Bump':\n\t\t\t\t\t\tparameters.bumpMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DiffuseColor':\n\t\t\t\t\t\tparameters.map = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\t\tparameters.displacementMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\t\tparameters.emissiveMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'NormalMap':\n\t\t\t\t\t\tparameters.normalMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\t\tparameters.envMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.envMap.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\t\tparameters.specularMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TransparentColor':\n\t\t\t\t\t\tparameters.alphaMap = self.getTexture( textureMap, child.ID );\n\t\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'AmbientColor':\n\t\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn parameters;\n\n\t\t},\n\n\t\t// get a texture from the textureMap for use by a material.\n\t\tgetTexture: function ( textureMap, id ) {\n\n\t\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t\t}\n\n\t\t\treturn textureMap.get( id );\n\n\t\t},\n\n\t\t// Parse nodes in FBXTree.Objects.Deformer\n\t\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\t\tparseDeformers: function () {\n\n\t\t\tvar skeletons = {};\n\t\t\tvar morphTargets = {};\n\n\t\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\t\tvar DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\t\tfor ( var nodeID in DeformerNodes ) {\n\n\t\t\t\t\tvar deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\t\tvar skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\t\tvar morphTarget = {\n\t\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\n\t\t\t\tskeletons: skeletons,\n\t\t\t\tmorphTargets: morphTargets,\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse single nodes in FBXTree.Objects.Deformer\n\t\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t\t// Each skin node represents a skeleton and each cluster node represents a bone\n\t\tparseSkeleton: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawBones = [];\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar boneNode = deformerNodes[ child.ID ];\n\n\t\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\t\tvar rawBone = {\n\n\t\t\t\t\tID: child.ID,\n\t\t\t\t\tindices: [],\n\t\t\t\t\tweights: [],\n\t\t\t\t\ttransform: new THREE.Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t\ttransformLink: new THREE.Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t\tlinkMode: boneNode.Mode,\n\n\t\t\t\t};\n\n\t\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t\t}\n\n\t\t\t\trawBones.push( rawBone );\n\n\t\t\t} );\n\n\t\t\treturn {\n\n\t\t\t\trawBones: rawBones,\n\t\t\t\tbones: []\n\n\t\t\t};\n\n\t\t},\n\n\t\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\t\tparseMorphTargets: function ( relationships, deformerNodes ) {\n\n\t\t\tvar rawMorphTargets = [];\n\n\t\t\tfor ( var i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\t\tif ( i === 8 ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: maximum of 8 morph targets supported. Ignoring additional targets.' );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar child = relationships.children[ i ];\n\n\t\t\t\tvar morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\t\tvar rawMorphTarget = {\n\n\t\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\t\tid: morphTargetNode.id,\n\t\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t\t};\n\n\t\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\t\tvar targetRelationships = connections.get( parseInt( child.ID ) );\n\n\t\t\t\ttargetRelationships.children.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === undefined ) rawMorphTarget.geoID = child.ID;\n\n\t\t\t\t} );\n\n\t\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t\t}\n\n\t\t\treturn rawMorphTargets;\n\n\t\t},\n\n\t\t// create the main THREE.Group() to be returned by the loader\n\t\tparseScene: function ( deformers, geometryMap, materialMap ) {\n\n\t\t\tsceneGraph = new THREE.Group();\n\n\t\t\tvar modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tvar self = this;\n\t\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\t\tvar modelNode = modelNodes[ model.ID ];\n\t\t\t\tself.setLookAtProperties( model, modelNode );\n\n\t\t\t\tvar parentConnections = connections.get( model.ID ).parents;\n\n\t\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\t\tvar parent = modelMap.get( connection.ID );\n\t\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( model.parent === null ) {\n\n\t\t\t\t\tsceneGraph.add( model );\n\n\t\t\t\t}\n\n\n\t\t\t} );\n\n\t\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\t\tthis.createAmbientLight();\n\n\t\t\tthis.setupMorphMaterials();\n\n\t\t\tvar animations = new AnimationParser().parse();\n\n\t\t\t// if all the models where already combined in a single group, just return that\n\t\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t\t}\n\n\t\t\tsceneGraph.animations = animations;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.Model\n\t\tparseModels: function ( skeletons, geometryMap, materialMap ) {\n\n\t\t\tvar modelMap = new Map();\n\t\t\tvar modelNodes = fbxTree.Objects.Model;\n\n\t\t\tfor ( var nodeID in modelNodes ) {\n\n\t\t\t\tvar id = parseInt( nodeID );\n\t\t\t\tvar node = modelNodes[ nodeID ];\n\t\t\t\tvar relationships = connections.get( id );\n\n\t\t\t\tvar model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\t\tif ( ! model ) {\n\n\t\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'LimbNode': // usually associated with a Bone, however if a Bone was not created we'll make a Group instead\n\t\t\t\t\t\tcase 'Null':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmodel = new THREE.Group();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.name = THREE.PropertyBinding.sanitizeNodeName( node.attrName );\n\t\t\t\t\tmodel.ID = id;\n\n\t\t\t\t}\n\n\t\t\t\tthis.setModelTransforms( model, node );\n\t\t\t\tmodelMap.set( id, model );\n\n\t\t\t}\n\n\t\t\treturn modelMap;\n\n\t\t},\n\n\t\tbuildSkeleton: function ( relationships, skeletons, id, name ) {\n\n\t\t\tvar bone = null;\n\n\t\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\t\tvar subBone = bone;\n\t\t\t\t\t\t\tbone = new THREE.Bone();\n\t\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\t\t\t\t\t\t\tbone.name = THREE.PropertyBinding.sanitizeNodeName( name );\n\t\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn bone;\n\n\t\t},\n\n\t\t// create a THREE.PerspectiveCamera or THREE.OrthographicCamera\n\t\tcreateCamera: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar cameraAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tcameraAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\t\tmodel = new THREE.Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type = 0;\n\t\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\t\ttype = 1;\n\n\t\t\t\t}\n\n\t\t\t\tvar nearClippingPlane = 1;\n\t\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t\t}\n\n\t\t\t\tvar farClippingPlane = 1000;\n\t\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight;\n\n\t\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar aspect = width / height;\n\n\t\t\t\tvar fov = 45;\n\t\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Perspective\n\t\t\t\t\t\tmodel = new THREE.PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\t\tmodel = new THREE.OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\t\tmodel = new THREE.Object3D();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\t// Create a THREE.DirectionalLight, THREE.PointLight or THREE.SpotLight\n\t\tcreateLight: function ( relationships ) {\n\n\t\t\tvar model;\n\t\t\tvar lightAttribute;\n\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tvar attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\t\tlightAttribute = attr;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( lightAttribute === undefined ) {\n\n\t\t\t\tmodel = new THREE.Object3D();\n\n\t\t\t} else {\n\n\t\t\t\tvar type;\n\n\t\t\t\t// LightType can be undefined for Point lights\n\t\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\t\ttype = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t\t}\n\n\t\t\t\tvar color = 0xffffff;\n\n\t\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\t\tcolor = new THREE.Color().fromArray( lightAttribute.Color.value );\n\n\t\t\t\t}\n\n\t\t\t\tvar intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t\t// light disabled\n\t\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\t\tintensity = 0;\n\n\t\t\t\t}\n\n\t\t\t\tvar distance = 0;\n\t\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\t\tdistance = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\t\tvar decay = 1;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 0: // Point\n\t\t\t\t\t\tmodel = new THREE.PointLight( color, intensity, distance, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1: // Directional\n\t\t\t\t\t\tmodel = new THREE.DirectionalLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2: // Spot\n\t\t\t\t\t\tvar angle = Math.PI / 3;\n\n\t\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\t\tangle = THREE.Math.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar penumbra = 0;\n\t\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\t\tpenumbra = THREE.Math.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodel = new THREE.SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a THREE.PointLight.' );\n\t\t\t\t\t\tmodel = new THREE.PointLight( color, intensity );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\t\tmodel.castShadow = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateMesh: function ( relationships, geometryMap, materialMap ) {\n\n\t\t\tvar model;\n\t\t\tvar geometry = null;\n\t\t\tvar material = null;\n\t\t\tvar materials = [];\n\n\t\t\t// get geometry and materials(s) from connections\n\t\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( materials.length > 1 ) {\n\n\t\t\t\tmaterial = materials;\n\n\t\t\t} else if ( materials.length > 0 ) {\n\n\t\t\t\tmaterial = materials[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial( { color: 0xcccccc } );\n\t\t\t\tmaterials.push( material );\n\n\t\t\t}\n\n\t\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t} );\n\n\t\t\t\tmodel = new THREE.SkinnedMesh( geometry, material );\n\n\t\t\t} else {\n\n\t\t\t\tmodel = new THREE.Mesh( geometry, material );\n\n\t\t\t}\n\n\t\t\treturn model;\n\n\t\t},\n\n\t\tcreateCurve: function ( relationships, geometryMap ) {\n\n\t\t\tvar geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\t\treturn geo;\n\n\t\t\t}, null );\n\n\t\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\t\tvar material = new THREE.LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n\t\t\treturn new THREE.Line( geometry, material );\n\n\t\t},\n\n\t\t// parse the model node for transform details and apply them to the model\n\t\tsetModelTransforms: function ( model, modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = parseInt( modelNode.RotationOrder.value );\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\tmodel.applyMatrix( transform );\n\n\t\t},\n\n\t\tsetLookAtProperties: function ( model, modelNode ) {\n\n\t\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\t\tvar children = connections.get( model.ID ).children;\n\n\t\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\t\tvar lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\t\tvar pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\t\tmodel.lookAt( new THREE.Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbindSkeleton: function ( skeletons, geometryMap, modelMap ) {\n\n\t\t\tvar bindMatrices = this.parsePoseNodes();\n\n\t\t\tfor ( var ID in skeletons ) {\n\n\t\t\t\tvar skeleton = skeletons[ ID ];\n\n\t\t\t\tvar parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\t\tvar geoID = parent.ID;\n\t\t\t\t\t\tvar geoRelationships = connections.get( geoID );\n\n\t\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\t\tvar model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\t\tmodel.bind( new THREE.Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparsePoseNodes: function () {\n\n\t\t\tvar bindMatrices = {};\n\n\t\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\t\tvar BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\t\tfor ( var nodeID in BindPoseNode ) {\n\n\t\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n\t\t\t\t\t\tvar poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new THREE.Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new THREE.Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bindMatrices;\n\n\t\t},\n\n\t\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\t\tcreateAmbientLight: function () {\n\n\t\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tvar ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tvar r = ambientColor[ 0 ];\n\t\t\t\tvar g = ambientColor[ 1 ];\n\t\t\t\tvar b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tvar color = new THREE.Color( r, g, b );\n\t\t\t\t\tsceneGraph.add( new THREE.AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tsetupMorphMaterials: function () {\n\n\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\tif ( child.geometry.morphAttributes.position || child.geometry.morphAttributes.normal ) {\n\n\t\t\t\t\t\tvar uuid = child.uuid;\n\t\t\t\t\t\tvar matUuid = child.material.uuid;\n\n\t\t\t\t\t\t// if a geometry has morph targets, it cannot share the material with other geometries\n\t\t\t\t\t\tvar sharedMat = false;\n\n\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\tif ( child.isMesh ) {\n\n\t\t\t\t\t\t\t\tif ( child.material.uuid === matUuid && child.uuid !== uuid ) sharedMat = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tif ( sharedMat === true ) child.material = child.material.clone();\n\n\t\t\t\t\t\tchild.material.morphTargets = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t};\n\n\t// parse Geometry data from FBXTree and return map of BufferGeometries\n\tfunction GeometryParser() {}\n\n\tGeometryParser.prototype = {\n\n\t\tconstructor: GeometryParser,\n\n\t\t// Parse nodes in FBXTree.Objects.Geometry\n\t\tparse: function ( deformers ) {\n\n\t\t\tvar geometryMap = new Map();\n\n\t\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\t\tvar geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\t\tfor ( var nodeID in geoNodes ) {\n\n\t\t\t\t\tvar relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\t\tvar geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometryMap;\n\n\t\t},\n\n\t\t// Parse single node in FBXTree.Objects.Geometry\n\t\tparseGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tswitch ( geoNode.attrType ) {\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\t\tparseMeshGeometry: function ( relationships, geoNode, deformers ) {\n\n\t\t\tvar skeletons = deformers.skeletons;\n\t\t\tvar morphTargets = deformers.morphTargets;\n\n\t\t\tvar modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t\t} );\n\n\t\t\t// don't create geometry if it is not associated with any models\n\t\t\tif ( modelNodes.length === 0 ) return;\n\n\t\t\tvar skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\t\treturn skeleton;\n\n\t\t\t}, null );\n\n\t\t\tvar morphTarget = relationships.children.reduce( function ( morphTarget, child ) {\n\n\t\t\t\tif ( morphTargets[ child.ID ] !== undefined ) morphTarget = morphTargets[ child.ID ];\n\n\t\t\t\treturn morphTarget;\n\n\t\t\t}, null );\n\n\t\t\t// TODO: if there is more than one model associated with the geometry, AND the models have\n\t\t\t// different geometric transforms, then this will cause problems\n\t\t\t// if ( modelNodes.length > 1 ) { }\n\n\t\t\t// For now just assume one model and get the preRotations from that\n\t\t\tvar modelNode = modelNodes[ 0 ];\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = modelNode.RotationOrder.value;\n\t\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\t\tvar transform = generateTransform( transformData );\n\n\t\t\treturn this.genGeometry( geoNode, skeleton, morphTarget, transform );\n\n\t\t},\n\n\t\t// Generate a THREE.BufferGeometry from a node in FBXTree.Objects.Geometry\n\t\tgenGeometry: function ( geoNode, skeleton, morphTarget, preTransform ) {\n\n\t\t\tvar geo = new THREE.BufferGeometry();\n\t\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\t\tvar geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\t\tvar buffers = this.genBuffers( geoInfo );\n\n\t\t\tvar positionAttribute = new THREE.Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\t\tpreTransform.applyToBufferAttribute( positionAttribute );\n\n\t\t\tgeo.addAttribute( 'position', positionAttribute );\n\n\t\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\t\tgeo.addAttribute( 'color', new THREE.Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t\t}\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tgeo.addAttribute( 'skinIndex', new THREE.Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\t\tgeo.addAttribute( 'skinWeight', new THREE.Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t\t// used later to bind the skeleton to the model\n\t\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t\t}\n\n\t\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\t\tvar normalAttribute = new THREE.Float32BufferAttribute( buffers.normal, 3 );\n\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( preTransform );\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normalAttribute );\n\n\t\t\t\tgeo.addAttribute( 'normal', normalAttribute );\n\n\t\t\t}\n\n\t\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\t\t// subsequent uv buffers are called 'uv1', 'uv2', ...\n\t\t\t\tvar name = 'uv' + ( i + 1 ).toString();\n\n\t\t\t\t// the first uv buffer is just called 'uv'\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tname = 'uv';\n\n\t\t\t\t}\n\n\t\t\t\tgeo.addAttribute( name, new THREE.Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t\t} );\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\t\tvar prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\t\tvar startIndex = 0;\n\n\t\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\t\tvar lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\t\tvar lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t\t// using one of them\n\t\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.addMorphTargets( geo, geoNode, morphTarget, preTransform );\n\n\t\t\treturn geo;\n\n\t\t},\n\n\t\tparseGeoNode: function ( geoNode, skeleton ) {\n\n\t\t\tvar geoInfo = {};\n\n\t\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\t\tgeoInfo.uv = [];\n\n\t\t\t\tvar i = 0;\n\t\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\t\t\t\t\ti ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeoInfo.weightTable = {};\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\t\tid: i,\n\t\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn geoInfo;\n\n\t\t},\n\n\t\tgenBuffers: function ( geoInfo ) {\n\n\t\t\tvar buffers = {\n\t\t\t\tvertex: [],\n\t\t\t\tnormal: [],\n\t\t\t\tcolors: [],\n\t\t\t\tuvs: [],\n\t\t\t\tmaterialIndex: [],\n\t\t\t\tvertexWeights: [],\n\t\t\t\tweightsIndices: [],\n\t\t\t};\n\n\t\t\tvar polygonIndex = 0;\n\t\t\tvar faceLength = 0;\n\t\t\tvar displayedWeightsWarning = false;\n\n\t\t\t// these will hold data for a single face\n\t\t\tvar facePositionIndexes = [];\n\t\t\tvar faceNormals = [];\n\t\t\tvar faceColors = [];\n\t\t\tvar faceUVs = [];\n\t\t\tvar faceWeights = [];\n\t\t\tvar faceWeightIndices = [];\n\n\t\t\tvar self = this;\n\t\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\t\tvar endOfFace = false;\n\n\t\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t\t// A cube with quad faces looks like this:\n\t\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t\t//  }\n\t\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\t\tendOfFace = true;\n\n\t\t\t\t}\n\n\t\t\t\tvar weightIndices = [];\n\t\t\t\tvar weights = [];\n\n\t\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t\t} );\n\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\t\tvar Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\t\tvar currentWeight = weight;\n\t\t\t\t\t\t\tvar currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\t\tvar tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\t\tweights = Weight;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tvar materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\t\tvar data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tfaceLength ++;\n\n\t\t\t\tif ( endOfFace ) {\n\n\t\t\t\t\tself.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\t\tpolygonIndex ++;\n\t\t\t\t\tfaceLength = 0;\n\n\t\t\t\t\t// reset arrays for the next face\n\t\t\t\t\tfacePositionIndexes = [];\n\t\t\t\t\tfaceNormals = [];\n\t\t\t\t\tfaceColors = [];\n\t\t\t\t\tfaceUVs = [];\n\t\t\t\t\tfaceWeights = [];\n\t\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn buffers;\n\n\t\t},\n\n\t\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\t\tgenFace: function ( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\t\tfor ( var i = 2; i < faceLength; i ++ ) {\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\taddMorphTargets: function ( parentGeo, parentGeoNode, morphTarget, preTransform ) {\n\n\t\t\tif ( morphTarget === null ) return;\n\n\t\t\tparentGeo.morphAttributes.position = [];\n\t\t\tparentGeo.morphAttributes.normal = [];\n\n\t\t\tvar self = this;\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tvar morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tself.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t},\n\n\t\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\t\tgenMorphGeometry: function ( parentGeo, parentGeoNode, morphGeoNode, preTransform ) {\n\n\t\t\tvar morphGeo = new THREE.BufferGeometry();\n\t\t\tif ( morphGeoNode.attrName ) morphGeo.name = morphGeoNode.attrName;\n\n\t\t\tvar vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\t\t// make a copy of the parent's vertex positions\n\t\t\tvar vertexPositions = ( parentGeoNode.Vertices !== undefined ) ? parentGeoNode.Vertices.a.slice() : [];\n\n\t\t\tvar morphPositions = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\t\tvar indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\t\tfor ( var i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\tvar morphIndex = indices[ i ] * 3;\n\n\t\t\t\t// FBX format uses blend shapes rather than morph targets. This can be converted\n\t\t\t\t// by additively combining the blend shape positions with the original geometry's positions\n\t\t\t\tvertexPositions[ morphIndex ] += morphPositions[ i * 3 ];\n\t\t\t\tvertexPositions[ morphIndex + 1 ] += morphPositions[ i * 3 + 1 ];\n\t\t\t\tvertexPositions[ morphIndex + 2 ] += morphPositions[ i * 3 + 2 ];\n\n\t\t\t}\n\n\t\t\t// TODO: add morph normal support\n\t\t\tvar morphGeoInfo = {\n\t\t\t\tvertexIndices: vertexIndices,\n\t\t\t\tvertexPositions: vertexPositions,\n\t\t\t};\n\n\t\t\tvar morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\t\tvar positionAttribute = new THREE.Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\t\tpositionAttribute.name = morphGeoNode.attrName;\n\n\t\t\tpreTransform.applyToBufferAttribute( positionAttribute );\n\n\t\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t\t},\n\n\t\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\t\tparseNormals: function ( NormalNode ) {\n\n\t\t\tvar mappingType = NormalNode.MappingInformationType;\n\t\t\tvar referenceType = NormalNode.ReferenceInformationType;\n\t\t\tvar buffer = NormalNode.Normals.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 3,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\t\tparseUVs: function ( UVNode ) {\n\n\t\t\tvar mappingType = UVNode.MappingInformationType;\n\t\t\tvar referenceType = UVNode.ReferenceInformationType;\n\t\t\tvar buffer = UVNode.UV.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 2,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\t\tparseVertexColors: function ( ColorNode ) {\n\n\t\t\tvar mappingType = ColorNode.MappingInformationType;\n\t\t\tvar referenceType = ColorNode.ReferenceInformationType;\n\t\t\tvar buffer = ColorNode.Colors.a;\n\t\t\tvar indexBuffer = [];\n\t\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 4,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tindices: indexBuffer,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\t\tparseMaterialIndices: function ( MaterialNode ) {\n\n\t\t\tvar mappingType = MaterialNode.MappingInformationType;\n\t\t\tvar referenceType = MaterialNode.ReferenceInformationType;\n\n\t\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\t\treturn {\n\t\t\t\t\tdataSize: 1,\n\t\t\t\t\tbuffer: [ 0 ],\n\t\t\t\t\tindices: [ 0 ],\n\t\t\t\t\tmappingType: 'AllSame',\n\t\t\t\t\treferenceType: referenceType\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t\t// for conforming with the other functions we've written for other data.\n\t\t\tvar materialIndices = [];\n\n\t\t\tfor ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\t\tmaterialIndices.push( i );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: materialIndexBuffer,\n\t\t\t\tindices: materialIndices,\n\t\t\t\tmappingType: mappingType,\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t},\n\n\t\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\t\tparseNurbsGeometry: function ( geoNode ) {\n\n\t\t\tif ( THREE.NURBSCurve === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n\t\t\t\treturn new THREE.BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar order = parseInt( geoNode.Order );\n\n\t\t\tif ( isNaN( order ) ) {\n\n\t\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\t\treturn new THREE.BufferGeometry();\n\n\t\t\t}\n\n\t\t\tvar degree = order - 1;\n\n\t\t\tvar knots = geoNode.KnotVector.a;\n\t\t\tvar controlPoints = [];\n\t\t\tvar pointsValues = geoNode.Points.a;\n\n\t\t\tfor ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\t\tcontrolPoints.push( new THREE.Vector4().fromArray( pointsValues, i ) );\n\n\t\t\t}\n\n\t\t\tvar startKnot, endKnot;\n\n\t\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\t\tstartKnot = degree;\n\t\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\t\tfor ( var i = 0; i < degree; ++ i ) {\n\n\t\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar curve = new THREE.NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\t\tvar vertices = curve.getPoints( controlPoints.length * 7 );\n\n\t\t\tvar positions = new Float32Array( vertices.length * 3 );\n\n\t\t\tvertices.forEach( function ( vertex, i ) {\n\n\t\t\t\tvertex.toArray( positions, i * 3 );\n\n\t\t\t} );\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t},\n\n\t};\n\n\t// parse animation data from FBXTree\n\tfunction AnimationParser() {}\n\n\tAnimationParser.prototype = {\n\n\t\tconstructor: AnimationParser,\n\n\t\t// take raw animation clips and turn them into three.js animation clips\n\t\tparse: function () {\n\n\t\t\tvar animationClips = [];\n\n\n\t\t\tvar rawClips = this.parseClips();\n\n\t\t\tif ( rawClips === undefined ) return animationClips;\n\n\t\t\tfor ( var key in rawClips ) {\n\n\t\t\t\tvar rawClip = rawClips[ key ];\n\n\t\t\t\tvar clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animationClips;\n\n\t\t},\n\n\t\tparseClips: function () {\n\n\t\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t\t// if this is undefined we can safely assume there are no animations\n\t\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\t\tvar curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\t\tvar layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\t\tvar rawClips = this.parseAnimStacks( layersMap );\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t\t// and is referenced by an AnimationLayer\n\t\tparseAnimationCurveNodes: function () {\n\n\t\t\tvar rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\t\tvar curveNodesMap = new Map();\n\n\t\t\tfor ( var nodeID in rawCurveNodes ) {\n\n\t\t\t\tvar rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\t\tvar curveNode = {\n\n\t\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\t\tcurves: {},\n\n\t\t\t\t\t};\n\n\t\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn curveNodesMap;\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t\t// axis ( e.g. times and values of x rotation)\n\t\tparseAnimationCurves: function ( curveNodesMap ) {\n\n\t\t\tvar rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t\t// clearly, this should be optimised to\n\t\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\t\tfor ( var nodeID in rawCurves ) {\n\n\t\t\t\tvar animationCurve = {\n\n\t\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t\t};\n\n\t\t\t\tvar relationships = connections.get( animationCurve.id );\n\n\t\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\t\tvar animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\t\tvar animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t\t} else if ( animationCurveRelationship.match( /d|DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\t\tparseAnimationLayers: function ( curveNodesMap ) {\n\n\t\t\tvar rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\t\tvar layersMap = new Map();\n\n\t\t\tfor ( var nodeID in rawLayers ) {\n\n\t\t\t\tvar layerCurveNodes = [];\n\n\t\t\t\tvar connection = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\t\tvar children = connection.children;\n\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\t\tvar curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar modelID;\n\n\t\t\t\t\t\t\t\t\tconnections.get( child.ID ).parents.forEach( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( parent.relationship !== undefined ) modelID = parent.ID;\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: THREE.PropertyBinding.sanitizeNodeName( rawModel.attrName ),\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\t\t\t\t\t\t\t\t\t\ttransform: self.getModelAnimTransform( rawModel ),\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotations = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotations = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\t\tvar deformerID;\n\n\t\t\t\t\t\t\t\t\tconnections.get( child.ID ).parents.forEach( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( parent.relationship !== undefined ) deformerID = parent.ID;\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tvar morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\t\tvar geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\t\tvar modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t\tvar rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\t\tvar node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: THREE.PropertyBinding.sanitizeNodeName( rawModel.attrName ),\n\t\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn layersMap;\n\n\t\t},\n\n\t\tgetModelAnimTransform: function ( modelNode ) {\n\n\t\t\tvar transformData = {};\n\n\t\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = parseInt( modelNode.RotationOrder.value );\n\n\t\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\t\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\n\t\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\n\t\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\t\treturn generateTransform( transformData );\n\n\t\t},\n\n\t\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t\t// hierarchy. Each Stack node will be used to create a THREE.AnimationClip\n\t\tparseAnimStacks: function ( layersMap ) {\n\n\t\t\tvar rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t\t// connect the stacks (clips) up to the layers\n\t\t\tvar rawClips = {};\n\n\t\t\tfor ( var nodeID in rawStacks ) {\n\n\t\t\t\tvar children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t\t}\n\n\t\t\t\tvar layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\t\tlayer: layer,\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn rawClips;\n\n\t\t},\n\n\t\taddClip: function ( rawClip ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar self = this;\n\t\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\t\ttracks = tracks.concat( self.generateTracks( rawTracks ) );\n\n\t\t\t} );\n\n\t\t\treturn new THREE.AnimationClip( rawClip.name, - 1, tracks );\n\n\t\t},\n\n\t\tgenerateTracks: function ( rawTracks ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar initialPosition = new THREE.Vector3();\n\t\t\tvar initialRotation = new THREE.Quaternion();\n\t\t\tvar initialScale = new THREE.Vector3();\n\n\t\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\t\tinitialPosition = initialPosition.toArray();\n\t\t\tinitialRotation = new THREE.Euler().setFromQuaternion( initialRotation ).toArray(); // todo: euler order\n\t\t\tinitialScale = initialScale.toArray();\n\n\t\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\t\tvar positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\t\tvar rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotations, rawTracks.postRotations );\n\t\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\t\tvar scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t\t}\n\n\t\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\t\tvar morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t},\n\n\t\tgenerateVectorTrack: function ( modelName, curves, initialValue, type ) {\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\treturn new THREE.VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t\t},\n\n\t\tgenerateRotationTrack: function ( modelName, curves, initialValue, preRotations, postRotations ) {\n\n\t\t\tif ( curves.x !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.x );\n\t\t\t\tcurves.x.values = curves.x.values.map( THREE.Math.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.y !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.y );\n\t\t\t\tcurves.y.values = curves.y.values.map( THREE.Math.degToRad );\n\n\t\t\t}\n\t\t\tif ( curves.z !== undefined ) {\n\n\t\t\t\tthis.interpolateRotations( curves.z );\n\t\t\t\tcurves.z.values = curves.z.values.map( THREE.Math.degToRad );\n\n\t\t\t}\n\n\t\t\tvar times = this.getTimesForAllAxes( curves );\n\t\t\tvar values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\t\tif ( preRotations !== undefined ) {\n\n\t\t\t\tpreRotations = preRotations.map( THREE.Math.degToRad );\n\t\t\t\tpreRotations.push( 'ZYX' );\n\n\t\t\t\tpreRotations = new THREE.Euler().fromArray( preRotations );\n\t\t\t\tpreRotations = new THREE.Quaternion().setFromEuler( preRotations );\n\n\t\t\t}\n\n\t\t\tif ( postRotations !== undefined ) {\n\n\t\t\t\tpostRotations = postRotations.map( THREE.Math.degToRad );\n\t\t\t\tpostRotations.push( 'ZYX' );\n\n\t\t\t\tpostRotations = new THREE.Euler().fromArray( postRotations );\n\t\t\t\tpostRotations = new THREE.Quaternion().setFromEuler( postRotations ).inverse();\n\n\t\t\t}\n\n\t\t\tvar quaternion = new THREE.Quaternion();\n\t\t\tvar euler = new THREE.Euler();\n\n\t\t\tvar quaternionValues = [];\n\n\t\t\tfor ( var i = 0; i < values.length; i += 3 ) {\n\n\t\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], 'ZYX' );\n\n\t\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\t\tif ( preRotations !== undefined ) quaternion.premultiply( preRotations );\n\t\t\t\tif ( postRotations !== undefined ) quaternion.multiply( postRotations );\n\n\t\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t\t}\n\n\t\t\treturn new THREE.QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t\t},\n\n\t\tgenerateMorphTrack: function ( rawTracks ) {\n\n\t\t\tvar curves = rawTracks.DeformPercent.curves.morph;\n\t\t\tvar values = curves.values.map( function ( val ) {\n\n\t\t\t\treturn val / 100;\n\n\t\t\t} );\n\n\t\t\tvar morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\t\treturn new THREE.NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t\t},\n\n\t\t// For all animated objects, times are defined separately for each axis\n\t\t// Here we'll combine the times into one sorted array without duplicates\n\t\tgetTimesForAllAxes: function ( curves ) {\n\n\t\t\tvar times = [];\n\n\t\t\t// first join together the times for each axis, if defined\n\t\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t\t// then sort them and remove duplicates\n\t\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\t\treturn a - b;\n\n\t\t\t} ).filter( function ( elem, index, array ) {\n\n\t\t\t\treturn array.indexOf( elem ) == index;\n\n\t\t\t} );\n\n\t\t\treturn times;\n\n\t\t},\n\n\t\tgetKeyframeTrackValues: function ( times, curves, initialValue ) {\n\n\t\t\tvar prevValue = initialValue;\n\n\t\t\tvar values = [];\n\n\t\t\tvar xIndex = - 1;\n\t\t\tvar yIndex = - 1;\n\t\t\tvar zIndex = - 1;\n\n\t\t\ttimes.forEach( function ( time ) {\n\n\t\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t\t// if there is an x value defined for this frame, use that\n\t\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\t\tvar xValue = curves.x.values[ xIndex ];\n\t\t\t\t\tvalues.push( xValue );\n\t\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\t\tvar yValue = curves.y.values[ yIndex ];\n\t\t\t\t\tvalues.push( yValue );\n\t\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\t\tvar zValue = curves.z.values[ zIndex ];\n\t\t\t\t\tvalues.push( zValue );\n\t\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn values;\n\n\t\t},\n\n\t\t// Rotations are defined as Euler angles which can have values  of any size\n\t\t// These will be converted to quaternions which don't support values greater than\n\t\t// PI, so we'll interpolate large rotations\n\t\tinterpolateRotations: function ( curve ) {\n\n\t\t\tfor ( var i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\t\tvar initialValue = curve.values[ i - 1 ];\n\t\t\t\tvar valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\t\tvar absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\t\tvar numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\t\tvar step = valuesSpan / numSubIntervals;\n\t\t\t\t\tvar nextValue = initialValue + step;\n\n\t\t\t\t\tvar initialTime = curve.times[ i - 1 ];\n\t\t\t\t\tvar timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\t\tvar interval = timeSpan / numSubIntervals;\n\t\t\t\t\tvar nextTime = initialTime + interval;\n\n\t\t\t\t\tvar interpolatedTimes = [];\n\t\t\t\t\tvar interpolatedValues = [];\n\n\t\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\t\tnextValue += step;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t};\n\n\t// parse an FBX file in ASCII format\n\tfunction TextParser() {}\n\n\tTextParser.prototype = {\n\n\t\tconstructor: TextParser,\n\n\t\tgetPrevNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t\t},\n\n\t\tgetCurrentNode: function () {\n\n\t\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t\t},\n\n\t\tgetCurrentProp: function () {\n\n\t\t\treturn this.currentProp;\n\n\t\t},\n\n\t\tpushStack: function ( node ) {\n\n\t\t\tthis.nodeStack.push( node );\n\t\t\tthis.currentIndent += 1;\n\n\t\t},\n\n\t\tpopStack: function () {\n\n\t\t\tthis.nodeStack.pop();\n\t\t\tthis.currentIndent -= 1;\n\n\t\t},\n\n\t\tsetCurrentProp: function ( val, name ) {\n\n\t\t\tthis.currentProp = val;\n\t\t\tthis.currentPropName = name;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tthis.currentIndent = 0;\n\t\t\tconsole.log(\"FBXTree: \", FBXTree);\n\t\t\tthis.allNodes = new FBXTree();\n\t\t\tthis.nodeStack = [];\n\t\t\tthis.currentProp = [];\n\t\t\tthis.currentPropName = '';\n\n\t\t\tvar self = this;\n\n\t\t\tvar split = text.split( /[\\r\\n]+/ );\n\n\t\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\t\tvar matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\t\tvar matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\t\tvar matchBeginning = line.match( '^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\t\tvar matchProperty = line.match( '^\\\\t{' + ( self.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\t\tvar matchEnd = line.match( '^\\\\t{' + ( self.currentIndent - 1 ) + '}}' );\n\n\t\t\t\tif ( matchBeginning ) {\n\n\t\t\t\t\tself.parseNodeBegin( line, matchBeginning );\n\n\t\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\t\tself.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\t\tself.popStack();\n\n\t\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\t\tself.parseNodePropertyContinued( line );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn this.allNodes;\n\n\t\t},\n\n\t\tparseNodeBegin: function ( line, property ) {\n\n\t\t\tvar nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\tvar nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t\t} );\n\n\t\t\tvar node = { name: nodeName };\n\t\t\tvar attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\t// a top node\n\t\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t\t} else { // a subnode\n\n\t\t\t\t// if the subnode already exists, append it\n\t\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\t\tthis.pushStack( node );\n\n\t\t},\n\n\t\tparseNodeAttr: function ( attrs ) {\n\n\t\t\tvar id = attrs[ 0 ];\n\n\t\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = '', type = '';\n\n\t\t\tif ( attrs.length > 1 ) {\n\n\t\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\t\ttype = attrs[ 2 ];\n\n\t\t\t}\n\n\t\t\treturn { id: id, name: name, type: type };\n\n\t\t},\n\n\t\tparseNodeProperty: function ( line, property, contentLine ) {\n\n\t\t\tvar propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\t\tvar propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t\t//\tContent: ,\n\t\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t\t}\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\t\t\tvar parentName = currentNode.name;\n\n\t\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Connections\n\t\t\tif ( propName === 'C' ) {\n\n\t\t\t\tvar connProps = propValue.split( ',' ).slice( 1 );\n\t\t\t\tvar from = parseInt( connProps[ 0 ] );\n\t\t\t\tvar to = parseInt( connProps[ 1 ] );\n\n\t\t\t\tvar rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t\t} );\n\n\t\t\t\tpropName = 'connections';\n\t\t\t\tpropValue = [ from, to ];\n\t\t\t\tappend( propValue, rest );\n\n\t\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Node\n\t\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t\t// connections\n\t\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t\t} else {\n\n\t\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\t\telse currentNode.a = propValue;\n\n\t\t\t}\n\n\t\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseNodePropertyContinued: function ( line ) {\n\n\t\t\tvar currentNode = this.getCurrentNode();\n\n\t\t\tcurrentNode.a += line;\n\n\t\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t\t// so convert the string to an array\n\t\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// parse \"Property70\"\n\t\tparseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n\t\t\t// split this\n\t\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t\t// into array like below\n\t\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\t\tvar props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t\t} );\n\n\t\t\tvar innerPropName = props[ 0 ];\n\t\t\tvar innerPropType1 = props[ 1 ];\n\t\t\tvar innerPropType2 = props[ 2 ];\n\t\t\tvar innerPropFlag = props[ 3 ];\n\t\t\tvar innerPropValue = props[ 4 ];\n\n\t\t\t// cast values where needed, otherwise leave as strings\n\t\t\tswitch ( innerPropType1 ) {\n\n\t\t\t\tcase 'int':\n\t\t\t\tcase 'enum':\n\t\t\t\tcase 'bool':\n\t\t\t\tcase 'ULongLong':\n\t\t\t\tcase 'double':\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'FieldOfView':\n\t\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Color':\n\t\t\t\tcase 'ColorRGB':\n\t\t\t\tcase 'Vector3D':\n\t\t\t\tcase 'Lcl_Translation':\n\t\t\t\tcase 'Lcl_Rotation':\n\t\t\t\tcase 'Lcl_Scaling':\n\t\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// CAUTION: these props must append to parent's parent\n\t\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t\t},\n\n\t};\n\n\t// Parse an FBX file in Binary format\n\tfunction BinaryParser() {}\n\n\tBinaryParser.prototype = {\n\n\t\tconstructor: BinaryParser,\n\n\t\tparse: function ( buffer ) {\n\n\t\t\tvar reader = new BinaryReader( buffer );\n\t\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\t\tvar version = reader.getUint32();\n\n\t\t\tconsole.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n\t\t\tvar allNodes = new FBXTree();\n\n\t\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\t\tvar node = this.parseNode( reader, version );\n\t\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t\t}\n\n\t\t\treturn allNodes;\n\n\t\t},\n\n\t\t// Check if reader has reached the end of content.\n\t\tendOfContent: function ( reader ) {\n\n\t\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t\t// - 16bytes: magic\n\t\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t\t// - 4bytes: magic\n\t\t\t// - 4bytes: version\n\t\t\t// - 120bytes: zero\n\t\t\t// - 16bytes: magic\n\t\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t\t} else {\n\n\t\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t\t}\n\n\t\t},\n\n\t\t// recursively parse nodes until the end of the file is reached\n\t\tparseNode: function ( reader, version ) {\n\n\t\t\tvar node = {};\n\n\t\t\t// The first three data sizes depends on version.\n\t\t\tvar endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\t\tvar numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\t// note: do not remove this even if you get a linter warning as it moves the buffer forward\n\t\t\tvar propertyListLen = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t\tvar nameLen = reader.getUint8();\n\t\t\tvar name = reader.getString( nameLen );\n\n\t\t\t// Regards this node as NULL-record if endOffset is zero\n\t\t\tif ( endOffset === 0 ) return null;\n\n\t\t\tvar propertyList = [];\n\n\t\t\tfor ( var i = 0; i < numProperties; i ++ ) {\n\n\t\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t\t}\n\n\t\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\t\tvar id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\t\tvar attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\t\tvar attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t\t// check if this node represents just a single property\n\t\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\t\tvar subNode = this.parseNode( reader, version );\n\n\t\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t\t}\n\n\t\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\t\tif ( typeof id === 'number' ) node.id = id;\n\t\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\t\tif ( name !== '' ) node.name = name;\n\n\t\t\treturn node;\n\n\t\t},\n\n\t\tparseSubNode: function ( name, node, subNode ) {\n\n\t\t\t// special case: child node is single property\n\t\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\t\tvar value = subNode.propertyList[ 0 ];\n\n\t\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t\tsubNode.a = value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t\t}\n\n\t\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\t\tnode.connections = [];\n\n\t\t\t\t}\n\n\t\t\t\tnode.connections.push( array );\n\n\t\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\t\tvar keys = Object.keys( subNode );\n\n\t\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t\t} );\n\n\t\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\t\tvar innerPropName = subNode.propertyList[ 0 ];\n\t\t\t\tvar innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\t\tvar innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\t\tvar innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\t\tvar innerPropValue;\n\n\t\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\t\tinnerPropValue = [\n\t\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t\t];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t\t}\n\n\t\t\t\t// this will be copied to parent, see above\n\t\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t\t'type': innerPropType1,\n\t\t\t\t\t'type2': innerPropType2,\n\t\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t\t'value': innerPropValue\n\n\t\t\t\t};\n\n\t\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseProperty: function ( reader ) {\n\n\t\t\tvar type = reader.getString( 1 );\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'C':\n\t\t\t\t\treturn reader.getBoolean();\n\n\t\t\t\tcase 'D':\n\t\t\t\t\treturn reader.getFloat64();\n\n\t\t\t\tcase 'F':\n\t\t\t\t\treturn reader.getFloat32();\n\n\t\t\t\tcase 'I':\n\t\t\t\t\treturn reader.getInt32();\n\n\t\t\t\tcase 'L':\n\t\t\t\t\treturn reader.getInt64();\n\n\t\t\t\tcase 'R':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\t\tcase 'S':\n\t\t\t\t\tvar length = reader.getUint32();\n\t\t\t\t\treturn reader.getString( length );\n\n\t\t\t\tcase 'Y':\n\t\t\t\t\treturn reader.getInt16();\n\n\t\t\t\tcase 'b':\n\t\t\t\tcase 'c':\n\t\t\t\tcase 'd':\n\t\t\t\tcase 'f':\n\t\t\t\tcase 'i':\n\t\t\t\tcase 'l':\n\n\t\t\t\t\tvar arrayLength = reader.getUint32();\n\t\t\t\t\tvar encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\t\tvar compressedLength = reader.getUint32();\n\n\t\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof Zlib === 'undefined' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n\t\t\t\t\tvar reader2 = new BinaryReader( inflate.decompress().buffer );\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tfunction BinaryReader( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n\t}\n\n\tBinaryReader.prototype = {\n\n\t\tconstructor: BinaryReader,\n\n\t\tgetOffset: function () {\n\n\t\t\treturn this.offset;\n\n\t\t},\n\n\t\tsize: function () {\n\n\t\t\treturn this.dv.buffer.byteLength;\n\n\t\t},\n\n\t\tskip: function ( length ) {\n\n\t\t\tthis.offset += length;\n\n\t\t},\n\n\t\t// seems like true/false representation depends on exporter.\n\t\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t\t// then sees LSB.\n\t\tgetBoolean: function () {\n\n\t\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t\t},\n\n\t\tgetBooleanArray: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getBoolean() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint8: function () {\n\n\t\t\tvar value = this.dv.getUint8( this.offset );\n\t\t\tthis.offset += 1;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt16: function () {\n\n\t\t\tvar value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\t\tthis.offset += 2;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32: function () {\n\n\t\t\tvar value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetInt32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetUint32: function () {\n\n\t\t\tvar value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t\t// There's a possibility that this method returns wrong value if the value\n\t\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t\t// TODO: safely handle 64-bit integer\n\t\tgetInt64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\t// calculate negative value\n\t\t\tif ( high & 0x80000000 ) {\n\n\t\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetInt64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getInt64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\t// Note: see getInt64() comment\n\t\tgetUint64: function () {\n\n\t\t\tvar low, high;\n\n\t\t\tif ( this.littleEndian ) {\n\n\t\t\t\tlow = this.getUint32();\n\t\t\t\thigh = this.getUint32();\n\n\t\t\t} else {\n\n\t\t\t\thigh = this.getUint32();\n\t\t\t\tlow = this.getUint32();\n\n\t\t\t}\n\n\t\t\treturn high * 0x100000000 + low;\n\n\t\t},\n\n\t\tgetFloat32: function () {\n\n\t\t\tvar value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\t\tthis.offset += 4;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat32Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat32() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetFloat64: function () {\n\n\t\t\tvar value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\t\tthis.offset += 8;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetFloat64Array: function ( size ) {\n\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta.push( this.getFloat64() );\n\n\t\t\t}\n\n\t\t\treturn a;\n\n\t\t},\n\n\t\tgetArrayBuffer: function ( size ) {\n\n\t\t\tvar value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\t\tthis.offset += size;\n\t\t\treturn value;\n\n\t\t},\n\n\t\tgetString: function ( size ) {\n\n\t\t\t// note: safari 9 doesn't support Uint8Array.indexOf; create intermediate array instead\n\t\t\tvar a = [];\n\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\n\n\t\t\t\ta[ i ] = this.getUint8();\n\n\t\t\t}\n\n\t\t\tvar nullByte = a.indexOf( 0 );\n\t\t\tif ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n\t\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( a ) );\n\n\t\t}\n\n\t};\n\n\t// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n\t// and BinaryParser( FBX Binary format)\n\tfunction FBXTree() {}\n\n\tFBXTree.prototype = {\n\n\t\tconstructor: FBXTree,\n\n\t\tadd: function ( key, val ) {\n\n\t\t\tthis[ key ] = val;\n\n\t\t},\n\n\t};\n\n\t// ************** UTILITY FUNCTIONS **************\n\n\tfunction isFbxFormatBinary( buffer ) {\n\n\t\tvar CORRECT = 'Kaydara FBX Binary  \\0';\n\n\t\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n\t}\n\n\tfunction isFbxFormatASCII( text ) {\n\n\t\tvar CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\t\tvar cursor = 0;\n\n\t\tfunction read( offset ) {\n\n\t\t\tvar result = text[ offset - 1 ];\n\t\t\ttext = text.slice( cursor + offset );\n\t\t\tcursor ++;\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < CORRECT.length; ++ i ) {\n\n\t\t\tvar num = read( 1 );\n\t\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getFbxVersion( text ) {\n\n\t\tvar versionRegExp = /FBXVersion: (\\d+)/;\n\t\tvar match = text.match( versionRegExp );\n\t\tif ( match ) {\n\n\t\t\tvar version = parseInt( match[ 1 ] );\n\t\t\treturn version;\n\n\t\t}\n\t\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n\t}\n\n\t// Converts FBX ticks into real time seconds.\n\tfunction convertFBXTimeToSeconds( time ) {\n\n\t\treturn time / 46186158000;\n\n\t}\n\n\tvar dataArray = [];\n\n\t// extracts the data from the correct position in the FBX array based on indexing type\n\tfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\t\tvar index;\n\n\t\tswitch ( infoObject.mappingType ) {\n\n\t\t\tcase 'ByPolygonVertex' :\n\t\t\t\tindex = polygonVertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByPolygon' :\n\t\t\t\tindex = polygonIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'ByVertice' :\n\t\t\t\tindex = vertexIndex;\n\t\t\t\tbreak;\n\t\t\tcase 'AllSame' :\n\t\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t\t}\n\n\t\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\t\tvar from = index * infoObject.dataSize;\n\t\tvar to = from + infoObject.dataSize;\n\n\t\treturn slice( dataArray, infoObject.buffer, from, to );\n\n\t}\n\n\tvar tempMat = new THREE.Matrix4();\n\tvar tempEuler = new THREE.Euler();\n\tvar tempVec = new THREE.Vector3();\n\tvar translation = new THREE.Vector3();\n\tvar rotation = new THREE.Matrix4();\n\n\t// generate transformation from FBX transform data\n\t// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n\t// transformData = {\n\t//\t eulerOrder: int,\n\t//\t translation: [],\n\t//   rotationOffset: [],\n\t//\t preRotation\n\t//\t rotation\n\t//\t postRotation\n\t//   scale\n\t// }\n\t// all entries are optional\n\tfunction generateTransform( transformData ) {\n\n\t\tvar transform = new THREE.Matrix4();\n\t\ttranslation.set( 0, 0, 0 );\n\t\trotation.identity();\n\n\t\tvar order = ( transformData.eulerOrder ) ? getEulerOrder( transformData.eulerOrder ) : getEulerOrder( 0 );\n\n\t\tif ( transformData.translation ) translation.fromArray( transformData.translation );\n\t\tif ( transformData.rotationOffset ) translation.add( tempVec.fromArray( transformData.rotationOffset ) );\n\n\t\tif ( transformData.rotation ) {\n\n\t\t\tvar array = transformData.rotation.map( THREE.Math.degToRad );\n\t\t\tarray.push( order );\n\t\t\trotation.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t}\n\n\t\tif ( transformData.preRotation ) {\n\n\t\t\tvar array = transformData.preRotation.map( THREE.Math.degToRad );\n\t\t\tarray.push( order );\n\t\t\ttempMat.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t\trotation.premultiply( tempMat );\n\n\t\t}\n\n\t\tif ( transformData.postRotation ) {\n\n\t\t\tvar array = transformData.postRotation.map( THREE.Math.degToRad );\n\t\t\tarray.push( order );\n\t\t\ttempMat.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t\t\ttempMat.getInverse( tempMat );\n\n\t\t\trotation.multiply( tempMat );\n\n\t\t}\n\n\t\tif ( transformData.scale ) transform.scale( tempVec.fromArray( transformData.scale ) );\n\n\t\ttransform.setPosition( translation );\n\t\ttransform.multiply( rotation );\n\n\t\treturn transform;\n\n\t}\n\n\t// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n\t// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n\tfunction getEulerOrder( order ) {\n\n\t\tvar enums = [\n\t\t\t'ZYX', // -> XYZ extrinsic\n\t\t\t'YZX', // -> XZY extrinsic\n\t\t\t'XZY', // -> YZX extrinsic\n\t\t\t'ZXY', // -> YXZ extrinsic\n\t\t\t'YXZ', // -> ZXY extrinsic\n\t\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t\t];\n\n\t\tif ( order === 6 ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\t\treturn enums[ 0 ];\n\n\t\t}\n\n\t\treturn enums[ order ];\n\n\t}\n\n\t// Parses comma separated list of numbers and returns them an array.\n\t// Used internally by the TextParser\n\tfunction parseNumberArray( value ) {\n\n\t\tvar array = value.split( ',' ).map( function ( val ) {\n\n\t\t\treturn parseFloat( val );\n\n\t\t} );\n\n\t\treturn array;\n\n\t}\n\n\tfunction convertArrayBufferToString( buffer, from, to ) {\n\n\t\tif ( from === undefined ) from = 0;\n\t\tif ( to === undefined ) to = buffer.byteLength;\n\n\t\treturn THREE.LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n\t}\n\n\tfunction append( a, b ) {\n\n\t\tfor ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\tfunction slice( a, b, from, to ) {\n\n\t\tfor ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\t\ta[ j ] = b[ i ];\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// inject array a2 into array a1 at index\n\tfunction inject( a1, index, a2 ) {\n\n\t\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n\t}\n\n\treturn FBXLoader;\n\n} )();\n\n};"],
"names":["shadow$provide","global","require","module","exports","THREE","FBXLoader","manager","undefined","DefaultLoadingManager","FBXTreeParser","textureLoader","GeometryParser","AnimationParser","TextParser","BinaryParser","BinaryReader","buffer","littleEndian","dv","DataView","offset","FBXTree","getFbxVersion","text","match","versionRegExp","parseInt","version","Error","convertFBXTimeToSeconds","time","getData","polygonVertexIndex","polygonIndex","vertexIndex","infoObject","mappingType","index","indices","console","warn","referenceType","from","dataSize","dataArray","to","j","i","a","b","generateTransform","transformData","transform","Matrix4","translation","set","rotation","identity","order","eulerOrder","getEulerOrder","fromArray","rotationOffset","add","tempVec","array","map","Math","degToRad","push","makeRotationFromEuler","tempEuler","preRotation","tempMat","premultiply","postRotation","getInverse","multiply","scale","setPosition","enums","parseNumberArray","value","split","val","parseFloat","convertArrayBufferToString","byteLength","LoaderUtils","decodeText","Uint8Array","append","length","l","inject","a1","a2","slice","concat","fbxTree","connections","sceneGraph","prototype","constructor","crossOrigin","load","url","onLoad","onProgress","onError","self","resourceDirectory","extractUrlBase","loader","FileLoader","setResponseType","scene","parse","error","setTimeout","itemError","setCrossOrigin","FBXBuffer","CORRECT","FBXText","cursor","result","TextureLoader","setPath","parseConnections","images","parseImages","textures","parseTextures","materials","parseMaterials","deformers","parseDeformers","geometryMap","parseScene","connectionMap","Map","Connections","forEach","rawConnection","fromID","toID","relationship","has","parents","children","parentRelationship","ID","get","childRelationship","blobs","Objects","videoNodes","Video","nodeID","videoNode","id","RelativeFilename","Filename","base64Content","Content","ArrayBuffer","image","parseImage","filename","pop","content","fileName","extension","lastIndexOf","toLowerCase","type","TGALoader","Loader","Handlers","window","URL","createObjectURL","Blob","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","name","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueV","wrapS","valueU","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","repeat","x","y","currentPath","path","indexOf","FileName","materialMap","materialNodes","Material","material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshPhongMaterial","MeshLambertMaterial","color","setValues","BumpFactor","bumpScale","Diffuse","Color","DiffuseColor","DisplacementFactor","displacementScale","Emissive","emissive","EmissiveColor","EmissiveFactor","emissiveIntensity","Opacity","opacity","transparent","ReflectionFactor","reflectivity","Shininess","shininess","Specular","specular","SpecularColor","child","bumpMap","getTexture","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","skeletons","morphTargets","DeformerNodes","Deformer","deformerNode","relationships","attrType","skeleton","parseSkeleton","geometryID","morphTarget","rawTargets","parseMorphTargets","deformerNodes","rawBones","boneNode","rawBone","weights","Transform","transformLink","TransformLink","linkMode","Mode","Indexes","Weights","bones","rawMorphTargets","morphTargetNode","rawMorphTarget","initialWeight","DeformPercent","fullWeights","FullWeights","targetRelationships","geoID","Group","modelMap","parseModels","modelNodes","Model","model","setLookAtProperties","modelNode","connection","parent","bindSkeleton","createAmbientLight","setupMorphMaterials","animations","isGroup","node","buildSkeleton","createCamera","createLight","createMesh","createCurve","PropertyBinding","sanitizeNodeName","setModelTransforms","bone","subBone","Bone","matrixWorld","copy","cameraAttribute","attr","NodeAttribute","Object3D","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","width","innerWidth","height","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","distance","FarAttenuationEnd","EnableFarAttenuation","PointLight","decay","DirectionalLight","angle","PI","InnerAngle","penumbra","OuterAngle","max","SpotLight","CastShadows","castShadow","geometry","attributes","vertexColors","VertexColors","FBX_Deformer","skinning","SkinnedMesh","Mesh","reduce","geo","LineBasicMaterial","linewidth","Line","RotationOrder","Lcl_Translation","RotationOffset","Lcl_Rotation","PreRotation","PostRotation","Lcl_Scaling","applyMatrix","lookAtTarget","pos","target","position","lookAt","Vector3","bindMatrices","parsePoseNodes","geoRelationships","geoConnParent","bind","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","Array","isArray","poseNode","Node","Matrix","GlobalSettings","ambientColor","AmbientColor","r","g","AmbientLight","traverse","isMesh","morphAttributes","normal","uuid","matUuid","sharedMat","clone","geoNodes","Geometry","parseGeometry","geoNode","parseMeshGeometry","parseNurbsGeometry","GeometricTranslation","GeometricRotation","GeometricScaling","genGeometry","preTransform","BufferGeometry","geoInfo","parseGeoNode","buffers","genBuffers","positionAttribute","Float32BufferAttribute","vertex","applyToBufferAttribute","addAttribute","colors","Uint16BufferAttribute","weightsIndices","vertexWeights","normalAttribute","normalMatrix","Matrix3","getNormalMatrix","uvs","uvBuffer","toString","prevMaterialIndex","materialIndex","startIndex","currentIndex","addGroup","groups","lastGroup","lastIndex","start","count","addMorphTargets","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","LayerElementColor","parseVertexColors","LayerElementMaterial","parseMaterialIndices","LayerElementNormal","parseNormals","LayerElementUV","uv","parseUVs","weightTable","weight","faceLength","displayedWeightsWarning","facePositionIndexes","faceNormals","faceColors","faceUVs","faceWeights","faceWeightIndices","endOfFace","weightIndices","data","wt","wIndex","Weight","weightIndex","currentWeight","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","genFace","parentGeo","parentGeoNode","rawTarget","morphGeoNode","genMorphGeometry","morphGeo","morphPositions","morphIndex","morphBuffers","morphGeoInfo","NormalNode","MappingInformationType","ReferenceInformationType","Normals","indexBuffer","NormalIndex","NormalsIndex","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","materialIndexBuffer","Materials","materialIndices","NURBSCurve","Order","isNaN","degree","knots","KnotVector","controlPoints","pointsValues","Points","Vector4","Form","startKnot","endKnot","vertices","curve","getPoints","positions","Float32Array","toArray","BufferAttribute","animationClips","rawClips","parseClips","key","clip","addClip","rawClip","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","curveNode","curves","rawCurves","animationCurve","times","KeyTime","KeyValueFloat","animationCurveID","animationCurveRelationship","rawLayers","AnimationLayer","layerCurveNodes","z","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","getModelAnimTransform","preRotations","postRotations","morph","deformerID","morpherID","morphName","rawStacks","AnimationStack","layer","tracks","rawTracks","generateTracks","AnimationClip","Quaternion","decompose","Euler","setFromQuaternion","T","Object","keys","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","S","scaleTrack","morphTrack","generateMorphTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","interpolateRotations","setFromEuler","inverse","quaternion","euler","quaternionValues","QuaternionKeyframeTrack","morphNum","getObjectByName","morphTargetDictionary","NumberKeyframeTrack","sort","filter","elem","xIndex","yIndex","zIndex","xValue","yValue","zValue","valuesSpan","absoluteSpan","abs","numSubIntervals","step","nextValue","initialTime","interval","nextTime","interpolatedTimes","interpolatedValues","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","log","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","currentNode","contentLine","propName","propValue","parseNodeSpecialProperty","connProps","rest","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","reader","skip","getUint32","endOfContent","parseNode","size","getOffset","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","encoding","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","Zlib","inflate","Inflate","reader2","decompress","low","high","nullByte"]
}
