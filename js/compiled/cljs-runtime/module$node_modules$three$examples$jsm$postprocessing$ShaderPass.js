shadow$provide.module$node_modules$three$examples$jsm$postprocessing$ShaderPass=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ShaderPass=void 0;var _threeModule=require("module$node_modules$three$build$three_module"),_Pass=require("module$node_modules$three$examples$jsm$postprocessing$Pass");global=function(shader,textureID){_Pass.Pass.call(this);this.textureID=void 0!==textureID?textureID:"tDiffuse";shader instanceof _threeModule.ShaderMaterial?
(this.uniforms=shader.uniforms,this.material=shader):shader&&(this.uniforms=_threeModule.UniformsUtils.clone(shader.uniforms),this.material=new _threeModule.ShaderMaterial({defines:Object.assign({},shader.defines),uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader}));this.fsQuad=new _Pass.Pass.FullScreenQuad(this.material)};exports.ShaderPass=global;global.prototype=Object.assign(Object.create(_Pass.Pass.prototype),{constructor:global,render:function(renderer,
writeBuffer,readBuffer){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=readBuffer.texture);this.fsQuad.material=this.material;this.renderToScreen?renderer.setRenderTarget(null):(renderer.setRenderTarget(writeBuffer),this.clear&&renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil));this.fsQuad.render(renderer)}})}
//# sourceMappingURL=module$node_modules$three$examples$jsm$postprocessing$ShaderPass.js.map
