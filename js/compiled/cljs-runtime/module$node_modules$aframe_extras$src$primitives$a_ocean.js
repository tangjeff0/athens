shadow$provide.module$node_modules$aframe_extras$src$primitives$a_ocean=function(global,require,module,exports){module.exports.Primitive=AFRAME.registerPrimitive("a-ocean",{defaultComponents:{ocean:{},rotation:{x:-90,y:0,z:0}},mappings:{width:"ocean.width",depth:"ocean.depth",density:"ocean.density",amplitude:"ocean.amplitude",amplitudeVariance:"ocean.amplitudeVariance",speed:"ocean.speed",speedVariance:"ocean.speedVariance",color:"ocean.color",opacity:"ocean.opacity"}});module.exports.Component=
AFRAME.registerComponent("ocean",{schema:{width:{default:10,min:0},depth:{default:10,min:0},density:{default:10},amplitude:{default:.1},amplitudeVariance:{default:.3},speed:{default:1},speedVariance:{default:2},color:{default:"#7AD2F7",type:"color"},opacity:{default:.8}},play:function(){var el=this.el,data=this.data,material=el.components.material,geometry=new THREE.PlaneGeometry(data.width,data.depth,data.density,data.density);geometry.mergeVertices();this.waves=[];for(var v,i=0,l=geometry.vertices.length;i<
l;i++)v=geometry.vertices[i],this.waves.push({z:v.z,ang:Math.random()*Math.PI*2,amp:data.amplitude+Math.random()*data.amplitudeVariance,speed:(data.speed+Math.random()*data.speedVariance)/1E3});material||(material={},material.material=new THREE.MeshPhongMaterial({color:data.color,transparent:1>data.opacity,opacity:data.opacity,shading:THREE.FlatShading}));this.mesh=new THREE.Mesh(geometry,material.material);el.setObject3D("mesh",this.mesh)},remove:function(){this.el.removeObject3D("mesh")},tick:function(t,
dt){if(dt){t=this.mesh.geometry.vertices;for(var v,vprops,i=0;v=t[i];i++)vprops=this.waves[i],v.z=vprops.z+Math.sin(vprops.ang)*vprops.amp,vprops.ang+=vprops.speed*dt;this.mesh.geometry.verticesNeedUpdate=!0}}})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$primitives$a_ocean.js.map
