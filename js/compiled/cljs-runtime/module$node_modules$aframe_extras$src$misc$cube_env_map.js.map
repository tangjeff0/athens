{
"version":3,
"file":"module$node_modules$aframe_extras$src$misc$cube_env_map.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/aframe-extras/src/misc/cube-env-map.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$misc$cube_env_map\"] = function(global,require,module,exports) {\n/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray (material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\nfunction applyEnvMap (mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n\n  materialNames = materialNames || [];\n\n  mesh.traverse((node) => {\n\n    if (!node.isMesh) return;\n\n    const meshMaterials = ensureMaterialArray(node.material);\n\n    meshMaterials.forEach((material) => {\n\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n\n    });\n\n  });\n}\n\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n\n  schema: {\n    path: {default: ''},\n    extension: {default: 'jpg', oneOf: ['jpg', 'png']},\n    format: {default: 'RGBFormat', oneOf: ['RGBFormat', 'RGBAFormat']},\n    enableBackground: {default: false},\n    reflectivity: {default: 1, min: 0, max: 1},\n    materials: {default: []}\n  },\n\n  init: function () {\n    const data = this.data;\n\n    this.texture = new THREE.CubeTextureLoader().load([\n      data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension,\n      data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension,\n      data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension\n    ]);\n    this.texture.format = THREE[data.format];\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n  },\n\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter((name) => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter((name) => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials\n        .filter((name) => oldData.materials.includes(name));\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","ensureMaterialArray","material","Array","isArray","materials","applyEnvMap","mesh","materialNames","envMap","reflectivity","traverse","node","isMesh","meshMaterials","forEach","length","indexOf","name","needsUpdate","AFRAME","registerComponent","multiple","schema","path","default","extension","oneOf","format","enableBackground","min","max","init","data","texture","THREE","CubeTextureLoader","load","object3dsetHandler","this.object3dsetHandler","el","getObject3D","addEventListener","update","oldData","addedMaterialNames","removedMaterialNames","filter","includes","maintainedMaterialNames","setBackground","remove","removeEventListener","sceneEl","object3D","background"]
}
