{
"version":3,
"file":"module$node_modules$aframe_extras$src$controls$gamepad_controls.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/aframe-extras/src/controls/gamepad-controls.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$controls$gamepad_controls\"] = function(global,require,module,exports) {\n/**\n * Gamepad controls for A-Frame.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-gamepad-controls\n *\n * For more information about the Gamepad API, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n */\n\nconst GamepadButton = require('../../lib/GamepadButton'),\n    GamepadButtonEvent = require('../../lib/GamepadButtonEvent');\n\nconst JOYSTICK_EPS = 0.2;\n\nconst Hand = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\n\nconst Joystick = {\n  MOVEMENT: 1,\n  ROTATION: 2\n};\n\nmodule.exports = AFRAME.registerComponent('gamepad-controls', {\n\n  /*******************************************************************\n   * Statics\n   */\n\n  GamepadButton: GamepadButton,\n\n  /*******************************************************************\n   * Schema\n   */\n\n  schema: {\n    // Enable/disable gamepad-controls\n    enabled: { default: true },\n\n    // Heading element for rotation\n    camera: { default: '[camera]', type: 'selector' },\n\n    // Rotation sensitivity\n    rotationSensitivity: { default: 2.0 },\n  },\n\n  /*******************************************************************\n   * Core\n   */\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    const sceneEl = this.el.sceneEl;\n\n    this.system = sceneEl.systems['tracked-controls-webxr'] || {controllers: []};\n\n    this.prevTime = window.performance.now();\n\n    // Button state\n    this.buttons = {};\n\n    // Rotation\n    const rotation = this.el.object3D.rotation;\n    this.pitch = new THREE.Object3D();\n    this.pitch.rotation.x = THREE.Math.degToRad(rotation.x);\n    this.yaw = new THREE.Object3D();\n    this.yaw.position.y = 10;\n    this.yaw.rotation.y = THREE.Math.degToRad(rotation.y);\n    this.yaw.add(this.pitch);\n\n    this._lookVector = new THREE.Vector2();\n    this._moveVector = new THREE.Vector2();\n    this._dpadVector = new THREE.Vector2();\n\n    sceneEl.addBehavior(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () { this.tick(); },\n\n  /**\n   * Called on each iteration of main render loop.\n   */\n  tick: function (t, dt) {\n    this.updateButtonState();\n    this.updateRotation(dt);\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /*******************************************************************\n   * Movement\n   */\n\n  isVelocityActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n\n    return Math.abs(inputX) > JOYSTICK_EPS || Math.abs(inputY) > JOYSTICK_EPS;\n  },\n\n  getVelocityDelta: function () {\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n    const dVelocity = new THREE.Vector3();\n\n    if (Math.abs(inputX) > JOYSTICK_EPS) {\n      dVelocity.x += inputX;\n    }\n    if (Math.abs(inputY) > JOYSTICK_EPS) {\n      dVelocity.z += inputY;\n    }\n\n    return dVelocity;\n  },\n\n  /*******************************************************************\n   * Rotation\n   */\n\n  isRotationActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const joystick = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, joystick);\n\n    return Math.abs(joystick.x) > JOYSTICK_EPS || Math.abs(joystick.y) > JOYSTICK_EPS;\n  },\n\n  updateRotation: function (dt) {\n    if (!this.isRotationActive()) return;\n\n    const data = this.data;\n    const yaw = this.yaw;\n    const pitch = this.pitch;\n    const lookControls = data.camera.components['look-controls'];\n    const hasLookControls = lookControls && lookControls.pitchObject && lookControls.yawObject;\n\n    // Sync with look-controls pitch/yaw if available.\n    if (hasLookControls) {\n      pitch.rotation.copy(lookControls.pitchObject.rotation);\n      yaw.rotation.copy(lookControls.yawObject.rotation);\n    }\n\n    const lookVector = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, lookVector);\n\n    if (Math.abs(lookVector.x) <= JOYSTICK_EPS) lookVector.x = 0;\n    if (Math.abs(lookVector.y) <= JOYSTICK_EPS) lookVector.y = 0;\n\n    lookVector.multiplyScalar(data.rotationSensitivity * dt / 1000);\n    yaw.rotation.y -= lookVector.x;\n    pitch.rotation.x -= lookVector.y;\n    pitch.rotation.x = Math.max(- Math.PI / 2, Math.min(Math.PI / 2, pitch.rotation.x));\n    data.camera.object3D.rotation.set(pitch.rotation.x, yaw.rotation.y, 0);\n\n    // Sync with look-controls pitch/yaw if available.\n    if (hasLookControls) {\n      lookControls.pitchObject.rotation.copy(pitch.rotation);\n      lookControls.yawObject.rotation.copy(yaw.rotation);\n    }\n  },\n\n  /*******************************************************************\n   * Button events\n   */\n\n  updateButtonState: function () {\n    const gamepad = this.getGamepad(Hand.RIGHT);\n    if (this.data.enabled && gamepad) {\n\n      // Fire DOM events for button state changes.\n      for (var i = 0; i < gamepad.buttons.length; i++) {\n        if (gamepad.buttons[i].pressed && !this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttondown', i, gamepad.buttons[i]));\n        } else if (!gamepad.buttons[i].pressed && this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttonup', i, gamepad.buttons[i]));\n        }\n        this.buttons[i] = gamepad.buttons[i].pressed;\n      }\n\n    } else if (Object.keys(this.buttons)) {\n      // Reset state if controls are disabled or controller is lost.\n      this.buttons = {};\n    }\n  },\n\n  emit: function (event) {\n    // Emit original event.\n    this.el.emit(event.type, event);\n\n    // Emit convenience event, identifying button index.\n    this.el.emit(\n      event.type + ':' + event.index,\n      new GamepadButtonEvent(event.type, event.index, event)\n    );\n  },\n\n  /*******************************************************************\n   * Gamepad state\n   */\n\n  /**\n   * Returns the Gamepad instance attached to the component. If connected,\n   * a proxy-controls component may provide access to Gamepad input from a\n   * remote device.\n   *\n   * @param {string} handPreference\n   * @return {Gamepad}\n   */\n  getGamepad: (function () {\n    const _xrGamepads = [];\n    const _empty = [];\n\n    return function (handPreference) {\n      // https://github.com/donmccurdy/aframe-proxy-controls\n      const proxyControls = this.el.sceneEl.components['proxy-controls'];\n      const proxyGamepad = proxyControls && proxyControls.isConnected()\n        && proxyControls.getGamepad(0);\n      if (proxyGamepad) return proxyGamepad;\n\n      // https://www.w3.org/TR/webxr/#dom-xrinputsource-handedness\n      _xrGamepads.length = 0;\n      for (let i = 0; i < this.system.controllers.length; i++) {\n        const xrController = this.system.controllers[i];\n        const xrGamepad = xrController ? xrController.gamepad : null;\n        _xrGamepads.push(xrGamepad);\n        if (xrGamepad && xrGamepad.handedness === handPreference) return xrGamepad;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand\n      const navGamepads = navigator.getGamepads ? navigator.getGamepads() : _empty;\n      for (let i = 0; i < navGamepads.length; i++) {\n        const navGamepad = navGamepads[i];\n        if (navGamepad && navGamepad.hand === handPreference) return navGamepad;\n      }\n\n      return _xrGamepads[0] || navGamepads[0];\n    };\n  })(),\n\n  /**\n   * Returns the state of the given button.\n   * @param  {number} index The button (0-N) for which to find state.\n   * @return {GamepadButton}\n   */\n  getButton: function (index) {\n    return this.getGamepad(Hand.RIGHT).buttons[index];\n  },\n\n  /**\n   * Returns state of the given axis. Axes are labelled 0-N, where 0-1 will\n   * represent X/Y on the first joystick, and 2-3 X/Y on the second.\n   * @param  {number} index The axis (0-N) for which to find state.\n   * @return {number} On the interval [-1,1].\n   */\n  getAxis: function (index) {\n    return this.getGamepad(index > 1 ? Hand.RIGHT : Hand.LEFT).axes[index];\n  },\n\n  /**\n   * Returns the state of the specified joystick as a THREE.Vector2.\n   * @param  {Joystick} role\n   * @param  {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getJoystick: function (index, target) {\n    const gamepad = this.getGamepad(index === Joystick.MOVEMENT ? Hand.LEFT : Hand.RIGHT);\n    if (gamepad.mapping === 'xr-standard') {\n      // See: https://github.com/donmccurdy/aframe-extras/issues/307\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[2], gamepad.axes[3]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[0], gamepad.axes[1]);\n      }\n    } else {\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[0], gamepad.axes[1]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[2], gamepad.axes[3]);\n      }\n    }\n    throw new Error('Unexpected joystick index \"%d\".', index);\n  },\n\n  /**\n   * Returns the state of the dpad as a THREE.Vector2.\n   * @param {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getDpad: function (target) {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    if (!gamepad.buttons[GamepadButton.DPAD_RIGHT]) {\n      return target.set(0, 0);\n    }\n    return target.set(\n      (gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed ? 1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_LEFT].pressed ? -1 : 0),\n      (gamepad.buttons[GamepadButton.DPAD_UP].pressed ? -1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_DOWN].pressed ? 1 : 0)\n    );\n  },\n\n  /**\n   * Returns true if the gamepad is currently connected to the system.\n   * @return {boolean}\n   */\n  isConnected: function () {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    return !!(gamepad && gamepad.connected);\n  },\n\n  /**\n   * Returns a string containing some information about the controller. Result\n   * may vary across browsers, for a given controller.\n   * @return {string}\n   */\n  getID: function () {\n    return this.getGamepad(Hand.LEFT).id;\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","GamepadButton","GamepadButtonEvent","AFRAME","registerComponent","schema","enabled","default","camera","type","rotationSensitivity","init","sceneEl","el","system","systems","controllers","prevTime","window","performance","now","buttons","rotation","object3D","pitch","THREE","Object3D","x","Math","degToRad","yaw","position","y","add","_lookVector","Vector2","_moveVector","_dpadVector","addBehavior","update","tick","t","dt","updateButtonState","updateRotation","remove","isVelocityActive","data","isConnected","dpad","joystick","getDpad","getJoystick","MOVEMENT","inputY","JOYSTICK_EPS","abs","getVelocityDelta","inputX","dVelocity","Vector3","z","isRotationActive","ROTATION","lookControls","components","hasLookControls","pitchObject","yawObject","copy","lookVector","multiplyScalar","max","PI","min","set","gamepad","getGamepad","RIGHT","i","length","pressed","emit","Object","keys","event","index","_xrGamepads","_empty","handPreference","proxyControls","proxyGamepad","xrController","xrGamepad","push","handedness","navGamepads","navigator","getGamepads","navGamepad","hand","getButton","getAxis","LEFT","axes","target","mapping","Error","DPAD_RIGHT","DPAD_LEFT","DPAD_UP","DPAD_DOWN","connected","getID","id"]
}
