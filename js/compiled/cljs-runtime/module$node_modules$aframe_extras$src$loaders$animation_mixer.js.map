{
"version":3,
"file":"module$node_modules$aframe_extras$src$loaders$animation_mixer.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/aframe-extras/src/loaders/animation-mixer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$loaders$animation_mixer\"] = function(global,require,module,exports) {\nconst LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip:  {default: '*'},\n    duration: {default: 0},\n    clampWhenFinished: {default: false, type: 'boolean'},\n    crossFadeDuration: {default: 0},\n    loop: {default: 'repeat', oneOf: Object.keys(LoopMode)},\n    repetitions: {default: Infinity, min: 0},\n    timeScale: {default: 1}\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', (e) => {\n      el.emit('animation-loop', {action: e.action, loopDelta: e.loopDelta});\n    });\n    this.mixer.addEventListener('finished', (e) => {\n      el.emit('animation-finished', {action: e.action, direction: e.direction});\n    });\n    if (this.data.clip) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (prevData) {\n    if (!prevData) return;\n\n    const data = this.data;\n    const changes = AFRAME.utils.diff(data, prevData);\n\n    // If selected clips have changed, restart animation.\n    if ('clip' in changes) {\n      this.stopAction();\n      if (data.clip) this.playAction();\n      return;\n    }\n\n    // Otherwise, modify running actions.\n    this.activeActions.forEach((action) => {\n      if ('duration' in changes && data.duration) {\n        action.setDuration(data.duration);\n      }\n      if ('clampWhenFinished' in changes) {\n        action.clampWhenFinished = data.clampWhenFinished;\n      }\n      if ('loop' in changes || 'repetitions' in changes) {\n        action.setLoop(LoopMode[data.loop], data.repetitions);\n      }\n      if ('timeScale' in changes) {\n        action.setEffectiveTimeScale(data.timeScale);\n      }\n    });\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n        data = this.data,\n        clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    const re = wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n        action.enabled = true;\n        action.clampWhenFinished = data.clampWhenFinished;\n        if (data.duration) action.setDuration(data.duration);\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp (s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape (s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","regExpEscape","s","replace","LoopMode","once","THREE","LoopOnce","repeat","LoopRepeat","pingpong","LoopPingPong","AFRAME","registerComponent","schema","clip","default","duration","clampWhenFinished","type","crossFadeDuration","loop","oneOf","Object","keys","repetitions","Infinity","min","timeScale","init","mixer","model","activeActions","el","getObject3D","load","addEventListener","e","detail","AnimationMixer","emit","action","loopDelta","direction","data","update","remove","stopAllAction","prevData","changes","utils","diff","stopAction","playAction","forEach","setDuration","setLoop","setEffectiveTimeScale","i","length","fadeOut","stop","clips","animations","geometry","re","RegExp","split","map","join","name","match","clipAction","enabled","fadeIn","play","push","tick","t","dt","isNaN"]
}
