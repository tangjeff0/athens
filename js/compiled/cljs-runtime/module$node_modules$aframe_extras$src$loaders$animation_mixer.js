shadow$provide.module$node_modules$aframe_extras$src$loaders$animation_mixer=function(global,require,module,exports){function regExpEscape(s){return s.replace(/[|\\{}()[\]^$+*?.]/g,"\\$\x26")}var LoopMode={once:THREE.LoopOnce,repeat:THREE.LoopRepeat,pingpong:THREE.LoopPingPong};module.exports=AFRAME.registerComponent("animation-mixer",{schema:{clip:{default:"*"},duration:{default:0},clampWhenFinished:{default:!1,type:"boolean"},crossFadeDuration:{default:0},loop:{default:"repeat",oneOf:Object.keys(LoopMode)},
repetitions:{default:Infinity,min:0},timeScale:{default:1}},init:function(){var $jscomp$this=this;this.mixer=this.model=null;this.activeActions=[];var model=this.el.getObject3D("mesh");model?this.load(model):this.el.addEventListener("model-loaded",function(e){$jscomp$this.load(e.detail.model)})},load:function(model){var el=this.el;this.model=model;this.mixer=new THREE.AnimationMixer(model);this.mixer.addEventListener("loop",function(e){el.emit("animation-loop",{action:e.action,loopDelta:e.loopDelta})});
this.mixer.addEventListener("finished",function(e){el.emit("animation-finished",{action:e.action,direction:e.direction})});this.data.clip&&this.update({})},remove:function(){this.mixer&&this.mixer.stopAllAction()},update:function(prevData){if(prevData){var data=this.data,changes=AFRAME.utils.diff(data,prevData);"clip"in changes?(this.stopAction(),data.clip&&this.playAction()):this.activeActions.forEach(function(action){"duration"in changes&&data.duration&&action.setDuration(data.duration);"clampWhenFinished"in
changes&&(action.clampWhenFinished=data.clampWhenFinished);("loop"in changes||"repetitions"in changes)&&action.setLoop(LoopMode[data.loop],data.repetitions);"timeScale"in changes&&action.setEffectiveTimeScale(data.timeScale)})}},stopAction:function(){for(var data=this.data,i=0;i<this.activeActions.length;i++)data.crossFadeDuration?this.activeActions[i].fadeOut(data.crossFadeDuration):this.activeActions[i].stop();this.activeActions.length=0},playAction:function(){if(this.mixer){var model=this.model,
data=this.data,clips=model.animations||(model.geometry||{}).animations||[];if(clips.length)for(var re=new RegExp("^"+data.clip.split(/\*+/).map(regExpEscape).join(".*")+"$"),clip,i=0;clip=clips[i];i++)clip.name.match(re)&&(clip=this.mixer.clipAction(clip,model),clip.enabled=!0,clip.clampWhenFinished=data.clampWhenFinished,data.duration&&clip.setDuration(data.duration),1!==data.timeScale&&clip.setEffectiveTimeScale(data.timeScale),clip.setLoop(LoopMode[data.loop],data.repetitions).fadeIn(data.crossFadeDuration).play(),
this.activeActions.push(clip))}},tick:function(t,dt){this.mixer&&!isNaN(dt)&&this.mixer.update(dt/1E3)}})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$loaders$animation_mixer.js.map
