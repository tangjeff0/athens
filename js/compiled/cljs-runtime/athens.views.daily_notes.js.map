{"version":3,"sources":["athens/views/daily_notes.cljs"],"mappings":"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","names":["athens.views.daily-notes/daily-notes-scroll-area-style","athens.views.daily-notes/daily-notes-page-style","athens.style/DEPTH-SHADOWS","athens.views.daily-notes/daily-notes-notional-page-style","cljs.core.merge","athens.views.daily-notes/scroll-daily-notes","_","cljs.core/deref","daily-notes","re_frame.core.subscribe","el","goog.dom/getElement","offset-top","rect","from-bottom","from-top","doc-height","js/document","top-delta","bottom-delta","re-frame.core/dispatch","athens.util.get_day","athens.util/uid-to-date","cljs.core/last","athens.views.daily-notes/db-scroll-daily-notes","goog.functions/debounce","athens.views.daily-notes/daily-notes-panel","note-refs","cljs.core/empty?","notes","G__62136","posh.reagent/q","athens.db/dsdb","cljs.core/not-empty","cljs.core.sort","cljs.core/reverse","cljs.core.map","x","posh.reagent/pull-many","stylefy.core.use_style","cljs.core.doall","iter__4529__auto__","s__62138","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__62140","cljs.core/chunk-buffer","i__62139","map__62141","cljs.core/-nth","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__62137","cljs.core/chunk-rest","map__62143","cljs.core/first","cljs.core/cons","cljs.core/rest","uid","athens.views.node-page/node-page-component","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.daily-notes\n  (:require\n    [athens.db :as db]\n    [athens.style :refer [DEPTH-SHADOWS]]\n    [athens.util :refer [get-day uid-to-date]]\n    [athens.views.node-page :refer [node-page-component]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [goog.dom :refer [getElement]]\n    [goog.functions :refer [debounce]]\n    [posh.reagent :refer [q pull-many]]\n    [re-frame.core :refer [dispatch subscribe]]\n    [stylefy.core :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def daily-notes-scroll-area-style\n  {:min-height \"calc(100vh + 1px)\"\n   :display        \"flex\"\n   :padding        \"1.25rem 0\"\n   :align-items    \"stretch\"\n   :flex           \"1 1 100%\"\n   :flex-direction \"column\"})\n\n\n(def daily-notes-page-style\n  {:box-shadow (:16 DEPTH-SHADOWS)\n   :align-self \"stretch\"\n   :justify-self \"stretch\"\n   :margin \"1.25rem 2.5rem\"\n   :padding \"1rem 2rem\"\n   :transition-duration \"0s\"\n   :border-radius \"0.5rem\"\n   :min-height \"calc(100vh - 10rem)\"})\n\n\n(def daily-notes-notional-page-style\n  (merge daily-notes-page-style {:box-shadow (:4 DEPTH-SHADOWS)\n                                 :opacity \"0.5\"}))\n\n\n;;; Helpers\n\n\n\n(defn scroll-daily-notes\n  [_]\n  (let [daily-notes @(subscribe [:daily-notes/items])\n        el          (getElement \"daily-notes\")\n        offset-top  (.. el -offsetTop)\n        rect        (.. el getBoundingClientRect)\n        from-bottom (.. rect -bottom)\n        from-top    (.. rect -top)\n        doc-height  (.. js/document -documentElement -scrollHeight)\n        top-delta   (- offset-top from-top)\n        bottom-delta (- from-bottom doc-height)]\n    ;; Don't allow user to scroll up for now.\n    (cond\n      (< top-delta 1) nil #_(dispatch [:daily-note/prev (get-day (uid-to-date (first daily-notes)) -1)])\n      (< bottom-delta 1) (dispatch [:daily-note/next (get-day (uid-to-date (last daily-notes)) 1)]))))\n\n\n(def db-scroll-daily-notes (debounce scroll-daily-notes 500))\n\n\n;;; Components\n\n\n(defn daily-notes-panel\n  []\n  (let [note-refs (subscribe [:daily-notes/items])]\n    (fn []\n      (if (empty? @note-refs)\n        (dispatch [:daily-note/next (get-day)])\n        (let [notes (some->> @(q '[:find [?uid ...]\n                                   :in $ [?uid ...]\n                                   :where [?e :block/uid ?uid]]\n                                 db/dsdb @note-refs)\n                             not-empty\n                             sort\n                             reverse\n                             (map (fn [x] [:block/uid x]))\n                             (pull-many db/dsdb '[*])\n                             deref)]\n          [:div#daily-notes (use-style daily-notes-scroll-area-style)\n           #_[:div (use-style (merge daily-notes-page-style {:box-shadow (:4 DEPTH-SHADOWS)\n                                                             :opacity \"0.5\"\n                                                             :min-height \"10vh\"}))\n              [:h1 \"Later\"]]\n           (doall\n             (for [{:keys [block/uid]} notes]\n               ^{:key uid}\n               [:<>\n                [:div (use-style daily-notes-page-style)\n                 [node-page-component [:block/uid uid]]]]))\n           [:div (use-style daily-notes-notional-page-style)\n            [:h1 \"Earlier\"]]])))))\n"]}