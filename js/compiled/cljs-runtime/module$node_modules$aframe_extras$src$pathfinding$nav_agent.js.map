{
"version":3,
"file":"module$node_modules$aframe_extras$src$pathfinding$nav_agent.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/aframe-extras/src/pathfinding/nav-agent.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$pathfinding$nav_agent\"] = function(global,require,module,exports) {\nmodule.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {type: 'vec3'},\n    active: {default: false},\n    speed: {default: 2}\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: (function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('navigation-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {active: false});\n        el.emit('navigation-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {active: false});\n          el.emit('navigation-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction.y = -1;\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n\n    };\n  }())\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","AFRAME","registerComponent","schema","destination","type","active","default","speed","init","system","el","sceneEl","systems","nav","addAgent","group","path","raycaster","THREE","Raycaster","remove","removeAgent","update","length","updateNavLocation","tick","vDest","Vector3","vDelta","vNext","t","dt","data","position","object3D","getGroup","getPath","copy","emit","vCurrent","vWaypoint","subVectors","distance","shift","setAttribute","gazeTarget","setLength","add","y","lookAt","ray","origin","direction","intersections","intersectObject","getNavMesh","point","console","warn"]
}
