shadow$provide.module$node_modules$aframe_extras$src$misc$cube_env_map=function(global,require,module,exports){function ensureMaterialArray(material){return material?Array.isArray(material)?material:material.materials?material.materials:[material]:[]}function applyEnvMap(mesh,materialNames,envMap,reflectivity){mesh&&(materialNames=materialNames||[],mesh.traverse(function(node){node.isMesh&&ensureMaterialArray(node.material).forEach(function(material){if(!material||"envMap"in material)materialNames.length&&
-1===materialNames.indexOf(material.name)||(material.envMap=envMap,material.reflectivity=reflectivity,material.needsUpdate=!0)})}))}module.exports=AFRAME.registerComponent("cube-env-map",{multiple:!0,schema:{path:{default:""},extension:{default:"jpg",oneOf:["jpg","png"]},format:{default:"RGBFormat",oneOf:["RGBFormat","RGBAFormat"]},enableBackground:{default:!1},reflectivity:{default:1,min:0,max:1},materials:{default:[]}},init:function(){var $jscomp$this=this,data$jscomp$0=this.data;this.texture=(new THREE.CubeTextureLoader).load([data$jscomp$0.path+
"posx."+data$jscomp$0.extension,data$jscomp$0.path+"negx."+data$jscomp$0.extension,data$jscomp$0.path+"posy."+data$jscomp$0.extension,data$jscomp$0.path+"negy."+data$jscomp$0.extension,data$jscomp$0.path+"posz."+data$jscomp$0.extension,data$jscomp$0.path+"negz."+data$jscomp$0.extension]);this.texture.format=THREE[data$jscomp$0.format];this.object3dsetHandler=function(){var mesh=$jscomp$this.el.getObject3D("mesh"),data=$jscomp$this.data;applyEnvMap(mesh,data.materials,$jscomp$this.texture,data.reflectivity)};
this.el.addEventListener("object3dset",this.object3dsetHandler)},update:function(oldData){var data=this.data,mesh=this.el.getObject3D("mesh"),addedMaterialNames=[],removedMaterialNames=[];data.materials.length&&(oldData.materials?(addedMaterialNames=data.materials.filter(function(name){return!oldData.materials.includes(name)}),removedMaterialNames=oldData.materials.filter(function(name){return!data.materials.includes(name)})):addedMaterialNames=data.materials);addedMaterialNames.length&&applyEnvMap(mesh,
addedMaterialNames,this.texture,data.reflectivity);removedMaterialNames.length&&applyEnvMap(mesh,removedMaterialNames,null,1);oldData.materials&&data.reflectivity!==oldData.reflectivity&&(addedMaterialNames=data.materials.filter(function(name){return oldData.materials.includes(name)}),addedMaterialNames.length&&applyEnvMap(mesh,addedMaterialNames,this.texture,data.reflectivity));this.data.enableBackground&&!oldData.enableBackground?this.setBackground(this.texture):!this.data.enableBackground&&oldData.enableBackground&&
this.setBackground(null)},remove:function(){this.el.removeEventListener("object3dset",this.object3dsetHandler);var mesh=this.el.getObject3D("mesh"),data=this.data;applyEnvMap(mesh,data.materials,null,1);data.enableBackground&&this.setBackground(null)},setBackground:function(texture){this.el.sceneEl.object3D.background=texture}})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$misc$cube_env_map.js.map
