{
"version":3,
"file":"module$node_modules$three$examples$jsm$postprocessing$RenderPass.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,gEAAf,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAA,CAAOC,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAA,CAAQI,UAAR,CAAqB,IAAK,EAE1B,KAAIC,aAAeP,OAAA,CAAQ,8CAAR,CAAnB,CAEIQ,MAAQR,OAAA,CAAQ,4DAAR,CAERM,OAAAA,CAAaA,QAAmB,CAACG,KAAD,CAAQC,MAAR,CAAgBC,gBAAhB,CAAkCC,UAAlC,CAA8CC,UAA9C,CAA0D,CAC5FL,KAAA,CAAMM,IAAN,CAAWC,IAAX,CAAgB,IAAhB,CAEA,KAAA,CAAKN,KAAL,CAAaA,KACb,KAAA,CAAKC,MAAL,CAAcA,MACd,KAAA,CAAKC,gBAAL,CAAwBA,gBACxB;IAAA,CAAKC,UAAL,CAAkBA,UAClB,KAAA,CAAKC,UAAL,CAAiCG,IAAAA,EAAf,GAAAH,UAAA,CAA2BA,UAA3B,CAAwC,CAC1D,KAAA,CAAKI,KAAL,CAAa,CAAA,CAEb,KAAA,CAAKC,SAAL,CADA,IACA,CADKC,UACL,CADkB,CAAA,CAElB,KAAA,CAAKC,cAAL,CAAsB,IAAIb,YAAJ,CAAiBc,KAXqD,CAc9FnB,QAAA,CAAQI,UAAR,CAAqBA,MACrBA,OAAA,CAAWgB,SAAX,CAAuBnB,MAAA,CAAOoB,MAAP,CAAcpB,MAAA,CAAOqB,MAAP,CAAchB,KAAd,CAAoBM,IAApB,CAAyBQ,SAAzB,CAAd,CAAmD,CACxEG,YAAanB,MAD2D,CAExEoB,OAAQA,QAAe,CAACC,QAAD,CAAWC,WAAX,CAAwBC,UAAxB,CAErB,CACIC,WAAAA,CAAeH,QAAfG,CAAwBC,SAC5BJ,SAAA,CAASI,SAAT,CAAqB,CAAA,CAGrB,IAA8Bf,IAAAA,EAA9B,GAAI,IAAJ,CAASL,gBAAT,CAAyC,CACvC,IAAAqB,oBAAsB,IAAtBA,CAA2BvB,KAA3BuB,CAAiCrB,gBACjC,KAAA,CAAKF,KAAL,CAAWE,gBAAX,CAA8B,IAA9B,CAAmCA,gBAFI,CAKzC,GAAI,IAAJ,CAASC,UAAT,CAAqB,CACnBe,QAAA,CAASM,aAAT,CAAuB,IAAvB,CAA4Bb,cAA5B,CACA;IAAAc,cAAgBP,QAAA,CAASQ,aAAT,EAChBR,SAAA,CAASS,aAAT,CAAuB,IAAvB,CAA4BxB,UAA5B,CAAwC,IAAxC,CAA6CC,UAA7C,CAHmB,CAMjB,IAAJ,CAASM,UAAT,EACEQ,QAAA,CAASR,UAAT,EAGFQ,SAAA,CAASU,eAAT,CAAyB,IAAA,CAAKC,cAAL,CAAsB,IAAtB,CAA6BT,UAAtD,CAEI,KAAJ,CAASZ,KAAT,EAAgBU,QAAA,CAASV,KAAT,CAAeU,QAAf,CAAwBY,cAAxB,CAAwCZ,QAAxC,CAAiDa,cAAjD,CAAiEb,QAAjE,CAA0Ec,gBAA1E,CAChBd,SAAA,CAASD,MAAT,CAAgB,IAAhB,CAAqBjB,KAArB,CAA4B,IAA5B,CAAiCC,MAAjC,CAEI,KAAJ,CAASE,UAAT,EACEe,QAAA,CAASS,aAAT,CAAuB,IAAvB,CAA4BhB,cAA5B,CAA4Cc,aAA5C,CAG4BlB,KAAAA,EAA9B,GAAI,IAAJ,CAASL,gBAAT,GACE,IADF,CACOF,KADP,CACaE,gBADb,CACgCqB,mBADhC,CAIAL,SAAA,CAASI,SAAT;AAAqBD,WAjCrB,CAJsE,CAAnD,CA3BsG;",
"sources":["node_modules/three/examples/jsm/postprocessing/RenderPass.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$postprocessing$RenderPass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenderPass = void 0;\n\nvar _threeModule = require(\"../../../build/three.module.js\");\n\nvar _Pass = require(\"../postprocessing/Pass.js\");\n\nvar RenderPass = function RenderPass(scene, camera, overrideMaterial, clearColor, clearAlpha) {\n  _Pass.Pass.call(this);\n\n  this.scene = scene;\n  this.camera = camera;\n  this.overrideMaterial = overrideMaterial;\n  this.clearColor = clearColor;\n  this.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n  this.clear = true;\n  this.clearDepth = false;\n  this.needsSwap = false;\n  this._oldClearColor = new _threeModule.Color();\n};\n\nexports.RenderPass = RenderPass;\nRenderPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: RenderPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    var oldClearAlpha, oldOverrideMaterial;\n\n    if (this.overrideMaterial !== undefined) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n\n    if (this.overrideMaterial !== undefined) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n\n    renderer.autoClear = oldAutoClear;\n  }\n});\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","RenderPass","_threeModule","_Pass","scene","camera","overrideMaterial","clearColor","clearAlpha","Pass","call","undefined","clear","needsSwap","clearDepth","_oldClearColor","Color","prototype","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldOverrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"]
}
