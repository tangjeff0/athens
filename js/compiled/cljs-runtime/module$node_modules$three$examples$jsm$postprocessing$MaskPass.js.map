{
"version":3,
"file":"module$node_modules$three$examples$jsm$postprocessing$MaskPass.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/three/examples/jsm/postprocessing/MaskPass.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$postprocessing$MaskPass\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClearMaskPass = exports.MaskPass = void 0;\n\nvar _Pass = require(\"../postprocessing/Pass.js\");\n\nvar MaskPass = function MaskPass(scene, camera) {\n  _Pass.Pass.call(this);\n\n  this.scene = scene;\n  this.camera = camera;\n  this.clear = true;\n  this.needsSwap = false;\n  this.inverse = false;\n};\n\nexports.MaskPass = MaskPass;\nMaskPass.prototype = Object.assign(Object.create(_Pass.Pass.prototype), {\n  constructor: MaskPass,\n  render: function render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    var context = renderer.getContext();\n    var state = renderer.state; // don't update color or depth\n\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false); // lock buffers\n\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true); // set up stencil\n\n    var writeValue, clearValue;\n\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true); // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera); // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false); // only render where stencil is set to 1\n\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n});\n\nvar ClearMaskPass = function ClearMaskPass() {\n  _Pass.Pass.call(this);\n\n  this.needsSwap = false;\n};\n\nexports.ClearMaskPass = ClearMaskPass;\nClearMaskPass.prototype = Object.create(_Pass.Pass.prototype);\nObject.assign(ClearMaskPass.prototype, {\n  render: function render(renderer\n  /*, writeBuffer, readBuffer, deltaTime, maskActive */\n  ) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n});\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ClearMaskPass","MaskPass","_Pass","scene","camera","Pass","call","clear","inverse","needsSwap","prototype","assign","create","constructor","render","renderer","writeBuffer","readBuffer","context","getContext","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP"]
}
