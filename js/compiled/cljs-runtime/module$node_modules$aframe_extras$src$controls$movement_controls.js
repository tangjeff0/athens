shadow$provide.module$node_modules$aframe_extras$src$controls$movement_controls=function(global,require,module,exports){module.exports=AFRAME.registerComponent("movement-controls",{dependencies:["rotation"],schema:{enabled:{default:!0},controls:{default:["gamepad","trackpad","keyboard","touch"]},speed:{default:.3,min:0},fly:{default:!1},constrainToNavMesh:{default:!1},camera:{default:"[movement-controls] [camera]",type:"selector"}},init:function(){var el=this.el;this.velocityCtrl=null;this.velocity=
new THREE.Vector3;this.heading=new THREE.Quaternion;this.navNode=this.navGroup=null;el.sceneEl.hasLoaded?this.injectControls():el.sceneEl.addEventListener("loaded",this.injectControls.bind(this))},update:function(prevData){var el=this.el,data=this.data,nav=el.sceneEl.systems.nav;el.sceneEl.hasLoaded&&this.injectControls();nav&&data.constrainToNavMesh!==prevData.constrainToNavMesh&&(data.constrainToNavMesh?nav.addAgent(this):nav.removeAgent(this))},injectControls:function(){for(var data=this.data,
name,i=0;i<data.controls.length;i++)name=data.controls[i]+"-controls",this.el.components[name]||this.el.setAttribute(name,"")},updateNavLocation:function(){this.navNode=this.navGroup=null},tick:function(){var start=new THREE.Vector3,end=new THREE.Vector3,clampedEnd=new THREE.Vector3;return function(t,dt){if(dt){t=this.el;var data=this.data;if(data.enabled){this.updateVelocityCtrl();var velocityCtrl=this.velocityCtrl,velocity=this.velocity;velocityCtrl&&(.2<dt/1E3?velocity.set(0,0,0):this.updateVelocity(dt),
data.constrainToNavMesh&&!1!==velocityCtrl.isNavMeshConstrained?1E-5>velocity.lengthSq()||(start.copy(t.object3D.position),end.copy(velocity).multiplyScalar(dt/1E3).add(start),dt=t.sceneEl.systems.nav,this.navGroup=null===this.navGroup?dt.getGroup(start):this.navGroup,this.navNode=this.navNode||dt.getNode(start,this.navGroup),this.navNode=dt.clampStep(start,end,this.navGroup,this.navNode,clampedEnd),t.object3D.position.copy(clampedEnd)):t.hasAttribute("velocity")?t.setAttribute("velocity",velocity):
(t.object3D.position.x+=velocity.x*dt/1E3,t.object3D.position.y+=velocity.y*dt/1E3,t.object3D.position.z+=velocity.z*dt/1E3))}}}}(),updateVelocityCtrl:function(){var data=this.data;if(data.enabled){for(var i=0,l=data.controls.length;i<l;i++){var control=this.el.components[data.controls[i]+"-controls"];if(control&&control.isVelocityActive()){this.velocityCtrl=control;return}}this.velocityCtrl=null}},updateVelocity:function(){var vector2=new THREE.Vector2,quaternion=new THREE.Quaternion;return function(dt){var el=
this.el,control=this.velocityCtrl,velocity=this.velocity,data=this.data;if(control)if(control.getVelocityDelta)var dVelocity=control.getVelocityDelta(dt);else{if(control.getVelocity){velocity.copy(control.getVelocity());return}if(control.getPositionDelta){velocity.copy(control.getPositionDelta(dt).multiplyScalar(1E3/dt));return}throw Error("Incompatible movement controls: ",control);}el.hasAttribute("velocity")&&!data.constrainToNavMesh&&velocity.copy(this.el.getAttribute("velocity"));dVelocity&&
data.enabled&&(quaternion.copy(data.camera.object3D.quaternion),quaternion.premultiply(el.object3D.quaternion),dVelocity.applyQuaternion(quaternion),dt=dVelocity.length(),data.fly?(velocity.copy(dVelocity),velocity.multiplyScalar(16.66667*this.data.speed)):(vector2.set(dVelocity.x,dVelocity.z),vector2.setLength(dt*this.data.speed*16.66667),velocity.x=vector2.x,velocity.z=vector2.y))}}()})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$controls$movement_controls.js.map
