shadow$provide.module$node_modules$aframe_extras$src$controls$checkpoint_controls=function(global,require,module,exports){module.exports=AFRAME.registerComponent("checkpoint-controls",{schema:{enabled:{default:!0},mode:{default:"teleport",oneOf:["teleport","animate"]},animateSpeed:{default:3}},init:function(){this.active=!0;this.checkpoint=null;this.isNavMeshConstrained=!1;this.offset=new THREE.Vector3;this.position=new THREE.Vector3;this.targetPosition=new THREE.Vector3},play:function(){this.active=
!0},pause:function(){this.active=!1},setCheckpoint:function(checkpoint){var el=this.el;this.active&&this.checkpoint!==checkpoint&&(this.checkpoint&&el.emit("navigation-end",{checkpoint:this.checkpoint}),this.checkpoint=checkpoint,this.sync(),.1>this.position.distanceTo(this.targetPosition)?this.checkpoint=null:(el.emit("navigation-start",{checkpoint:checkpoint}),"teleport"===this.data.mode&&(this.el.setAttribute("position",this.targetPosition),this.checkpoint=null,el.emit("navigation-end",{checkpoint:checkpoint}),
el.components["movement-controls"].updateNavLocation())))},isVelocityActive:function(){return!(!this.active||!this.checkpoint)},getVelocity:function(){if(this.active){var data=this.data,offset=this.offset,position=this.position,targetPosition=this.targetPosition,checkpoint=this.checkpoint;this.sync();if(.1>position.distanceTo(targetPosition))return this.checkpoint=null,this.el.emit("navigation-end",{checkpoint:checkpoint}),offset.set(0,0,0);offset.setLength(data.animateSpeed);return offset}},sync:function(){var offset=
this.offset,position=this.position,targetPosition=this.targetPosition;position.copy(this.el.getAttribute("position"));this.checkpoint.object3D.getWorldPosition(targetPosition);targetPosition.add(this.checkpoint.components.checkpoint.getOffset());offset.copy(targetPosition).sub(position)}})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$controls$checkpoint_controls.js.map
