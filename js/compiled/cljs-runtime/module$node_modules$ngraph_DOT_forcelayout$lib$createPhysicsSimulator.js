shadow$provide.module$node_modules$ngraph_DOT_forcelayout$lib$createPhysicsSimulator=function(global,require,module,exports){module.exports=function(settings$jscomp$0){function getBoundingBox(){bounds.update();return bounds.box}function addForce(forceName,forceFunction){if(forceMap.has(forceName))throw Error("Force "+forceName+" is already added");forceMap.set(forceName,forceFunction);forces.push(forceFunction)}function augment(source,target,key){source.hasOwnProperty(key)&&"function"!==typeof target[key]&&
(Number.isFinite(source[key])?target[key]=function(value){if(void 0!==value){if(!Number.isFinite(value))throw Error("Value of "+key+" should be a valid number.");source[key]=value;return target}return source[key]}:target[key]=function(value){return void 0!==value?(source[key]=value,target):source[key]})}var Spring=require("module$node_modules$ngraph_DOT_forcelayout$lib$spring"),merge=require("module$node_modules$ngraph_DOT_merge$index"),eventify=require("module$node_modules$ngraph_DOT_events$index");
if(settings$jscomp$0){if(void 0!==settings$jscomp$0.springCoeff)throw Error("springCoeff was renamed to springCoefficient");if(void 0!==settings$jscomp$0.dragCoeff)throw Error("dragCoeff was renamed to dragCoefficient");}settings$jscomp$0=merge(settings$jscomp$0,{springLength:10,springCoefficient:.8,gravity:-12,theta:.8,dragCoefficient:.9,timeStep:.5,adaptiveTimeStepWeight:0,dimensions:2,debug:!1});merge=dimensionalCache[settings$jscomp$0.dimensions];if(!merge){var dimensions=settings$jscomp$0.dimensions;
merge={Body:generateCreateBodyFunction(dimensions,settings$jscomp$0.debug),createQuadTree:generateQuadTreeFunction(dimensions),createBounds:generateBoundsFunction(dimensions),createDragForce:generateCreateDragForceFunction(dimensions),createSpringForce:generateCreateSpringForceFunction(dimensions),integrate:generateIntegratorFunction(dimensions)};dimensionalCache[dimensions]=merge}var Body=merge.Body;dimensions=merge.createQuadTree;var createBounds=merge.createBounds,createDragForce=merge.createDragForce,
createSpringForce=merge.createSpringForce,integrate=merge.integrate;merge=require("module$node_modules$ngraph_DOT_random$index").random(42);var bodies=[],springs=[],quadTree=dimensions(settings$jscomp$0,merge),bounds=createBounds(bodies,settings$jscomp$0,merge),springForce=createSpringForce(settings$jscomp$0,merge),dragForce=createDragForce(settings$jscomp$0),forces=[],forceMap=new Map,iterationNumber=0;addForce("nbody",function(iterationUmber){if(0!==bodies.length)for(quadTree.insertBodies(bodies),
iterationUmber=bodies.length;iterationUmber--;){var body=bodies[iterationUmber];body.isPinned||(body.reset(),quadTree.updateBodyForce(body),dragForce.update(body))}});addForce("spring",function(){for(var i=springs.length;i--;)springForce.update(springs[i])});merge={bodies:bodies,quadTree:quadTree,springs:springs,settings:settings$jscomp$0,addForce:addForce,removeForce:function(forceName){forceName=forces.indexOf(forceMap.get(forceName));0>forceName||forces.splice(forceName,1)},getForces:function(){return forceMap},
step:function(){for(var i=0;i<forces.length;++i)forces[i](iterationNumber);i=integrate(bodies,settings$jscomp$0.timeStep,settings$jscomp$0.adaptiveTimeStepWeight);iterationNumber+=1;return i},addBody:function(body){if(!body)throw Error("Body is required");bodies.push(body);return body},addBodyAt:function(pos){if(!pos)throw Error("Body position is required");pos=new Body(pos);bodies.push(pos);return pos},removeBody:function(body){if(body&&(body=bodies.indexOf(body),!(0>body)))return bodies.splice(body,
1),0===bodies.length&&bounds.reset(),!0},addSpring:function(body1,body2,springLength,springCoefficient){if(!body1||!body2)throw Error("Cannot add null spring to force simulator");"number"!==typeof springLength&&(springLength=-1);body1=new Spring(body1,body2,springLength,0<=springCoefficient?springCoefficient:-1);springs.push(body1);return body1},getTotalMovement:function(){return 0},removeSpring:function(spring){if(spring&&(spring=springs.indexOf(spring),-1<spring))return springs.splice(spring,1),
!0},getBestNewBodyPosition:function(neighbors){return bounds.getBestNewPosition(neighbors)},getBBox:getBoundingBox,getBoundingBox:getBoundingBox,invalidateBBox:function(){console.warn("invalidateBBox() is deprecated, bounds always recomputed on `getBBox()` call")},gravity:function(value){return void 0!==value?(settings$jscomp$0.gravity=value,quadTree.options({gravity:value}),this):settings$jscomp$0.gravity},theta:function(value){return void 0!==value?(settings$jscomp$0.theta=value,quadTree.options({theta:value}),
this):settings$jscomp$0.theta}};(function(settings,target){for(var key in settings)augment(settings,target,key)})(settings$jscomp$0,merge);eventify(merge);return merge};var generateCreateBodyFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateCreateBody"),generateQuadTreeFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateQuadTree"),generateBoundsFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateBounds"),
generateCreateDragForceFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateCreateDragForce"),generateCreateSpringForceFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateCreateSpringForce"),generateIntegratorFunction=require("module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateIntegrator"),dimensionalCache={}}
//# sourceMappingURL=module$node_modules$ngraph_DOT_forcelayout$lib$createPhysicsSimulator.js.map
