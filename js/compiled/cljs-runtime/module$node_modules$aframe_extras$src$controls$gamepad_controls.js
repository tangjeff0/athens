shadow$provide.module$node_modules$aframe_extras$src$controls$gamepad_controls=function(global,require,module,exports){var GamepadButton=require("module$node_modules$aframe_extras$lib$GamepadButton"),GamepadButtonEvent=require("module$node_modules$aframe_extras$lib$GamepadButtonEvent");module.exports=AFRAME.registerComponent("gamepad-controls",{GamepadButton:GamepadButton,schema:{enabled:{default:!0},camera:{default:"[camera]",type:"selector"},rotationSensitivity:{default:2}},init:function(){var sceneEl=
this.el.sceneEl;this.system=sceneEl.systems["tracked-controls-webxr"]||{controllers:[]};this.prevTime=window.performance.now();this.buttons={};var rotation=this.el.object3D.rotation;this.pitch=new THREE.Object3D;this.pitch.rotation.x=THREE.Math.degToRad(rotation.x);this.yaw=new THREE.Object3D;this.yaw.position.y=10;this.yaw.rotation.y=THREE.Math.degToRad(rotation.y);this.yaw.add(this.pitch);this._lookVector=new THREE.Vector2;this._moveVector=new THREE.Vector2;this._dpadVector=new THREE.Vector2;sceneEl.addBehavior(this)},
update:function(){this.tick()},tick:function(t,dt){this.updateButtonState();this.updateRotation(dt)},remove:function(){},isVelocityActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var dpad=this._dpadVector,joystick=this._moveVector;this.getDpad(dpad);this.getJoystick(1,joystick);var inputY=dpad.y||joystick.y;return.2<Math.abs(dpad.x||joystick.x)||.2<Math.abs(inputY)},getVelocityDelta:function(){var dpad=this._dpadVector,joystick=this._moveVector;this.getDpad(dpad);this.getJoystick(1,
joystick);var inputX=dpad.x||joystick.x;dpad=dpad.y||joystick.y;joystick=new THREE.Vector3;.2<Math.abs(inputX)&&(joystick.x+=inputX);.2<Math.abs(dpad)&&(joystick.z+=dpad);return joystick},isRotationActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var joystick=this._lookVector;this.getJoystick(2,joystick);return.2<Math.abs(joystick.x)||.2<Math.abs(joystick.y)},updateRotation:function(dt){if(this.isRotationActive()){var data=this.data,yaw=this.yaw,pitch=this.pitch,lookControls=
data.camera.components["look-controls"],hasLookControls=lookControls&&lookControls.pitchObject&&lookControls.yawObject;hasLookControls&&(pitch.rotation.copy(lookControls.pitchObject.rotation),yaw.rotation.copy(lookControls.yawObject.rotation));var lookVector=this._lookVector;this.getJoystick(2,lookVector);.2>=Math.abs(lookVector.x)&&(lookVector.x=0);.2>=Math.abs(lookVector.y)&&(lookVector.y=0);lookVector.multiplyScalar(data.rotationSensitivity*dt/1E3);yaw.rotation.y-=lookVector.x;pitch.rotation.x-=
lookVector.y;pitch.rotation.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,pitch.rotation.x));data.camera.object3D.rotation.set(pitch.rotation.x,yaw.rotation.y,0);hasLookControls&&(lookControls.pitchObject.rotation.copy(pitch.rotation),lookControls.yawObject.rotation.copy(yaw.rotation))}},updateButtonState:function(){var gamepad=this.getGamepad("right");if(this.data.enabled&&gamepad)for(var i=0;i<gamepad.buttons.length;i++)gamepad.buttons[i].pressed&&!this.buttons[i]?this.emit(new GamepadButtonEvent("gamepadbuttondown",
i,gamepad.buttons[i])):!gamepad.buttons[i].pressed&&this.buttons[i]&&this.emit(new GamepadButtonEvent("gamepadbuttonup",i,gamepad.buttons[i])),this.buttons[i]=gamepad.buttons[i].pressed;else Object.keys(this.buttons)&&(this.buttons={})},emit:function(event){this.el.emit(event.type,event);this.el.emit(event.type+":"+event.index,new GamepadButtonEvent(event.type,event.index,event))},getGamepad:function(){var _xrGamepads=[],_empty=[];return function(handPreference){var proxyControls=this.el.sceneEl.components["proxy-controls"];
if(proxyControls=proxyControls&&proxyControls.isConnected()&&proxyControls.getGamepad(0))return proxyControls;for(proxyControls=_xrGamepads.length=0;proxyControls<this.system.controllers.length;proxyControls++){var xrController=this.system.controllers[proxyControls];xrController=xrController?xrController.gamepad:null;_xrGamepads.push(xrController);if(xrController&&xrController.handedness===handPreference)return xrController}proxyControls=navigator.getGamepads?navigator.getGamepads():_empty;for(xrController=
0;xrController<proxyControls.length;xrController++){var navGamepad=proxyControls[xrController];if(navGamepad&&navGamepad.hand===handPreference)return navGamepad}return _xrGamepads[0]||proxyControls[0]}}(),getButton:function(index){return this.getGamepad("right").buttons[index]},getAxis:function(index){return this.getGamepad(1<index?"right":"left").axes[index]},getJoystick:function(index,target){var gamepad=this.getGamepad(1===index?"left":"right");if("xr-standard"===gamepad.mapping)switch(index){case 1:return target.set(gamepad.axes[2],
gamepad.axes[3]);case 2:return target.set(gamepad.axes[0],gamepad.axes[1])}else switch(index){case 1:return target.set(gamepad.axes[0],gamepad.axes[1]);case 2:return target.set(gamepad.axes[2],gamepad.axes[3])}throw Error('Unexpected joystick index "%d".',index);},getDpad:function(target){var gamepad=this.getGamepad("left");return gamepad.buttons[GamepadButton.DPAD_RIGHT]?target.set((gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed?1:0)+(gamepad.buttons[GamepadButton.DPAD_LEFT].pressed?-1:0),(gamepad.buttons[GamepadButton.DPAD_UP].pressed?
-1:0)+(gamepad.buttons[GamepadButton.DPAD_DOWN].pressed?1:0)):target.set(0,0)},isConnected:function(){var gamepad=this.getGamepad("left");return!(!gamepad||!gamepad.connected)},getID:function(){return this.getGamepad("left").id}})}
//# sourceMappingURL=module$node_modules$aframe_extras$src$controls$gamepad_controls.js.map
