{"version":3,"sources":["athens/views/app_toolbar.cljs"],"mappings":"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","names":["athens.views.app-toolbar/app-header-style","athens.views.app-toolbar/app-header-control-section-style","athens.views.app-toolbar/app-header-secondary-controls-style","cljs.core.merge","athens.style.color","athens.views.app-toolbar/separator-style","stylefy.core.keyframes","athens.views.app-toolbar/separator","stylefy.core.use_style","athens.views.app-toolbar/app-toolbar","left-open?","re_frame.core.subscribe","right-open?","route-name","theme-dark","electron?","athens.util/electron?","cljs.core/deref","athens.views.buttons/button","re-frame.core/dispatch","js/module$node_modules$$material_ui$icons$index.Menu","js/window.history","js/module$node_modules$$material_ui$icons$index.ChevronLeft","js/module$node_modules$$material_ui$icons$index.ChevronRight","athens.router/nav-daily-notes","cljs.core._EQ_","js/module$node_modules$$material_ui$icons$index.Today","athens.router/navigate","js/module$node_modules$$material_ui$icons$index.FileCopy","js/module$node_modules$$material_ui$icons$index.BubbleChart","js/module$node_modules$$material_ui$icons$index.Search","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.FiberManualRecord","js/module$node_modules$$material_ui$icons$index.Settings","js/module$node_modules$$material_ui$icons$index.FolderOpen","js/module$node_modules$$material_ui$icons$index.ToggleOff","js/module$node_modules$$material_ui$icons$index.ToggleOn","js/module$node_modules$$material_ui$icons$index.VerticalSplit"],"sourcesContent":["(ns athens.views.app-toolbar\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.router :as router]\n    [athens.style :refer [color]]\n    [athens.subs]\n    [athens.util :as util]\n    [athens.views.buttons :refer [button]]\n    [re-frame.core :refer [subscribe dispatch]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def app-header-style\n  {:grid-area \"app-header\"\n   :justify-content \"flex-start\"\n   :background-clip \"padding-box\"\n   :align-items \"center\"\n   :display \"grid\"\n   :position \"absolute\"\n   :top \"-0.25rem\"\n   :right 0\n   :left 0\n   :grid-template-columns \"auto 1fr auto\"\n   :z-index \"1000\"\n   :grid-auto-flow \"column\"\n   :padding \"0.25rem 0.75rem\"\n   ::stylefy/manual [[:svg {:font-size \"20px\"}]\n                     [:button {:justify-self \"flex-start\"}]]})\n\n\n(def app-header-control-section-style\n  {:display \"grid\"\n   :grid-auto-flow \"column\"\n   :background (:color :background-color :opacity-med)\n   :backdrop-filter \"blur(0.375rem)\"\n   :padding \"0.25rem\"\n   :border-radius \"calc(0.25rem + 0.25rem)\" ;; Button corner radius + container padding makes \"concentric\" container radius\n   :grid-gap \"0.25rem\"})\n\n\n(def app-header-secondary-controls-style\n  (merge app-header-control-section-style\n         {:color (color :body-text-color :opacity-med)\n          :justify-self \"flex-end\"\n          :margin-left \"auto\"\n          ::stylefy/manual [[:button {:color \"inherit\"}]]}))\n\n\n(def separator-style\n  {:border \"0\"\n   :background (color :background-minus-1 :opacity-high)\n   :margin-inline \"20%\"\n   :margin-block \"0\"\n   :inline-size \"1px\"\n   :block-size \"auto\"})\n\n\n(stylefy/keyframes \"fade-in\"\n                   [:from\n                    {:opacity \"0\"}]\n                   [:to\n                    {:opacity \"1\"}])\n\n\n;;; Components\n\n\n(defn separator\n  []\n  [:hr (use-style separator-style)])\n\n\n(defn app-toolbar\n  []\n  (let [left-open?  (subscribe [:left-sidebar/open])\n        right-open? (subscribe [:right-sidebar/open])\n        route-name  (subscribe [:current-route/name])\n        theme-dark  (subscribe [:theme/dark])\n        electron? (util/electron?)]\n    (fn []\n      [:<>\n       [:header (use-style app-header-style)\n        [:div (use-style app-header-control-section-style)\n         [button {:active   @left-open?\n                  :on-click #(dispatch [:left-sidebar/toggle])}\n          [:> mui-icons/Menu]]\n         [separator]\n         ;; TODO: refactor to effects\n         (when electron?\n           [:<>\n            [button {:on-click #(.back js/window.history)} [:> mui-icons/ChevronLeft]]\n            [button {:on-click #(.forward js/window.history)} [:> mui-icons/ChevronRight]]\n            [separator]])\n         [button {:on-click router/nav-daily-notes\n                  :active   (= @route-name :home)} [:> mui-icons/Today]]\n         [button {:on-click #(router/navigate :pages)\n                  :active   (= @route-name :pages)} [:> mui-icons/FileCopy]]\n         [button {:on-click #(router/navigate :graph)\n                  :active   (= @route-name :graph)} [:> mui-icons/BubbleChart]]\n         ;; below is used for testing error tracking\n         #_[button {:on-click #(throw (js/Error \"error\"))\n                    :style {:border \"1px solid red\"}} [:> mui-icons/Warning]]\n         [button {:on-click #(dispatch [:athena/toggle])\n                  :style    {:width \"14rem\" :margin-left \"1rem\" :background (color :background-minus-1)}\n                  :active   @(subscribe [:athena/open])}\n          [:<> [:> mui-icons/Search] [:span \"Find or Create a Page\"]]]]\n\n        [:div (use-style app-header-secondary-controls-style)\n         (when electron?\n           [:<>\n            [(reagent.core/adapt-react-class mui-icons/FiberManualRecord)\n             {:style {:color      (color (if @(subscribe [:db/synced])\n                                           :confirmation-color\n                                           :highlight-color))\n                      :align-self \"center\"}}]\n            [button {:on-click #(router/navigate :settings)\n                     :active   (= @route-name :settings)}\n             [:> mui-icons/Settings]]\n            [button {:on-click #(dispatch [:modal/toggle])}\n             [:> mui-icons/FolderOpen]]\n            [separator]])\n         [button {:on-click #(dispatch [:theme/toggle])}\n          (if @theme-dark\n            [:> mui-icons/ToggleOff]\n            [:> mui-icons/ToggleOn])]\n         [separator]\n         [button {:active   @right-open?\n                  :on-click #(dispatch [:right-sidebar/toggle])}\n          [:> mui-icons/VerticalSplit {:style {:transform \"scaleX(-1)\"}}]]]]])))\n\n"]}