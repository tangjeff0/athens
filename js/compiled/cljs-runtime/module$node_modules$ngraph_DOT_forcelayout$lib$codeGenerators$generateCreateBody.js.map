{
"version":3,
"file":"module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateCreateBody.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,gFAAf,CAAqG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAa7IC,QAASA,+BAA8B,CAACC,SAAD,CAAYC,YAAZ,CAA0B,CAC3DC,SAAAA,CAAUC,oBAAA,CAAqBH,SAArB,CACd,KAAII,aAAeF,SAAA,CAAQ,OAAR,CAAiB,CAACG,KAAM,IAAP,CAAjB,CAAnB,CACIC,QAAU,EACVL,aAAJ,GACEK,OADF,CACY,EADZ,CACeJ,SAAA,CAAQ,yOAAR,CADf,CAoDA;MAxCW,oBAwCX,CAvCgBE,YAuChB,CAxCW,OAwCX,CAtCAE,OAsCA,CAxCW,0HAwCX,CAlCIJ,SAAA,CAAQ,wHAAR,CAAkI,CAACK,OAAQ,CAAT,CAAlI,CAkCJ,CAxCW,QAwCX,CAjCIL,SAAA,CAAQ,0BAAR,CAAiC,CAACK,OAAQ,CAAT,CAAjC,CAiCJ,CAxCW,oBAwCX,CA/BIL,SAAA,CAAQ,iEAAR,CAA+D,CAACK,OAAQ,CAAT,CAA/D,CA+BJ,CAxCW,2DAwCX;AA1BEL,SAAA,CAAQ,kBAAR,CAAyB,CAACG,KAAM,EAAP,CAAzB,CA0BF,CAxCW,0BAwCX,CAvBcD,YAuBd,CAxCW,+DAwCX,CArBwBA,YAqBxB,CAxCW,uUAwCX,CANuCA,YAMvC,CAxCW,SAwCX;AALEF,SAAA,CAAQ,iCAAR,CAAwC,CAACK,OAAQ,CAAT,CAAxC,CAKF,CAxCW,gDAhBoD,CAXjE,IAAMJ,qBAAuBP,OAAA,CAAQ,oFAAR,CAE7BC,OAAA,CAAOC,OAAP,CAGAU,QAAmC,CAACR,SAAD,CAAYC,YAAZ,CAA0B,CACvDQ,SAAAA,CAAOV,8BAAA,CAA+BC,SAA/B,CAA0CC,YAA1C,CAEX,OADa,CAAC,IAAIS,QAAJ,CAAaD,SAAb,CAAD,GACb,CADKE,IAFsD,CAF7Dd,OAAA,CAAOC,OAAP,CAAeC,8BAAf,CAAgDA,8BAL6F;",
"sources":["node_modules/ngraph_DOT_forcelayout/lib/codeGenerators/generateCreateBody.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ngraph_DOT_forcelayout$lib$codeGenerators$generateCreateBody\"] = function(global,require,module,exports) {\n\nconst createPatternBuilder = require('./createPatternBuilder');\n\nmodule.exports = generateCreateBodyFunction;\nmodule.exports.generateCreateBodyFunctionBody = generateCreateBodyFunctionBody;\n\nfunction generateCreateBodyFunction(dimension, debugSetters) {\n  let code = generateCreateBodyFunctionBody(dimension, debugSetters);\n  let {Body} = (new Function(code))();\n  return Body;\n}\n\nfunction generateCreateBodyFunctionBody(dimension, debugSetters) {\n  let pattern = createPatternBuilder(dimension);\n  let variableList = pattern('{var}', {join: ', '});\n  let setters = '';\n  if (debugSetters) {\n    setters = `${pattern(\"\\n\\\n   var v{var};\\n\\\nObject.defineProperty(this, '{var}', {\\n\\\n  set: function(v) { \\n\\\n    if (!Number.isFinite(v)) throw new Error('Cannot set non-numbers to {var}');\\n\\\n    v{var} = v; \\n\\\n  },\\n\\\n  get: function() { return v{var}; }\\n\\\n});\")}`;\n  }\n\n  let code = `\nfunction Vector(${variableList}) {\n${setters}\n  if (typeof arguments[0] === 'object') {\n    // could be another vector\n    let v = arguments[0];\n    ${pattern('if (!Number.isFinite(v.{var})) throw new Error(\"Expected value is not a finite number at Vector constructor ({var})\");', {indent: 4})}\n    ${pattern('this.{var} = v.{var};', {indent: 4})}\n  } else {\n    ${pattern('this.{var} = typeof {var} === \"number\" ? {var} : 0;', {indent: 4})}\n  }\n}\n\nVector.prototype.reset = function () {\n  ${pattern('this.{var} = ', {join: ''})}0;\n};\n\nfunction Body(${variableList}) {\n  this.isPinned = false;\n  this.pos = new Vector(${variableList});\n  this.force = new Vector();\n  this.velocity = new Vector();\n  this.mass = 1;\n\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.reset = function() {\n  this.force.reset();\n  this.springCount = 0;\n  this.springLength = 0;\n}\n\nBody.prototype.setPosition = function (${variableList}) {\n  ${pattern('this.pos.{var} = {var} || 0;', {indent: 2})}\n};\n\nreturn {Body: Body, Vector: Vector};\n`\n  return code;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","generateCreateBodyFunctionBody","dimension","debugSetters","pattern","createPatternBuilder","variableList","join","setters","indent","generateCreateBodyFunction","code","Function","Body"]
}
