shadow$provide.module$node_modules$aframe_extras$lib$ColladaLoader=function(global,require,module,exports){module.exports=THREE.ColladaLoader=function(manager){this.manager=void 0!==manager?manager:THREE.DefaultLoadingManager};THREE.ColladaLoader.prototype={constructor:THREE.ColladaLoader,crossOrigin:"anonymous",load:function(url,onLoad,onProgress,onError){var scope=this,path=void 0===scope.path?THREE.LoaderUtils.extractUrlBase(url):scope.path,loader=new THREE.FileLoader(scope.manager);loader.setPath(scope.path);
loader.load(url,function(text){onLoad(scope.parse(text,path))},onProgress,onError)},setPath:function(value){this.path=value;return this},setResourcePath:function(value){this.resourcePath=value;return this},options:{set convertUpAxis(value){console.warn("THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.")}},setCrossOrigin:function(value){this.crossOrigin=value;return this},parse:function(text$jscomp$0,path){function getElementsByTagName(xml,name){var array=
[];xml=xml.childNodes;for(var i=0,l=xml.length;i<l;i++){var child=xml[i];child.nodeName===name&&array.push(child)}return array}function parseFloats(text){if(0===text.length)return[];text=text.trim().split(/\s+/);for(var array=Array(text.length),i=0,l=text.length;i<l;i++)array[i]=parseFloat(text[i]);return array}function parseInts(text){if(0===text.length)return[];text=text.trim().split(/\s+/);for(var array=Array(text.length),i=0,l=text.length;i<l;i++)array[i]=parseInt(text[i]);return array}function parseId(text){return text.substring(1)}
function parseLibrary(xml,libraryName,nodeName,parser){xml=getElementsByTagName(xml,libraryName)[0];if(void 0!==xml)for(nodeName=getElementsByTagName(xml,nodeName),xml=0;xml<nodeName.length;xml++)parser(nodeName[xml])}function buildLibrary(data,builder){for(var name in data)data[name].build=builder(data[name])}function getBuild(data,builder){if(void 0!==data.build)return data.build;data.build=builder(data);return data.build}function buildAnimation(data$jscomp$0){var tracks=[],channels=data$jscomp$0.channels,
samplers=data$jscomp$0.samplers;data$jscomp$0=data$jscomp$0.sources;for(var target in channels)if(channels.hasOwnProperty(target)){var channel=channels[target];var JSCompiler_object_inline_name_4371=samplers[channel.sampler];var il;var JSCompiler_object_inline_keyframes_4372=data$jscomp$0[JSCompiler_object_inline_name_4371.inputs.INPUT];var outputSource=data$jscomp$0[JSCompiler_object_inline_name_4371.inputs.OUTPUT],node=library.nodes[channel.id];JSCompiler_object_inline_name_4371=getNode(node.id);
var jl=node.transforms[channel.sid];node=node.matrix.clone().transpose();var data={};switch(jl){case "matrix":var i=0;for(il=JSCompiler_object_inline_keyframes_4372.array.length;i<il;i++){var time=JSCompiler_object_inline_keyframes_4372.array[i];var stride=i*outputSource.stride;void 0===data[time]&&(data[time]={});if(!0===channel.arraySyntax)data[time][channel.indices[0]+4*channel.indices[1]]=outputSource.array[stride];else{var j=0;for(jl=outputSource.stride;j<jl;j++)data[time][j]=outputSource.array[stride+
j]}}break;case "translate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',jl);break;case "rotate":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',jl);break;case "scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',jl)}channel=prepareAnimationData(data,node);JSCompiler_object_inline_name_4371=JSCompiler_object_inline_name_4371.uuid;JSCompiler_object_inline_keyframes_4372=channel;
channel=tracks;outputSource=[];node=[];data=[];jl=[];j=0;for(il=JSCompiler_object_inline_keyframes_4372.length;j<il;j++)i=JSCompiler_object_inline_keyframes_4372[j],stride=i.time,matrix$jscomp$0.fromArray(i.value).transpose(),matrix$jscomp$0.decompose(position,quaternion,scale),outputSource.push(stride),node.push(position.x,position.y,position.z),data.push(quaternion.x,quaternion.y,quaternion.z,quaternion.w),jl.push(scale.x,scale.y,scale.z);0<node.length&&channel.push(new THREE.VectorKeyframeTrack(JSCompiler_object_inline_name_4371+
".position",outputSource,node));0<data.length&&channel.push(new THREE.QuaternionKeyframeTrack(JSCompiler_object_inline_name_4371+".quaternion",outputSource,data));0<jl.length&&channel.push(new THREE.VectorKeyframeTrack(JSCompiler_object_inline_name_4371+".scale",outputSource,jl))}return tracks}function prepareAnimationData(data,defaultMatrix){var keyframes=[],time;for(time in data)keyframes.push({time:parseFloat(time),value:data[time]});keyframes.sort(function(a,b){return a.time-b.time});for(data=
0;16>data;data++)transformAnimationData(keyframes,data,defaultMatrix.elements[data]);return keyframes}function transformAnimationData(keyframes,property,defaultValue){var empty=!0,l;var i=0;for(l=keyframes.length;i<l;i++){var keyframe=keyframes[i];void 0===keyframe.value[property]?keyframe.value[property]=null:empty=!1}if(!0===empty)for(i=0,l=keyframes.length;i<l;i++)keyframe=keyframes[i],keyframe.value[property]=defaultValue;else for(defaultValue=0,keyframe=keyframes.length;defaultValue<keyframe;defaultValue++)if(empty=
keyframes[defaultValue],null===empty.value[property]){a:{for(i=defaultValue;0<=i;){l=keyframes[i];if(null!==l.value[property]){i=l;break a}i--}i=null}a:{for(l=defaultValue;l<keyframes.length;){var keyframe$jscomp$0=keyframes[l];if(null!==keyframe$jscomp$0.value[property]){l=keyframe$jscomp$0;break a}l++}l=null}empty.value[property]=null===i?l.value[property]:null===l?i.value[property]:0===l.time-i.time?i.value[property]:(empty.time-i.time)*(l.value[property]-i.value[property])/(l.time-i.time)+i.value[property]}}
function buildAnimationClip(data){var tracks=[],name=data.name,duration=data.end-data.start||-1;data=data.animations;for(var i=0,il=data.length;i<il;i++)for(var animationTracks=getBuild(library.animations[data[i]],buildAnimation),j=0,jl=animationTracks.length;j<jl;j++)tracks.push(animationTracks[j]);return new THREE.AnimationClip(name,duration,tracks)}function buildController(data){var build={id:data.id},geometry=library.geometries[build.id];void 0!==data.skin&&(build.skin=buildSkin(data.skin),geometry.sources.skinIndices=
build.skin.indices,geometry.sources.skinWeights=build.skin.weights);return build}function buildSkin(data){function descending(a,b){return b.weight-a.weight}var build={joints:[],indices:{array:[],stride:4},weights:{array:[],stride:4}},vertexWeights=data.vertexWeights,vcount=vertexWeights.vcount,v=vertexWeights.v,jointOffset=vertexWeights.inputs.JOINT.offset,weightOffset=vertexWeights.inputs.WEIGHT.offset,jointSource=data.sources[data.joints.inputs.JOINT],inverseSource=data.sources[data.joints.inputs.INV_BIND_MATRIX],
weights=data.sources[vertexWeights.inputs.WEIGHT.id].array,stride=0,j,l;vertexWeights=0;for(l=vcount.length;vertexWeights<l;vertexWeights++){var jointCount=vcount[vertexWeights],vertexSkinData=[];for(j=0;j<jointCount;j++)vertexSkinData.push({index:v[stride+jointOffset],weight:weights[v[stride+weightOffset]]}),stride+=2;vertexSkinData.sort(descending);for(j=0;4>j;j++)jointCount=vertexSkinData[j],void 0!==jointCount?(build.indices.array.push(jointCount.index),build.weights.array.push(jointCount.weight)):
(build.indices.array.push(0),build.weights.array.push(0))}build.bindMatrix=data.bindShapeMatrix?(new THREE.Matrix4).fromArray(data.bindShapeMatrix).transpose():(new THREE.Matrix4).identity();vertexWeights=0;for(l=jointSource.array.length;vertexWeights<l;vertexWeights++)data=jointSource.array[vertexWeights],vcount=(new THREE.Matrix4).fromArray(inverseSource.array,vertexWeights*inverseSource.stride).transpose(),build.joints.push({name:data,boneInverse:vcount});return build}function buildImage(data){return void 0!==
data.build?data.build:data.init_from}function getImage(id){var data=library.images[id];if(void 0!==data)return getBuild(data,buildImage);console.warn("THREE.ColladaLoader: Couldn't find image with ID:",id);return null}function parseEffectParameter(xml){for(var data={},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "color":data[child.nodeName]=parseFloats(child.textContent);break;case "float":data[child.nodeName]=parseFloat(child.textContent);
break;case "texture":for(var JSCompiler_temp_const=child.nodeName,JSCompiler_temp_const$jscomp$0=child.getAttribute("texture"),data$jscomp$0={technique:{}},i$jscomp$0=0,l$jscomp$0=child.childNodes.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "extra":for(var data$jscomp$1=data$jscomp$0,i$jscomp$1=0,l$jscomp$1=child$jscomp$0.childNodes.length;i$jscomp$1<l$jscomp$1;i$jscomp$1++){var child$jscomp$1=
child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "technique":for(var data$jscomp$2=data$jscomp$1,i$jscomp$2=0,l$jscomp$2=child$jscomp$1.childNodes.length;i$jscomp$2<l$jscomp$2;i$jscomp$2++){var child$jscomp$2=child$jscomp$1.childNodes[i$jscomp$2];if(1===child$jscomp$2.nodeType)switch(child$jscomp$2.nodeName){case "repeatU":case "repeatV":case "offsetU":case "offsetV":data$jscomp$2.technique[child$jscomp$2.nodeName]=parseFloat(child$jscomp$2.textContent);
break;case "wrapU":case "wrapV":"TRUE"===child$jscomp$2.textContent.toUpperCase()?data$jscomp$2.technique[child$jscomp$2.nodeName]=1:"FALSE"===child$jscomp$2.textContent.toUpperCase()?data$jscomp$2.technique[child$jscomp$2.nodeName]=0:data$jscomp$2.technique[child$jscomp$2.nodeName]=parseInt(child$jscomp$2.textContent)}}}}}}data[JSCompiler_temp_const]={id:JSCompiler_temp_const$jscomp$0,extra:data$jscomp$0}}}return data}function buildEffect(data){return data}function buildMaterial(data){function getTexture(textureObject){var sampler=
effect.profile.samplers[textureObject.id];void 0!==sampler?sampler=getImage(effect.profile.surfaces[sampler.source].init_from):(console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),sampler=getImage(textureObject.id));if(null!==sampler){var loader=sampler.slice((sampler.lastIndexOf(".")-1>>>0)+2);loader=loader.toLowerCase();switch(loader){case "tga":loader=tgaLoader;break;default:loader=textureLoader}if(void 0!==loader)return sampler=loader.load(sampler),textureObject=
textureObject.extra,void 0!==textureObject&&void 0!==textureObject.technique&&0===Object.keys(textureObject.technique).length===!1?(textureObject=textureObject.technique,sampler.wrapS=textureObject.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,sampler.wrapT=textureObject.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,sampler.offset.set(textureObject.offsetU||0,textureObject.offsetV||0),sampler.repeat.set(textureObject.repeatU||1,textureObject.repeatV||1)):(sampler.wrapS=THREE.RepeatWrapping,
sampler.wrapT=THREE.RepeatWrapping),sampler;console.warn("THREE.ColladaLoader: Loader for texture %s not found.",sampler);return null}console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",textureObject.id);return null}var effect=getBuild(library.effects[data.url],buildEffect),technique=effect.profile.technique,extra=effect.profile.extra;switch(technique.type){case "phong":case "blinn":var material=new THREE.MeshPhongMaterial;break;case "lambert":material=new THREE.MeshLambertMaterial;
break;default:material=new THREE.MeshBasicMaterial}material.name=data.name;data=technique.parameters;for(var key in data)switch(technique=data[key],key){case "diffuse":technique.color&&material.color.fromArray(technique.color);technique.texture&&(material.map=getTexture(technique.texture));break;case "specular":technique.color&&material.specular&&material.specular.fromArray(technique.color);technique.texture&&(material.specularMap=getTexture(technique.texture));break;case "bump":technique.texture&&
(material.normalMap=getTexture(technique.texture));break;case "ambient":technique.texture&&(material.lightMap=getTexture(technique.texture));break;case "shininess":technique.float&&material.shininess&&(material.shininess=technique.float);break;case "emission":technique.color&&material.emissive&&material.emissive.fromArray(technique.color),technique.texture&&(material.emissiveMap=getTexture(technique.texture))}key=data.transparent;data=data.transparency;void 0===data&&key&&(data={float:1});void 0===
key&&data&&(key={opaque:"A_ONE",data:{color:[1,1,1,1]}});if(key&&data)if(key.data.texture)material.transparent=!0;else{technique=key.data.color;switch(key.opaque){case "A_ONE":material.opacity=technique[3]*data.float;break;case "RGB_ZERO":material.opacity=1-technique[0]*data.float;break;case "A_ZERO":material.opacity=1-technique[3]*data.float;break;case "RGB_ONE":material.opacity=technique[0]*data.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',
key.opaque)}1>material.opacity&&(material.transparent=!0)}void 0!==extra&&void 0!==extra.technique&&1===extra.technique.double_sided&&(material.side=THREE.DoubleSide);return material}function buildCamera(data){switch(data.optics.technique){case "perspective":var camera=new THREE.PerspectiveCamera(data.optics.parameters.yfov,data.optics.parameters.aspect_ratio,data.optics.parameters.znear,data.optics.parameters.zfar);break;case "orthographic":camera=data.optics.parameters.ymag;var xmag=data.optics.parameters.xmag,
aspectRatio=data.optics.parameters.aspect_ratio;xmag=void 0===xmag?camera*aspectRatio:xmag;camera=void 0===camera?xmag/aspectRatio:camera;xmag*=.5;camera*=.5;camera=new THREE.OrthographicCamera(-xmag,xmag,camera,-camera,data.optics.parameters.znear,data.optics.parameters.zfar);break;default:camera=new THREE.PerspectiveCamera}camera.name=data.name;return camera}function buildLight(data){switch(data.technique){case "directional":var light=new THREE.DirectionalLight;break;case "point":light=new THREE.PointLight;
break;case "spot":light=new THREE.SpotLight;break;case "ambient":light=new THREE.AmbientLight}data.parameters.color&&light.color.copy(data.parameters.color);data.parameters.distance&&(light.distance=data.parameters.distance);return light}function parseSource(xml){for(var data={array:[],stride:3},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "float_array":data.array=parseFloats(child.textContent);break;case "Name_array":child=child.textContent;
if(0===child.length)child=[];else{child=child.trim().split(/\s+/);for(var array=Array(child.length),i$jscomp$0=0,l=child.length;i$jscomp$0<l;i$jscomp$0++)array[i$jscomp$0]=child[i$jscomp$0];child=array}data.array=child;break;case "technique_common":child=getElementsByTagName(child,"accessor")[0],void 0!==child&&(data.stride=parseInt(child.getAttribute("stride")))}}return data}function parseGeometryPrimitive(xml){for(var primitive={type:xml.nodeName,material:xml.getAttribute("material"),count:parseInt(xml.getAttribute("count")),
inputs:{},stride:0,hasUV:!1},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "input":var id=parseId(child.getAttribute("source")),semantic=child.getAttribute("semantic"),offset=parseInt(child.getAttribute("offset"));child=parseInt(child.getAttribute("set"));primitive.inputs[0<child?semantic+child:semantic]={id:id,offset:offset};primitive.stride=Math.max(primitive.stride,offset+1);"TEXCOORD"===semantic&&(primitive.hasUV=!0);break;case "vcount":primitive.vcount=
parseInts(child.textContent);break;case "p":primitive.p=parseInts(child.textContent)}}return primitive}function buildGeometry(data){var build={},sources=data.sources,vertices=data.vertices,primitives=data.primitives;if(0===primitives.length)return{};data={};for(var i=0;i<primitives.length;i++){var primitive=primitives[i];void 0===data[primitive.type]&&(data[primitive.type]=[]);data[primitive.type].push(primitive)}for(var type in data){i=data[type];primitive=primitives=0;for(var l=i.length;primitive<
l;primitive++)!0===i[primitive].hasUV&&primitives++;0<primitives&&primitives<i.length&&(i.uvsNeedsFix=!0);primitives=type;primitive=sources;l=vertices;for(var build$jscomp$0={},JSCompiler_object_inline_array_4357=[],JSCompiler_object_inline_stride_4358=0,JSCompiler_object_inline_array_4359=[],JSCompiler_object_inline_stride_4360=0,JSCompiler_object_inline_array_4361=[],JSCompiler_object_inline_stride_4362=0,JSCompiler_object_inline_array_4363=[],JSCompiler_object_inline_stride_4364=0,JSCompiler_object_inline_array_4365=
[],JSCompiler_object_inline_stride_4366=0,JSCompiler_object_inline_array_4367=[],JSCompiler_object_inline_array_4369=[],geometry=new THREE.BufferGeometry,materialKeys=[],start=0,p=0;p<i.length;p++){var primitive$jscomp$0=i[p],inputs=primitive$jscomp$0.inputs,count=0;switch(primitive$jscomp$0.type){case "lines":case "linestrips":count=2*primitive$jscomp$0.count;break;case "triangles":count=3*primitive$jscomp$0.count;break;case "polylist":for(var g=0;g<primitive$jscomp$0.count;g++){var vc=primitive$jscomp$0.vcount[g];
switch(vc){case 3:count+=3;break;case 4:count+=6;break;default:count+=3*(vc-2)}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",primitive$jscomp$0.type)}geometry.addGroup(start,count,p);start+=count;primitive$jscomp$0.material&&materialKeys.push(primitive$jscomp$0.material);for(var name in inputs)switch(g=inputs[name],name){case "VERTEX":for(var key in l)switch(count=l[key],key){case "POSITION":vc=JSCompiler_object_inline_array_4357.length;buildGeometryData(primitive$jscomp$0,
primitive[count],g.offset,JSCompiler_object_inline_array_4357);JSCompiler_object_inline_stride_4358=primitive[count].stride;primitive.skinWeights&&primitive.skinIndices&&(buildGeometryData(primitive$jscomp$0,primitive.skinIndices,g.offset,JSCompiler_object_inline_array_4367),buildGeometryData(primitive$jscomp$0,primitive.skinWeights,g.offset,JSCompiler_object_inline_array_4369));if(!1===primitive$jscomp$0.hasUV&&!0===i.uvsNeedsFix)for(count=(JSCompiler_object_inline_array_4357.length-vc)/JSCompiler_object_inline_stride_4358,
vc=0;vc<count;vc++)JSCompiler_object_inline_array_4361.push(0,0);break;case "NORMAL":buildGeometryData(primitive$jscomp$0,primitive[count],g.offset,JSCompiler_object_inline_array_4359);JSCompiler_object_inline_stride_4360=primitive[count].stride;break;case "COLOR":buildGeometryData(primitive$jscomp$0,primitive[count],g.offset,JSCompiler_object_inline_array_4365);JSCompiler_object_inline_stride_4366=primitive[count].stride;break;case "TEXCOORD":buildGeometryData(primitive$jscomp$0,primitive[count],
g.offset,JSCompiler_object_inline_array_4361);JSCompiler_object_inline_stride_4362=primitive[count].stride;break;case "TEXCOORD1":buildGeometryData(primitive$jscomp$0,primitive[count],g.offset,JSCompiler_object_inline_array_4363);JSCompiler_object_inline_stride_4362=primitive[count].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',key)}break;case "NORMAL":buildGeometryData(primitive$jscomp$0,primitive[g.id],g.offset,JSCompiler_object_inline_array_4359);
JSCompiler_object_inline_stride_4360=primitive[g.id].stride;break;case "COLOR":buildGeometryData(primitive$jscomp$0,primitive[g.id],g.offset,JSCompiler_object_inline_array_4365);JSCompiler_object_inline_stride_4366=primitive[g.id].stride;break;case "TEXCOORD":buildGeometryData(primitive$jscomp$0,primitive[g.id],g.offset,JSCompiler_object_inline_array_4361);JSCompiler_object_inline_stride_4362=primitive[g.id].stride;break;case "TEXCOORD1":buildGeometryData(primitive$jscomp$0,primitive[g.id],g.offset,
JSCompiler_object_inline_array_4363),JSCompiler_object_inline_stride_4364=primitive[g.id].stride}}0<JSCompiler_object_inline_array_4357.length&&geometry.addAttribute("position",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4357,JSCompiler_object_inline_stride_4358));0<JSCompiler_object_inline_array_4359.length&&geometry.addAttribute("normal",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4359,JSCompiler_object_inline_stride_4360));0<JSCompiler_object_inline_array_4365.length&&
geometry.addAttribute("color",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4365,JSCompiler_object_inline_stride_4366));0<JSCompiler_object_inline_array_4361.length&&geometry.addAttribute("uv",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4361,JSCompiler_object_inline_stride_4362));0<JSCompiler_object_inline_array_4363.length&&geometry.addAttribute("uv2",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4363,JSCompiler_object_inline_stride_4364));
0<JSCompiler_object_inline_array_4367.length&&geometry.addAttribute("skinIndex",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4367,4));0<JSCompiler_object_inline_array_4369.length&&geometry.addAttribute("skinWeight",new THREE.Float32BufferAttribute(JSCompiler_object_inline_array_4369,4));build$jscomp$0.data=geometry;build$jscomp$0.type=i[0].type;build$jscomp$0.materialKeys=materialKeys;build[primitives]=build$jscomp$0}return build}function buildGeometryData(primitive,source,offset,
array){function pushVector(i){i=indices[i+offset]*sourceStride;for(var length=i+sourceStride;i<length;i++)array.push(sourceArray[i])}var indices=primitive.p,stride=primitive.stride,vcount=primitive.vcount,sourceArray=source.array,sourceStride=source.stride;if(void 0!==primitive.vcount){source=primitive=0;for(var l=vcount.length;source<l;source++){var count=vcount[source];if(4===count){var a=primitive+0*stride,b=primitive+1*stride,c=primitive+2*stride,d=primitive+3*stride;pushVector(a);pushVector(b);
pushVector(d);pushVector(b);pushVector(c);pushVector(d)}else if(3===count)a=primitive+0*stride,b=primitive+1*stride,c=primitive+2*stride,pushVector(a),pushVector(b),pushVector(c);else if(4<count){d=1;for(var kl=count-2;d<=kl;d++)a=primitive+0*stride,b=primitive+stride*d,c=primitive+stride*(d+1),pushVector(a),pushVector(b),pushVector(c)}primitive+=stride*count}}else for(source=0,l=indices.length;source<l;source+=stride)pushVector(source)}function buildKinematicsModel(data){return void 0!==data.build?
data.build:data}function parseKinematicsLink(xml){for(var data={sid:xml.getAttribute("sid"),name:xml.getAttribute("name")||"",attachments:[],transforms:[]},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "attachment_full":data.attachments.push(parseKinematicsAttachment(child));break;case "matrix":case "translate":case "rotate":data.transforms.push(parseKinematicsTransform(child))}}return data}function parseKinematicsAttachment(xml){for(var data=
{joint:xml.getAttribute("joint").split("/").pop(),transforms:[],links:[]},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "link":data.links.push(parseKinematicsLink(child));break;case "matrix":case "translate":case "rotate":data.transforms.push(parseKinematicsTransform(child))}}return data}function parseKinematicsTransform(xml){var data={type:xml.nodeName};xml=parseFloats(xml.textContent);switch(data.type){case "matrix":data.obj=new THREE.Matrix4;
data.obj.fromArray(xml).transpose();break;case "translate":data.obj=new THREE.Vector3;data.obj.fromArray(xml);break;case "rotate":data.obj=new THREE.Vector3,data.obj.fromArray(xml),data.angle=THREE.Math.degToRad(xml[3])}return data}function parseKinematicsBindJointAxis(xml){for(var data={target:xml.getAttribute("target").split("/").pop()},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "axis":child=child.getElementsByTagName("param")[0],
data.axis=child.textContent,child=data.axis.split("inst_").pop().split("axis")[0],data.jointIndex=child.substr(0,child.length-1)}}return data}function buildKinematicsScene(data){return void 0!==data.build?data.build:data}function parseNode(xml){for(var data={name:xml.getAttribute("name")||"",type:xml.getAttribute("type"),id:xml.getAttribute("id"),sid:xml.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],
transforms:{}},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "node":data.nodes.push(child.getAttribute("id"));parseNode(child);break;case "instance_camera":data.instanceCameras.push(parseId(child.getAttribute("url")));break;case "instance_controller":data.instanceControllers.push(parseNodeInstance(child));break;case "instance_light":data.instanceLights.push(parseId(child.getAttribute("url")));break;case "instance_geometry":data.instanceGeometries.push(parseNodeInstance(child));
break;case "instance_node":data.instanceNodes.push(parseId(child.getAttribute("url")));break;case "matrix":var array=parseFloats(child.textContent);data.matrix.multiply(matrix$jscomp$0.fromArray(array).transpose());data.transforms[child.getAttribute("sid")]=child.nodeName;break;case "translate":array=parseFloats(child.textContent);vector.fromArray(array);data.matrix.multiply(matrix$jscomp$0.makeTranslation(vector.x,vector.y,vector.z));data.transforms[child.getAttribute("sid")]=child.nodeName;break;
case "rotate":array=parseFloats(child.textContent);var angle=THREE.Math.degToRad(array[3]);data.matrix.multiply(matrix$jscomp$0.makeRotationAxis(vector.fromArray(array),angle));data.transforms[child.getAttribute("sid")]=child.nodeName;break;case "scale":array=parseFloats(child.textContent);data.matrix.scale(vector.fromArray(array));data.transforms[child.getAttribute("sid")]=child.nodeName;break;case "extra":break;default:console.log(child)}}void 0!==library.nodes[data.id]?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",
data.id):library.nodes[data.id]=data;return data}function parseNodeInstance(xml){for(var data={id:parseId(xml.getAttribute("url")),materials:{},skeletons:[]},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];switch(child.nodeName){case "bind_material":child=child.getElementsByTagName("instance_material");for(var j=0;j<child.length;j++){var instance=child[j],symbol=instance.getAttribute("symbol");instance=instance.getAttribute("target");data.materials[symbol]=parseId(instance)}break;case "skeleton":data.skeletons.push(parseId(child.textContent))}}return data}
function buildBoneHierarchy(root,joints,boneData){root.traverse(function(object){if(!0===object.isBone){for(var boneInverse,i=0;i<joints.length;i++){var joint=joints[i];if(joint.name===object.name){boneInverse=joint.boneInverse;break}}void 0===boneInverse&&(boneInverse=new THREE.Matrix4);boneData.push({bone:object,boneInverse:boneInverse,processed:!1})}})}function buildNode(data$jscomp$1){for(var objects=[],matrix=data$jscomp$1.matrix,nodes=data$jscomp$1.nodes,type=data$jscomp$1.type,instanceCameras=
data$jscomp$1.instanceCameras,instanceControllers=data$jscomp$1.instanceControllers,instanceLights=data$jscomp$1.instanceLights,instanceGeometries=data$jscomp$1.instanceGeometries,instanceNodes=data$jscomp$1.instanceNodes,i=0,l=nodes.length;i<l;i++)objects.push(getNode(nodes[i]));i=0;for(l=instanceCameras.length;i<l;i++){var instanceCamera=instanceCameras[i];var data=library.cameras[instanceCamera];void 0!==data?instanceCamera=getBuild(data,buildCamera):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",
instanceCamera),instanceCamera=null);null!==instanceCamera&&objects.push(instanceCamera.clone())}i=0;for(l=instanceControllers.length;i<l;i++){data=instanceControllers[i];instanceCameras=getBuild(library.controllers[data.id],buildController);instanceCamera=getBuild(library.geometries[instanceCameras.id],buildGeometry);instanceCamera=buildObjects(instanceCamera,data.materials);var data$jscomp$0=data.skeletons;var joints=instanceCameras.skin.joints,boneData=[],sortedBoneData=[];for(data=0;data<data$jscomp$0.length;data++){var j=
data$jscomp$0[data];if(void 0!==library.nodes[j]){var root=getNode(j);buildBoneHierarchy(root,joints,boneData)}else if(void 0!==library.visualScenes[j]){var children=library.visualScenes[j].children;for(j=0;j<children.length;j++)root=children[j],"JOINT"===root.type&&(root=getNode(root.id),buildBoneHierarchy(root,joints,boneData))}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",j)}for(data=0;data<joints.length;data++)for(j=0;j<boneData.length;j++)if(data$jscomp$0=
boneData[j],data$jscomp$0.bone.name===joints[data].name){sortedBoneData[data]=data$jscomp$0;data$jscomp$0.processed=!0;break}for(data=0;data<boneData.length;data++)data$jscomp$0=boneData[data],!1===data$jscomp$0.processed&&(sortedBoneData.push(data$jscomp$0),data$jscomp$0.processed=!0);joints=[];boneData=[];for(data=0;data<sortedBoneData.length;data++)data$jscomp$0=sortedBoneData[data],joints.push(data$jscomp$0.bone),boneData.push(data$jscomp$0.boneInverse);data=new THREE.Skeleton(joints,boneData);
sortedBoneData=0;for(joints=instanceCamera.length;sortedBoneData<joints;sortedBoneData++)boneData=instanceCamera[sortedBoneData],boneData.isSkinnedMesh&&(boneData.bind(data,instanceCameras.skin.bindMatrix),boneData.normalizeSkinWeights()),objects.push(boneData)}i=0;for(l=instanceLights.length;i<l;i++)instanceControllers=instanceLights[i],instanceCameras=library.lights[instanceControllers],void 0!==instanceCameras?instanceControllers=getBuild(instanceCameras,buildLight):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",
instanceControllers),instanceControllers=null),null!==instanceControllers&&objects.push(instanceControllers.clone());i=0;for(l=instanceGeometries.length;i<l;i++)for(data=instanceGeometries[i],instanceCamera=getBuild(library.geometries[data.id],buildGeometry),instanceCamera=buildObjects(instanceCamera,data.materials),sortedBoneData=0,joints=instanceCamera.length;sortedBoneData<joints;sortedBoneData++)objects.push(instanceCamera[sortedBoneData]);i=0;for(l=instanceNodes.length;i<l;i++)objects.push(getNode(instanceNodes[i]).clone());
if(0===nodes.length&&1===objects.length)boneData=objects[0];else for(boneData="JOINT"===type?new THREE.Bone:new THREE.Group,i=0;i<objects.length;i++)boneData.add(objects[i]);""===boneData.name&&(boneData.name="JOINT"===type?data$jscomp$1.sid:data$jscomp$1.name);boneData.matrix.copy(matrix);boneData.matrix.decompose(boneData.position,boneData.quaternion,boneData.scale);return boneData}function buildObjects(geometries,instanceMaterials){var objects=[],type;for(type in geometries){var geometry=geometries[type],
keys=geometry.materialKeys;var materials=instanceMaterials;for(var materials$jscomp$0=[],i=0,l=keys.length;i<l;i++){var id=materials[keys[i]];void 0===id?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",keys[i]),materials$jscomp$0.push(fallbackMaterial)):materials$jscomp$0.push(getBuild(library.materials[id],buildMaterial))}materials=materials$jscomp$0;0===materials.length&&("lines"===type||"linestrips"===type?materials.push(new THREE.LineBasicMaterial):
materials.push(new THREE.MeshPhongMaterial));if(keys=void 0!==geometry.data.attributes.skinIndex)for(materials$jscomp$0=0,i=materials.length;materials$jscomp$0<i;materials$jscomp$0++)materials[materials$jscomp$0].skinning=!0;materials=1===materials.length?materials[0]:materials;switch(type){case "lines":var object=new THREE.LineSegments(geometry.data,materials);break;case "linestrips":object=new THREE.Line(geometry.data,materials);break;case "triangles":case "polylist":object=keys?new THREE.SkinnedMesh(geometry.data,
materials):new THREE.Mesh(geometry.data,materials)}objects.push(object)}return objects}function getNode(id){return getBuild(library.nodes[id],buildNode)}function buildVisualScene(data){var group=new THREE.Group;group.name=data.name;data=data.children;for(var i=0;i<data.length;i++)group.add(getNode(data[i].id));return group}var position=new THREE.Vector3,scale=new THREE.Vector3,quaternion=new THREE.Quaternion,matrix$jscomp$0=new THREE.Matrix4,vector=new THREE.Vector3,fallbackMaterial=new THREE.MeshBasicMaterial({color:16711935});
if(0===text$jscomp$0.length)return{scene:new THREE.Scene};text$jscomp$0=(new DOMParser).parseFromString(text$jscomp$0,"application/xml");var collada=getElementsByTagName(text$jscomp$0,"COLLADA")[0];text$jscomp$0=collada.getAttribute("version");console.log("THREE.ColladaLoader: File version",text$jscomp$0);text$jscomp$0=function(xml){var JSCompiler_inline_result=getElementsByTagName(xml,"unit")[0];JSCompiler_inline_result=void 0!==JSCompiler_inline_result&&!0===JSCompiler_inline_result.hasAttribute("meter")?
parseFloat(JSCompiler_inline_result.getAttribute("meter")):1;xml=getElementsByTagName(xml,"up_axis")[0];return{unit:JSCompiler_inline_result,upAxis:void 0!==xml?xml.textContent:"Y_UP"}}(getElementsByTagName(collada,"asset")[0]);var textureLoader=new THREE.TextureLoader(this.manager);textureLoader.setPath(this.resourcePath||path).setCrossOrigin(this.crossOrigin);if(THREE.TGALoader){var tgaLoader=new THREE.TGALoader(this.manager);tgaLoader.setPath(this.resourcePath||path)}var animations=[],kinematics=
{},count$jscomp$0=0,library={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};parseLibrary(collada,"library_animations","animation",function(xml){for(var data={sources:{},samplers:{},channels:{}},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "source":var id=child.getAttribute("id");data.sources[id]=
parseSource(child);break;case "sampler":id=child.getAttribute("id");for(var JSCompiler_temp_const=data.samplers,data$jscomp$0={inputs:{}},i$jscomp$0=0,l$jscomp$0=child.childNodes.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "input":var id$jscomp$0=parseId(child$jscomp$0.getAttribute("source"));child$jscomp$0=child$jscomp$0.getAttribute("semantic");data$jscomp$0.inputs[child$jscomp$0]=
id$jscomp$0}}JSCompiler_temp_const[id]=data$jscomp$0;break;case "channel":id=child.getAttribute("target");JSCompiler_temp_const=data.channels;data$jscomp$0={};var parts=child.getAttribute("target").split("/");i$jscomp$0=parts.shift();l$jscomp$0=parts.shift();id$jscomp$0=-1!==l$jscomp$0.indexOf("(");if(child$jscomp$0=-1!==l$jscomp$0.indexOf("."))parts=l$jscomp$0.split("."),l$jscomp$0=parts.shift(),data$jscomp$0.member=parts.shift();else if(id$jscomp$0){parts=l$jscomp$0.split("(");l$jscomp$0=parts.shift();
for(var i$jscomp$1=0;i$jscomp$1<parts.length;i$jscomp$1++)parts[i$jscomp$1]=parseInt(parts[i$jscomp$1].replace(/\)/,""));data$jscomp$0.indices=parts}data$jscomp$0.id=i$jscomp$0;data$jscomp$0.sid=l$jscomp$0;data$jscomp$0.arraySyntax=id$jscomp$0;data$jscomp$0.memberSyntax=child$jscomp$0;data$jscomp$0.sampler=parseId(child.getAttribute("source"));JSCompiler_temp_const[id]=data$jscomp$0;break;default:console.log(child)}}library.animations[xml.getAttribute("id")]=data});parseLibrary(collada,"library_animation_clips",
"animation_clip",function(xml){for(var data={name:xml.getAttribute("id")||"default",start:parseFloat(xml.getAttribute("start")||0),end:parseFloat(xml.getAttribute("end")||0),animations:[]},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "instance_animation":data.animations.push(parseId(child.getAttribute("url")))}}library.clips[xml.getAttribute("id")]=data});parseLibrary(collada,"library_controllers","controller",function(xml){for(var data=
{},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "skin":data.id=parseId(child.getAttribute("source"));for(var data$jscomp$0={sources:{}},i$jscomp$0=0,l$jscomp$0=child.childNodes.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "bind_shape_matrix":data$jscomp$0.bindShapeMatrix=parseFloats(child$jscomp$0.textContent);break;
case "source":var id=child$jscomp$0.getAttribute("id");data$jscomp$0.sources[id]=parseSource(child$jscomp$0);break;case "joints":id={inputs:{}};for(var i$jscomp$1=0,l$jscomp$1=child$jscomp$0.childNodes.length;i$jscomp$1<l$jscomp$1;i$jscomp$1++){var child$jscomp$1=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "input":var semantic=child$jscomp$1.getAttribute("semantic");child$jscomp$1=parseId(child$jscomp$1.getAttribute("source"));id.inputs[semantic]=
child$jscomp$1}}data$jscomp$0.joints=id;break;case "vertex_weights":id={inputs:{}};i$jscomp$1=0;for(l$jscomp$1=child$jscomp$0.childNodes.length;i$jscomp$1<l$jscomp$1;i$jscomp$1++){var child$jscomp$2=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$2.nodeType)switch(child$jscomp$2.nodeName){case "input":semantic=child$jscomp$2.getAttribute("semantic");child$jscomp$1=parseId(child$jscomp$2.getAttribute("source"));child$jscomp$2=parseInt(child$jscomp$2.getAttribute("offset"));id.inputs[semantic]=
{id:child$jscomp$1,offset:child$jscomp$2};break;case "vcount":id.vcount=parseInts(child$jscomp$2.textContent);break;case "v":id.v=parseInts(child$jscomp$2.textContent)}}data$jscomp$0.vertexWeights=id}}data.skin=data$jscomp$0;break;case "morph":data.id=parseId(child.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}library.controllers[xml.getAttribute("id")]=data});parseLibrary(collada,"library_images","image",function(xml){var data={init_from:getElementsByTagName(xml,
"init_from")[0].textContent};library.images[xml.getAttribute("id")]=data});parseLibrary(collada,"library_effects","effect",function(xml){for(var data={},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "profile_COMMON":for(var data$jscomp$0={surfaces:{},samplers:{}},i$jscomp$0=0,l$jscomp$0=child.childNodes.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "newparam":for(var data$jscomp$1=
data$jscomp$0,sid=child$jscomp$0.getAttribute("sid"),i$jscomp$1=0,l$jscomp$1=child$jscomp$0.childNodes.length;i$jscomp$1<l$jscomp$1;i$jscomp$1++){var child$jscomp$1=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "surface":for(var JSCompiler_temp_const=data$jscomp$1.surfaces,data$jscomp$2={},i$jscomp$2=0,l$jscomp$2=child$jscomp$1.childNodes.length;i$jscomp$2<l$jscomp$2;i$jscomp$2++){var child$jscomp$2=child$jscomp$1.childNodes[i$jscomp$2];
if(1===child$jscomp$2.nodeType)switch(child$jscomp$2.nodeName){case "init_from":data$jscomp$2.init_from=child$jscomp$2.textContent}}JSCompiler_temp_const[sid]=data$jscomp$2;break;case "sampler2D":JSCompiler_temp_const=data$jscomp$1.samplers;data$jscomp$2={};i$jscomp$2=0;for(l$jscomp$2=child$jscomp$1.childNodes.length;i$jscomp$2<l$jscomp$2;i$jscomp$2++)if(child$jscomp$2=child$jscomp$1.childNodes[i$jscomp$2],1===child$jscomp$2.nodeType)switch(child$jscomp$2.nodeName){case "source":data$jscomp$2.source=
child$jscomp$2.textContent}JSCompiler_temp_const[sid]=data$jscomp$2}}break;case "technique":data$jscomp$1={};sid=0;for(i$jscomp$1=child$jscomp$0.childNodes.length;sid<i$jscomp$1;sid++)if(l$jscomp$1=child$jscomp$0.childNodes[sid],1===l$jscomp$1.nodeType)switch(l$jscomp$1.nodeName){case "constant":case "lambert":case "blinn":case "phong":data$jscomp$1.type=l$jscomp$1.nodeName;JSCompiler_temp_const={};child$jscomp$1=0;for(data$jscomp$2=l$jscomp$1.childNodes.length;child$jscomp$1<data$jscomp$2;child$jscomp$1++)if(i$jscomp$2=
l$jscomp$1.childNodes[child$jscomp$1],1===i$jscomp$2.nodeType)switch(i$jscomp$2.nodeName){case "emission":case "diffuse":case "specular":case "bump":case "ambient":case "shininess":case "transparency":JSCompiler_temp_const[i$jscomp$2.nodeName]=parseEffectParameter(i$jscomp$2);break;case "transparent":JSCompiler_temp_const[i$jscomp$2.nodeName]={opaque:i$jscomp$2.getAttribute("opaque"),data:parseEffectParameter(i$jscomp$2)}}data$jscomp$1.parameters=JSCompiler_temp_const}data$jscomp$0.technique=data$jscomp$1;
break;case "extra":data$jscomp$1={};sid=0;for(i$jscomp$1=child$jscomp$0.childNodes.length;sid<i$jscomp$1;sid++)if(l$jscomp$1=child$jscomp$0.childNodes[sid],1===l$jscomp$1.nodeType)switch(l$jscomp$1.nodeName){case "technique":JSCompiler_temp_const={};child$jscomp$1=0;for(data$jscomp$2=l$jscomp$1.childNodes.length;child$jscomp$1<data$jscomp$2;child$jscomp$1++)if(i$jscomp$2=l$jscomp$1.childNodes[child$jscomp$1],1===i$jscomp$2.nodeType)switch(i$jscomp$2.nodeName){case "double_sided":JSCompiler_temp_const[i$jscomp$2.nodeName]=
parseInt(i$jscomp$2.textContent)}data$jscomp$1.technique=JSCompiler_temp_const}data$jscomp$0.extra=data$jscomp$1}}data.profile=data$jscomp$0}}library.effects[xml.getAttribute("id")]=data});parseLibrary(collada,"library_materials","material",function(xml){for(var data={name:xml.getAttribute("name")},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "instance_effect":data.url=parseId(child.getAttribute("url"))}}library.materials[xml.getAttribute("id")]=
data});parseLibrary(collada,"library_cameras","camera",function(xml){for(var data={name:xml.getAttribute("name")},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "optics":a:{for(var i$jscomp$0=0;i$jscomp$0<child.childNodes.length;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];switch(child$jscomp$0.nodeName){case "technique_common":child=child$jscomp$0;i$jscomp$0={};for(child$jscomp$0=0;child$jscomp$0<child.childNodes.length;child$jscomp$0++){var child$jscomp$1=
child.childNodes[child$jscomp$0];switch(child$jscomp$1.nodeName){case "perspective":case "orthographic":i$jscomp$0.technique=child$jscomp$1.nodeName;for(var data$jscomp$0={},i$jscomp$1=0;i$jscomp$1<child$jscomp$1.childNodes.length;i$jscomp$1++){var child$jscomp$2=child$jscomp$1.childNodes[i$jscomp$1];switch(child$jscomp$2.nodeName){case "xfov":case "yfov":case "xmag":case "ymag":case "znear":case "zfar":case "aspect_ratio":data$jscomp$0[child$jscomp$2.nodeName]=parseFloat(child$jscomp$2.textContent)}}i$jscomp$0.parameters=
data$jscomp$0}}child=i$jscomp$0;break a}}child={}}data.optics=child}}library.cameras[xml.getAttribute("id")]=data});parseLibrary(collada,"library_lights","light",function(xml){for(var data={},i=0,l=xml.childNodes.length;i<l;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "technique_common":data=child;child={};for(var i$jscomp$0=0,l$jscomp$0=data.childNodes.length;i$jscomp$0<l$jscomp$0;i$jscomp$0++){var child$jscomp$0=data.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "directional":case "point":case "spot":case "ambient":child.technique=
child$jscomp$0.nodeName;for(var data$jscomp$0={},i$jscomp$1=0,l$jscomp$1=child$jscomp$0.childNodes.length;i$jscomp$1<l$jscomp$1;i$jscomp$1++){var child$jscomp$1=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "color":child$jscomp$1=parseFloats(child$jscomp$1.textContent);data$jscomp$0.color=(new THREE.Color).fromArray(child$jscomp$1);break;case "falloff_angle":data$jscomp$0.falloffAngle=parseFloat(child$jscomp$1.textContent);break;case "quadratic_attenuation":child$jscomp$1=
parseFloat(child$jscomp$1.textContent),data$jscomp$0.distance=child$jscomp$1?Math.sqrt(1/child$jscomp$1):0}}child.parameters=data$jscomp$0}}data=child}}library.lights[xml.getAttribute("id")]=data});parseLibrary(collada,"library_geometries","geometry",function(xml){var data={name:xml.getAttribute("name"),sources:{},vertices:{},primitives:[]},mesh=getElementsByTagName(xml,"mesh")[0];if(void 0!==mesh){for(var i=0;i<mesh.childNodes.length;i++){var child=mesh.childNodes[i];if(1===child.nodeType){var id=
child.getAttribute("id");switch(child.nodeName){case "source":data.sources[id]=parseSource(child);break;case "vertices":id={};for(var i$jscomp$0=0;i$jscomp$0<child.childNodes.length;i$jscomp$0++){var child$jscomp$0=child.childNodes[i$jscomp$0];1===child$jscomp$0.nodeType&&(id[child$jscomp$0.getAttribute("semantic")]=parseId(child$jscomp$0.getAttribute("source")))}data.vertices=id;break;case "polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",child.nodeName);break;case "lines":case "linestrips":case "polylist":case "triangles":data.primitives.push(parseGeometryPrimitive(child));
break;default:console.log(child)}}}library.geometries[xml.getAttribute("id")]=data}});parseLibrary(collada,"library_nodes","node",parseNode);parseLibrary(collada,"library_visual_scenes","visual_scene",function(xml){for(var data={name:xml.getAttribute("name"),children:[]},elements=xml.getElementsByTagName("node"),i=0;i<elements.length;i++){var element=elements[i];!1===element.hasAttribute("id")&&element.setAttribute("id","three_default_"+count$jscomp$0++)}elements=getElementsByTagName(xml,"node");
for(i=0;i<elements.length;i++)data.children.push(parseNode(elements[i]));library.visualScenes[xml.getAttribute("id")]=data});parseLibrary(collada,"library_kinematics_models","kinematics_model",function(xml){for(var data={name:xml.getAttribute("name")||"",joints:{},links:[]},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "technique_common":for(var data$jscomp$0=data,i$jscomp$0=0;i$jscomp$0<child.childNodes.length;i$jscomp$0++){var child$jscomp$0=
child.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "joint":for(var JSCompiler_temp_const=data$jscomp$0.joints,JSCompiler_temp_const$jscomp$0=child$jscomp$0.getAttribute("sid"),data$jscomp$1=void 0,i$jscomp$1=0;i$jscomp$1<child$jscomp$0.childNodes.length;i$jscomp$1++){var child$jscomp$1=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "prismatic":case "revolute":data$jscomp$1=child$jscomp$1;child$jscomp$1=
{sid:data$jscomp$1.getAttribute("sid"),name:data$jscomp$1.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:data$jscomp$1.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(var i$jscomp$2=0;i$jscomp$2<data$jscomp$1.childNodes.length;i$jscomp$2++){var child$jscomp$2=data$jscomp$1.childNodes[i$jscomp$2];if(1===child$jscomp$2.nodeType)switch(child$jscomp$2.nodeName){case "axis":var array=parseFloats(child$jscomp$2.textContent);child$jscomp$1.axis.fromArray(array);break;case "limits":array=
child$jscomp$2.getElementsByTagName("max")[0],child$jscomp$2=child$jscomp$2.getElementsByTagName("min")[0],child$jscomp$1.limits.max=parseFloat(array.textContent),child$jscomp$1.limits.min=parseFloat(child$jscomp$2.textContent)}}child$jscomp$1.limits.min>=child$jscomp$1.limits.max&&(child$jscomp$1.static=!0);child$jscomp$1.middlePosition=(child$jscomp$1.limits.min+child$jscomp$1.limits.max)/2;data$jscomp$1=child$jscomp$1}}JSCompiler_temp_const[JSCompiler_temp_const$jscomp$0]=data$jscomp$1;break;case "link":data$jscomp$0.links.push(parseKinematicsLink(child$jscomp$0))}}}}library.kinematicsModels[xml.getAttribute("id")]=
data});parseLibrary(collada,"library_physics_models","physics_model",function(xml$jscomp$0){for(var data={name:xml$jscomp$0.getAttribute("name")||"",rigidBodies:{}},i=0;i<xml$jscomp$0.childNodes.length;i++){var child=xml$jscomp$0.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "rigid_body":data.rigidBodies[child.getAttribute("name")]={};var xml=child;child=data.rigidBodies[child.getAttribute("name")];for(var i$jscomp$0=0;i$jscomp$0<xml.childNodes.length;i$jscomp$0++){var child$jscomp$0=
xml.childNodes[i$jscomp$0];if(1===child$jscomp$0.nodeType)switch(child$jscomp$0.nodeName){case "technique_common":for(var data$jscomp$0=child,i$jscomp$1=0;i$jscomp$1<child$jscomp$0.childNodes.length;i$jscomp$1++){var child$jscomp$1=child$jscomp$0.childNodes[i$jscomp$1];if(1===child$jscomp$1.nodeType)switch(child$jscomp$1.nodeName){case "inertia":data$jscomp$0.inertia=parseFloats(child$jscomp$1.textContent);break;case "mass":data$jscomp$0.mass=parseFloats(child$jscomp$1.textContent)[0]}}}}}}library.physicsModels[xml$jscomp$0.getAttribute("id")]=
data});parseLibrary(collada,"scene","instance_kinematics_scene",function(xml){for(var data={bindJointAxis:[]},i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "bind_joint_axis":data.bindJointAxis.push(parseKinematicsBindJointAxis(child))}}library.kinematicsScenes[parseId(xml.getAttribute("url"))]=data});buildLibrary(library.animations,buildAnimation);buildLibrary(library.clips,buildAnimationClip);buildLibrary(library.controllers,buildController);
buildLibrary(library.images,buildImage);buildLibrary(library.effects,buildEffect);buildLibrary(library.materials,buildMaterial);buildLibrary(library.cameras,buildCamera);buildLibrary(library.lights,buildLight);buildLibrary(library.geometries,buildGeometry);buildLibrary(library.visualScenes,buildVisualScene);(function(){var clips=library.clips;if(0===Object.keys(clips).length===!0){if(0===Object.keys(library.animations).length===!1){clips=[];for(var id in library.animations)for(var animationTracks=
getBuild(library.animations[id],buildAnimation),i=0,l=animationTracks.length;i<l;i++)clips.push(animationTracks[i]);animations.push(new THREE.AnimationClip("default",-1,clips))}}else for(id in clips)animations.push(getBuild(library.clips[id],buildAnimationClip))})();(function(){function connect(jointIndex,visualElement){var visualElementName=visualElement.getAttribute("name"),joint=kinematicsModel.joints[jointIndex];visualScene.traverse(function(object){if(object.name===visualElementName){for(var transforms=
[],xml=collada.querySelector('[id\x3d"'+visualElement.id+'"]'),i=0;i<xml.childNodes.length;i++){var child=xml.childNodes[i];if(1===child.nodeType)switch(child.nodeName){case "matrix":var array=parseFloats(child.textContent),matrix=(new THREE.Matrix4).fromArray(array).transpose();transforms.push({sid:child.getAttribute("sid"),type:child.nodeName,obj:matrix});break;case "translate":case "scale":array=parseFloats(child.textContent);matrix=(new THREE.Vector3).fromArray(array);transforms.push({sid:child.getAttribute("sid"),
type:child.nodeName,obj:matrix});break;case "rotate":array=parseFloats(child.textContent),matrix=(new THREE.Vector3).fromArray(array),array=THREE.Math.degToRad(array[3]),transforms.push({sid:child.getAttribute("sid"),type:child.nodeName,obj:matrix,angle:array})}}jointMap[jointIndex]={object:object,transforms:transforms,joint:joint,position:joint.zeroPosition}}})}var kinematicsModelId=Object.keys(library.kinematicsModels)[0],kinematicsSceneId=Object.keys(library.kinematicsScenes)[0],visualSceneId=
Object.keys(library.visualScenes)[0];if(void 0!==kinematicsModelId&&void 0!==kinematicsSceneId){var kinematicsModel=getBuild(library.kinematicsModels[kinematicsModelId],buildKinematicsModel);kinematicsModelId=getBuild(library.kinematicsScenes[kinematicsSceneId],buildKinematicsScene);var visualScene=getBuild(library.visualScenes[visualSceneId],buildVisualScene);visualSceneId=kinematicsModelId.bindJointAxis;var jointMap={};kinematicsModelId=0;for(kinematicsSceneId=visualSceneId.length;kinematicsModelId<
kinematicsSceneId;kinematicsModelId++){var axis$jscomp$0=visualSceneId[kinematicsModelId],targetElement=collada.querySelector('[sid\x3d"'+axis$jscomp$0.target+'"]');targetElement&&connect(axis$jscomp$0.jointIndex,targetElement.parentElement)}var m0=new THREE.Matrix4;kinematics={joints:kinematicsModel&&kinematicsModel.joints,getJointValue:function(jointIndex){var jointData=jointMap[jointIndex];if(jointData)return jointData.position;console.warn("THREE.ColladaLoader: Joint "+jointIndex+" doesn't exist.")},
setJointValue:function(jointIndex,value){var jointData=jointMap[jointIndex];if(jointData){var joint=jointData.joint;if(value>joint.limits.max||value<joint.limits.min)console.warn("THREE.ColladaLoader: Joint "+jointIndex+" value "+value+" outside of limits (min: "+joint.limits.min+", max: "+joint.limits.max+").");else if(joint.static)console.warn("THREE.ColladaLoader: Joint "+jointIndex+" is static.");else{var object=jointData.object,axis=joint.axis;jointData=jointData.transforms;matrix$jscomp$0.identity();
for(var i=0;i<jointData.length;i++){var transform=jointData[i];if(transform.sid&&-1!==transform.sid.indexOf(jointIndex))switch(joint.type){case "revolute":matrix$jscomp$0.multiply(m0.makeRotationAxis(axis,THREE.Math.degToRad(value)));break;case "prismatic":matrix$jscomp$0.multiply(m0.makeTranslation(axis.x*value,axis.y*value,axis.z*value));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+joint.type)}else switch(transform.type){case "matrix":matrix$jscomp$0.multiply(transform.obj);
break;case "translate":matrix$jscomp$0.multiply(m0.makeTranslation(transform.obj.x,transform.obj.y,transform.obj.z));break;case "scale":matrix$jscomp$0.scale(transform.obj);break;case "rotate":matrix$jscomp$0.multiply(m0.makeRotationAxis(transform.obj,transform.angle))}}object.matrix.copy(matrix$jscomp$0);object.matrix.decompose(object.position,object.quaternion,object.scale);jointMap[jointIndex].position=value}}else console.log("THREE.ColladaLoader: "+jointIndex+" does not exist.")}}}})();path=function(xml){xml=
getElementsByTagName(xml,"instance_visual_scene")[0];return getBuild(library.visualScenes[parseId(xml.getAttribute("url"))],buildVisualScene)}(getElementsByTagName(collada,"scene")[0]);"Z_UP"===text$jscomp$0.upAxis&&path.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0));path.scale.multiplyScalar(text$jscomp$0.unit);return{animations:animations,kinematics:kinematics,library:library,scene:path}}}}
//# sourceMappingURL=module$node_modules$aframe_extras$lib$ColladaLoader.js.map
