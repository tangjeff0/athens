{
"version":3,
"file":"module$node_modules$aframe_extras$src$primitives$a_hexgrid.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACvH,IAAMC,GAAKH,OAAA,CAAQ,oDAAR,CAAX,CACMI,eAAiBJ,OAAA,CAAQ,wDAAR,CAKvBC,OAAA,CAAOC,OAAP,CAAeG,SAAf,CAA2BC,MAAA,CAAOC,iBAAP,CAAyB,WAAzB,CAAsC,CAC/DC,kBAAmB,CACjB,QAAW,EADM,CAD4C,CAI/DC,SAAU,CACRC,IAAK,aADG,CAJqD,CAAtC,CAS3BT,OAAA,CAAOC,OAAP,CAAeS,SAAf,CAA2BL,MAAA,CAAOM,iBAAP,CAAyB,SAAzB,CAAoC,CAC7DC,aAAc,CAAC,UAAD,CAD+C,CAE7DC,OAAQ,CACNJ,IAAK,CAACK,KAAM,OAAP,CADC,CAFqD;AAK7DC,KAAMA,QAAS,EAAG,CAAA,IAAA,aAAA,IAAA,CACVC,KAAO,IAAPA,CAAYA,IACdA,KAAJ,CAASP,GAAT,CACEQ,KAAA,CAAMD,IAAN,CAAWP,GAAX,CAAA,CACGS,IADH,CACQ,QAAA,CAACC,QAAD,CAAc,CAAA,MAAAA,SAAA,CAASC,IAAT,EAAA,CADtB,CAAA,CAEGF,IAFH,CAEQ,QAAA,CAACE,IAAD,CAAU,CAAA,MAAA,aAAA,CAAKC,OAAL,CAAaD,IAAb,CAAA,CAFlB,CADF,CAKE,IAAA,CAAKC,OAAL,CAAalB,cAAb,CAPc,CAL2C,CAe7DkB,QAASA,QAAS,CAACD,IAAD,CAAO,CACvB,IAAME,KAAO,IAAIpB,EAAJ,CAAOqB,OACpBD,KAAA,CAAKE,QAAL,CAAcJ,IAAd,CACMK,KAAAA,CAAQ,IAAIvB,EAAJ,CAAOwB,KAAP,CAAaJ,IAAb,CACdG,KAAA,CAAME,eAAN,EACA,KAAA,CAAKC,EAAL,CAAQC,WAAR,CAAoB,MAApB,CAA4BJ,IAA5B,CAAkCK,KAAlC,CACA,KAAA,CAAKC,WAAL,EANuB,CAfoC,CAuB7DA,YAAaA,QAAS,EAAG,CAEvB,IAAMC,UADoB,IACpBA,CADyBJ,EACzBI,CAD4BC,UAC5BD,CADuCA,QACvCA,EAAiC,EAAjCA,EAAqCA,QACtCA,SAAL,EACA,IAAA,CAAKJ,EAAL,CAAQM,QAAR,CAAiBC,QAAjB,CAA0B,QAAA,CAACC,IAAD,CAAU,CAC9BA,IAAJ,CAASC,MAAT;CACED,IADF,CACOJ,QADP,CACkBA,QADlB,CADkC,CAApC,CAJuB,CAvBoC,CAiC7DM,OAAQA,QAAS,EAAG,CAClB,IAAA,CAAKV,EAAL,CAAQW,cAAR,CAAuB,MAAvB,CADkB,CAjCyC,CAApC,CAhB4F;",
"sources":["node_modules/aframe-extras/src/primitives/a-hexgrid.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$primitives$a_hexgrid\"] = function(global,require,module,exports) {\nconst vg = require('../../lib/hex-grid.min.js');\nconst defaultHexGrid = require('../../lib/default-hex-grid');\n\n/**\n * Hex grid.\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-hexgrid', {\n  defaultComponents: {\n    'hexgrid': {}\n  },\n  mappings: {\n    src: 'hexgrid.src'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('hexgrid', {\n  dependencies: ['material'],\n  schema: {\n    src: {type: 'asset'}\n  },\n  init: function () {\n    const data = this.data;\n    if (data.src) {\n      fetch(data.src)\n        .then((response) => response.json())\n        .then((json) => this.addMesh(json));\n    } else {\n      this.addMesh(defaultHexGrid);\n    }\n  },\n  addMesh: function (json) {\n    const grid = new vg.HexGrid();\n    grid.fromJSON(json);\n    const board = new vg.Board(grid);\n    board.generateTilemap();\n    this.el.setObject3D('mesh', board.group);\n    this.addMaterial();\n  },\n  addMaterial: function () {\n    const materialComponent = this.el.components.material;\n    const material = (materialComponent || {}).material;\n    if (!material) return;\n    this.el.object3D.traverse((node) => {\n      if (node.isMesh) {\n        node.material = material;\n      }\n    });\n  },\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","vg","defaultHexGrid","Primitive","AFRAME","registerPrimitive","defaultComponents","mappings","src","Component","registerComponent","dependencies","schema","type","init","data","fetch","then","response","json","addMesh","grid","HexGrid","fromJSON","board","Board","generateTilemap","el","setObject3D","group","addMaterial","material","components","object3D","traverse","node","isMesh","remove","removeObject3D"]
}
