{
"version":3,
"file":"module$node_modules$ngraph_DOT_random$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/ngraph_DOT_random/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ngraph_DOT_random$index\"] = function(global,require,module,exports) {\nmodule.exports = random;\n\n// TODO: Deprecate?\nmodule.exports.random = random,\nmodule.exports.randomIterator = randomIterator\n\n/**\n * Creates seeded PRNG with two methods:\n *   next() and nextDouble()\n */\nfunction random(inputSeed) {\n  var seed = typeof inputSeed === 'number' ? inputSeed : (+new Date());\n  return new Generator(seed)\n}\n\nfunction Generator(seed) {\n  this.seed = seed;\n}\n\n/**\n  * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)\n  *\n  * @param maxValue Number REQUIRED. Omitting this number will result in NaN values from PRNG.\n  */\nGenerator.prototype.next = next;\n\n/**\n  * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)\n  * This function is the same as Math.random() (except that it could be seeded)\n  */\nGenerator.prototype.nextDouble = nextDouble;\n\n/**\n * Returns a random real number from uniform distribution in [0, 1)\n */\nGenerator.prototype.uniform = nextDouble;\n\n/**\n * Returns a random real number from a Gaussian distribution\n * with 0 as a mean, and 1 as standard deviation u ~ N(0,1)\n */\nGenerator.prototype.gaussian = gaussian;\n\nfunction gaussian() {\n  // use the polar form of the Box-Muller transform\n  // based on https://introcs.cs.princeton.edu/java/23recursion/StdRandom.java\n  var r, x, y;\n  do {\n    x = this.nextDouble() * 2 - 1;\n    y = this.nextDouble() * 2 - 1;\n    r = x * x + y * y;\n  } while (r >= 1 || r === 0);\n\n  return x * Math.sqrt(-2 * Math.log(r)/r);\n}\n\n/**\n * See https://twitter.com/anvaka/status/1296182534150135808\n */\nGenerator.prototype.levy = levy;\n\nfunction levy() {\n  var beta = 3 / 2;\n  var sigma = Math.pow(\n      gamma( 1 + beta ) * Math.sin(Math.PI * beta / 2) / \n        (gamma((1 + beta) / 2) * beta * Math.pow(2, (beta - 1) / 2)),\n      1/beta\n  );\n  return this.gaussian() * sigma / Math.pow(Math.abs(this.gaussian()), 1/beta);\n}\n\n// gamma function approximation\nfunction gamma(z) {\n  return Math.sqrt(2 * Math.PI / z) * Math.pow((1 / Math.E) * (z + 1 / (12 * z - 1 / (10 * z))), z);\n}\n\nfunction nextDouble() {\n  var seed = this.seed;\n  // Robert Jenkins' 32 bit integer hash function.\n  seed = ((seed + 0x7ed55d16) + (seed << 12)) & 0xffffffff;\n  seed = ((seed ^ 0xc761c23c) ^ (seed >>> 19)) & 0xffffffff;\n  seed = ((seed + 0x165667b1) + (seed << 5)) & 0xffffffff;\n  seed = ((seed + 0xd3a2646c) ^ (seed << 9)) & 0xffffffff;\n  seed = ((seed + 0xfd7046c5) + (seed << 3)) & 0xffffffff;\n  seed = ((seed ^ 0xb55a4f09) ^ (seed >>> 16)) & 0xffffffff;\n  this.seed = seed;\n  return (seed & 0xfffffff) / 0x10000000;\n}\n\nfunction next(maxValue) {\n  return Math.floor(this.nextDouble() * maxValue);\n}\n\n/*\n * Creates iterator over array, which returns items of array in random order\n * Time complexity is guaranteed to be O(n);\n */\nfunction randomIterator(array, customRandom) {\n  var localRandom = customRandom || random();\n  if (typeof localRandom.next !== 'function') {\n    throw new Error('customRandom does not match expected API: next() function is missing');\n  }\n\n  return {\n    forEach: forEach,\n\n    /**\n     * Shuffles array randomly, in place.\n     */\n    shuffle: shuffle\n  };\n\n  function shuffle() {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  function forEach(callback) {\n    var i, j, t;\n    for (i = array.length - 1; i > 0; --i) {\n      j = localRandom.next(i + 1); // i inclusive\n      t = array[j];\n      array[j] = array[i];\n      array[i] = t;\n\n      callback(t);\n    }\n\n    if (array.length) {\n      callback(array[0]);\n    }\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","random","inputSeed","Generator","seed","Date","gamma","z","Math","sqrt","PI","pow","E","nextDouble","randomIterator","array","customRandom","localRandom","next","Error","forEach","callback","i","length","j","t","shuffle","prototype","maxValue","floor","uniform","gaussian","x","y","r","log","levy","sigma","sin","beta","abs"]
}
