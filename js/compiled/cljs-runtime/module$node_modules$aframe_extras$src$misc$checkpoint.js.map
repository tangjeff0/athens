{
"version":3,
"file":"module$node_modules$aframe_extras$src$misc$checkpoint.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAClHD,MAAA,CAAOC,OAAP,CAAiBC,MAAA,CAAOC,iBAAP,CAAyB,YAAzB,CAAuC,CACtDC,OAAQ,CACNC,OAAQ,CAACC,QAAS,CAACC,EAAG,CAAJ,CAAOC,EAAG,CAAV,CAAaC,EAAG,CAAhB,CAAV,CAA8BC,KAAM,MAApC,CADF,CAD8C,CAKtDC,KAAMA,QAAS,EAAG,CAChB,IAAA,CAAKC,MAAL,CAAc,CAAA,CACd,KAAA,CAAKC,QAAL,CAAgB,IAChB,KAAA,CAAKC,IAAL,CAAY,IAAA,CAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CACZ,KAAA,CAAKV,MAAL,CAAc,IAAIW,KAAJ,CAAUC,OAJR,CALoC,CAYtDC,OAAQA,QAAS,EAAG,CAClB,IAAA,CAAKb,MAAL,CAAYc,IAAZ,CAAiB,IAAjB,CAAsBC,IAAtB,CAA2Bf,MAA3B,CADkB,CAZkC,CAgBtDgB,KAAMA,QAAS,EAAG,CAAE,IAAA,CAAKC,EAAL,CAAQC,gBAAR,CAAyB,OAAzB,CAAkC,IAAlC,CAAuCT,IAAvC,CAAF,CAhBoC,CAiBtDU,MAAOA,QAAS,EAAG,CAAE,IAAA,CAAKF,EAAL,CAAQG,mBAAR,CAA4B,OAA5B,CAAqC,IAArC,CAA0CX,IAA1C,CAAF,CAjBmC;AAkBtDY,OAAQA,QAAS,EAAG,CAAE,IAAA,CAAKF,KAAL,EAAF,CAlBkC,CAoBtDV,KAAMA,QAAS,EAAG,CAChB,IAAMD,SAAW,IAAA,CAAKS,EAAL,CAAQK,OAAR,CAAgBC,aAAhB,CAA8B,uBAA9B,CACjB,IAAI,CAACf,QAAL,CACE,KAAUgB,MAAJ,CAAU,2CAAV,CAAN,CAEFhB,QAAA,CAASiB,UAAT,CAAoB,qBAApB,CAAA,CAA2CC,aAA3C,CAAyD,IAAzD,CAA8DT,EAA9D,CALgB,CApBoC,CA4BtDU,UAAWA,QAAS,EAAG,CACrB,MAAO,KAAA,CAAK3B,MAAL,CAAYc,IAAZ,CAAiB,IAAjB,CAAsBC,IAAtB,CAA2Bf,MAA3B,CADc,CA5B+B,CAAvC,CADiG;",
"sources":["node_modules/aframe-extras/src/misc/checkpoint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$aframe_extras$src$misc$checkpoint\"] = function(global,require,module,exports) {\nmodule.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","AFRAME","registerComponent","schema","offset","default","x","y","z","type","init","active","targetEl","fire","bind","THREE","Vector3","update","copy","data","play","el","addEventListener","pause","removeEventListener","remove","sceneEl","querySelector","Error","components","setCheckpoint","getOffset"]
}
