shadow$provide.module$node_modules$ngraph_DOT_graph$index=function(global,require,module,exports){function indexOfElementInArray(element,array){if(!array)return-1;if(array.indexOf)return array.indexOf(element);var len=array.length,i;for(i=0;i<len;i+=1)if(array[i]===element)return i;return-1}function Node(id,data){this.id=id;this.links=null;this.data=data}function Link(fromId,toId,data,id){this.fromId=fromId;this.toId=toId;this.data=data;this.id=id}function makeLinkId(fromId,toId){return fromId.toString()+
"\ud83d\udc49 "+toId.toString()}module.exports=function(options){function recordLinkChangeReal(link,changeType){changes.push({link:link,changeType:changeType})}function recordNodeChangeReal(node,changeType){changes.push({node:node,changeType:changeType})}function addNode(nodeId,data){if(void 0===nodeId)throw Error("Invalid node identifier");enterModification();var node=getNode(nodeId);node?(node.data=data,recordNodeChange(node,"update")):(node=new Node(nodeId,data),recordNodeChange(node,"add"));nodes.set(nodeId,
node);exitModification();return node}function getNode(nodeId){return nodes.get(nodeId)}function removeNode(nodeId){var node=getNode(nodeId);if(!node)return!1;enterModification();var prevLinks=node.links;if(prevLinks){node.links=null;for(var i=0;i<prevLinks.length;++i)removeLink(prevLinks[i])}nodes.delete(nodeId);recordNodeChange(node,"remove");exitModification();return!0}function createSingleLink(fromId,toId,data){var linkId=makeLinkId(fromId,toId);return new Link(fromId,toId,data,linkId)}function createUniqueLink(fromId,
toId,data){var linkId=makeLinkId(fromId,toId),isMultiEdge=multiEdges.hasOwnProperty(linkId);if(isMultiEdge||getLink(fromId,toId))isMultiEdge||(multiEdges[linkId]=0),linkId="@"+ ++multiEdges[linkId],linkId=makeLinkId(fromId+linkId,toId+linkId);return new Link(fromId,toId,data,linkId)}function getNodeCount(){return nodes.size}function getLinkCount(){return links.length}function removeLink(link){if(!link)return!1;var idx=indexOfElementInArray(link,links);if(0>idx)return!1;enterModification();links.splice(idx,
1);var fromNode=getNode(link.fromId),toNode=getNode(link.toId);fromNode&&(idx=indexOfElementInArray(link,fromNode.links),0<=idx&&fromNode.links.splice(idx,1));toNode&&(idx=indexOfElementInArray(link,toNode.links),0<=idx&&toNode.links.splice(idx,1));recordLinkChange(link,"remove");exitModification();return!0}function getLink(fromNodeId,toNodeId){var node=getNode(fromNodeId),i;if(!node||!node.links)return null;for(i=0;i<node.links.length;++i){var link=node.links[i];if(link.fromId===fromNodeId&&link.toId===
toNodeId)return link}return null}function noop(){}function enterModificationReal(){suspendEvents+=1}function exitModificationReal(){--suspendEvents;0===suspendEvents&&0<changes.length&&(graphPart.fire("changed",changes),changes.length=0)}function forEachNode(callback){if("function"!==typeof callback)throw Error("Function is expected to iterate over graph nodes. You passed "+callback);for(var valuesIterator=nodes.values(),nextValue=valuesIterator.next();!nextValue.done;){if(callback(nextValue.value))return!0;
nextValue=valuesIterator.next()}}options=options||{};"uniqueLinkId"in options&&(console.warn("ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\nUse `multigraph` option instead\n","\n","Note: there is also change in default behavior: From now on each graph\nis considered to be not a multigraph by default (each edge is unique)."),options.multigraph=options.uniqueLinkId);void 0===options.multigraph&&(options.multigraph=!1);if("function"!==typeof Map)throw Error("ngraph.graph requires `Map` to be defined. Please polyfill it before using ngraph");
var nodes=new Map,links=[],multiEdges={},suspendEvents=0,createLink=options.multigraph?createUniqueLink:createSingleLink,changes=[],recordLinkChange=noop,recordNodeChange=noop,enterModification=noop,exitModification=noop,graphPart={addNode:addNode,addLink:function(fromId,toId,data){enterModification();var fromNode=getNode(fromId)||addNode(fromId),toNode=getNode(toId)||addNode(toId);data=createLink(fromId,toId,data);links.push(data);fromNode.links?fromNode.links.push(data):fromNode.links=[data];fromId!==
toId&&(toNode.links?toNode.links.push(data):toNode.links=[data]);recordLinkChange(data,"add");exitModification();return data},removeLink:removeLink,removeNode:removeNode,getNode:getNode,getNodeCount:getNodeCount,getLinkCount:getLinkCount,getLinksCount:getLinkCount,getNodesCount:getNodeCount,getLinks:function(nodeId){return(nodeId=getNode(nodeId))?nodeId.links:null},forEachNode:forEachNode,forEachLinkedNode:function(nodeId,callback,oriented){var node=getNode(nodeId);if(node&&node.links&&"function"===
typeof callback){if(oriented){a:{oriented=node.links;for(node=0;node<oriented.length;++node){var quitFast=oriented[node];if(quitFast.fromId===nodeId&&(quitFast=callback(nodes.get(quitFast.toId),quitFast))){nodeId=!0;break a}}nodeId=void 0}return nodeId}a:{oriented=node.links;for(node=0;node<oriented.length;++node)if(quitFast=oriented[node],quitFast=callback(nodes.get(quitFast.fromId===nodeId?quitFast.toId:quitFast.fromId),quitFast)){nodeId=!0;break a}nodeId=void 0}return nodeId}},forEachLink:function(callback){var length;
if("function"===typeof callback){var i=0;for(length=links.length;i<length;++i)callback(links[i])}},beginUpdate:enterModification,endUpdate:exitModification,clear:function(){enterModification();forEachNode(function(node){removeNode(node.id)});exitModification()},hasLink:getLink,hasNode:getNode,getLink:getLink};eventify(graphPart);(function(){var realOn=graphPart.on;graphPart.on=function(){graphPart.beginUpdate=enterModification=enterModificationReal;graphPart.endUpdate=exitModification=exitModificationReal;
recordLinkChange=recordLinkChangeReal;recordNodeChange=recordNodeChangeReal;graphPart.on=realOn;return realOn.apply(graphPart,arguments)}})();return graphPart};var eventify=require("module$node_modules$ngraph_DOT_events$index")}
//# sourceMappingURL=module$node_modules$ngraph_DOT_graph$index.js.map
