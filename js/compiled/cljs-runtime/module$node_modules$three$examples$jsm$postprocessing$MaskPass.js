shadow$provide.module$node_modules$three$examples$jsm$postprocessing$MaskPass=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ClearMaskPass=exports.MaskPass=void 0;var _Pass=require("module$node_modules$three$examples$jsm$postprocessing$Pass");global=function(scene,camera){_Pass.Pass.call(this);this.scene=scene;this.camera=camera;this.clear=!0;this.inverse=this.needsSwap=!1};exports.MaskPass=global;global.prototype=Object.assign(Object.create(_Pass.Pass.prototype),
{constructor:global,render:function(renderer,writeBuffer,readBuffer){var context=renderer.getContext(),state=renderer.state;state.buffers.color.setMask(!1);state.buffers.depth.setMask(!1);state.buffers.color.setLocked(!0);state.buffers.depth.setLocked(!0);if(this.inverse){var writeValue=0;var clearValue=1}else writeValue=1,clearValue=0;state.buffers.stencil.setTest(!0);state.buffers.stencil.setOp(context.REPLACE,context.REPLACE,context.REPLACE);state.buffers.stencil.setFunc(context.ALWAYS,writeValue,
4294967295);state.buffers.stencil.setClear(clearValue);state.buffers.stencil.setLocked(!0);renderer.setRenderTarget(readBuffer);this.clear&&renderer.clear();renderer.render(this.scene,this.camera);renderer.setRenderTarget(writeBuffer);this.clear&&renderer.clear();renderer.render(this.scene,this.camera);state.buffers.color.setLocked(!1);state.buffers.depth.setLocked(!1);state.buffers.stencil.setLocked(!1);state.buffers.stencil.setFunc(context.EQUAL,1,4294967295);state.buffers.stencil.setOp(context.KEEP,
context.KEEP,context.KEEP);state.buffers.stencil.setLocked(!0)}});global=function(){_Pass.Pass.call(this);this.needsSwap=!1};exports.ClearMaskPass=global;global.prototype=Object.create(_Pass.Pass.prototype);Object.assign(global.prototype,{render:function(renderer){renderer.state.buffers.stencil.setLocked(!1);renderer.state.buffers.stencil.setTest(!1)}})}
//# sourceMappingURL=module$node_modules$three$examples$jsm$postprocessing$MaskPass.js.map
